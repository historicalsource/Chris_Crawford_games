;
;BAT25T.ASM  JUNE 20, 1983
;
KGLDR	DB	0,$20,$60,$10,$7F,$50,$20,$70
	DB	$40,$30,$60,$10,$70,$30,$50,$20
KGLOYT	DB	0,$30,$40,$70,$60,$10,$20,$50
	DB	$60,$40,$40,$10,$50,$60,$20,$70
AKNTLD	DB	$70,$40,$40,$40,$7F,$30,$60,$70
	DB	$10,$50,$30,$50,$30,$60,$70,$70

P2TAB	DB	$18,$3C,$7E,$7E,$3C,$18
SC2TAB	DB	$A8,$A8,$A8,$A8
	DB	$A7,$A7,$A7,$A7
	DB	$A6,$A6,$A6,$A6
	DB	$A5,$A5,$A5,$A5
SC3TAB	DB	$AC,$AC,$AB,$AB
	DB	$AA,$AA,$A9,$A9
	DB	$A8,$A8,$A7,$A7
	DB	$A6,$A6,$A5,$A5
SC4TAB	DB	$AF,$AE,$AD,$AC
	DB	$AB,$AA,$A9,$A8
	DB	$A7,$A6,$A5,$A4
	DB	$A3,$A2,$A1,$A0
;
BITTAB	DB	0,0,0,0
	DB	$C0,$30,$C,3
	DB	$C3,$CC,$33,$3C
	DB	$3F,$CF,$F3,$FC
	DB	$FF,$FF,$FF,$FF
;
SHDTAB	DB	$82,$82,$8A,$A2
	DB	$AA,$AA,$AA,$AA
	DB	$AA,$AA,$AA,$AA
	DB	$AA,$AA,$AA,$AA
	DB	$AA,$AA,$AA,$AA
	DB	$AA,$AA,$AA,$AA
	DB	$2A,$A8,$A,$A0
	DB	2,$80
;
CRNTAB	DB	$82,$82,$82,$82
	DB	$8A,$A2,$8A,$A2
	DB	$AA,$AA,$AA,$AA
	DB	$AA,$AA,$AA,$AA
	DB	$AA,$AA,$AA,$AA
	DB	$AA,$AA,$AA,$AA
	DB	$AA,$AA,0,0,0,0
;
;tables
COLTAB	DB	$46,$36,$44,$66,$E,$8A,$C4,0,$12
;
PLCTAB	DB	72,81,63,90,54,99
	DB	45,108,36,117,27,126
	DB	18,135,9,144
;
LMTFTB
;Arthur
	DB	0,0,0,0,0,0,0,0
	DB	0,0,0,0,0,0,0,0
;Nosnitka
	DB	0,0,0,0,$C,$C,0,$30
	DB	$30,$C,$C,3,0,0,0,0
;Sremmus
	DB	0,0,0,0,$30,$33,$33,$3F
	DB	$33,$33,$30,0,0,0,0,0
;Drofwarc
	DB	0,0,0,$3,$C,$30,$30,$30
	DB	$30,$30,$C,$3,0,0,0,0
;Lancelot
	DB	0,0,0,0,$30,$30,$3C,$F
	DB	3,3,3,3,0,0,0,0
;Bors
	DB	0,0,3,$C,$30,$30,$3C,$C
	DB	$C,$C,$C,0,0,0,0,0
;Kay
	DB	0,0,0,3,$C,$C,$C,$F,$F
	DB	$C,$C,$C,0,0,0,0
;Galahad
	DB	0,0,3,3,3,$F,$F,3
	DB	3,3,3,3,0,0,0,0
;Mordred
	DB	0,0,0,0,0,0,0,3
	DB	$F,$3C,$30,0,0,0,0,0
;Tristran
	DB	0,0,3,$3,$3,$3,$F,$30
	DB	$30,$3C,$F,$3,0,0,0,0
;Lamerok
	DB	0,0,0,0,$C,$C,$C,$C
	DB	$C,$F,3,0,0,0,0,0
;Enemy King
	DB	0,0,0,0,$C,$C,$3,$3
	DB	3,$3,$C,$C,0,0,0,0
;Bedivere
	DB	0,0,0,3,3,3,$F,$F
	DB	$C,$C,$C,0,0,0,0,0
;Percivale
	DB	0,0,3,$C,$C,$F,$3,0
	DB	0,0,$F,$F,0,0,0,0
;Lucas
	DB	0,0,0,3,$C,$30,$30,0
	DB	3,3,3,3,0,0,0,0
;Gawain
	DB	0,0,0,0,$F,$F,$C,$C
	DB	$C,$C,$F,$F,0,0,0,0
RMTFTB
;Arthur
	DB	0,0,0,0,0,0,0,0
	DB	0,0,0,0,0,0,0,0
;Nosnitka
	DB	0,0,0,0,$30,$30,0,$C
	DB	$C,$30,$30,$C0,0,0,0,0
;Sremmus
	DB	0,0,0,0,$C,$CC,$CC,$FC
	DB	$CC,$CC,$C,0,0,0,0,0
;Drofwarc
	DB	0,0,0,$C0,$30,$C,$30,$C0
	DB	$30,$C,$30,$C0,0,0,0,0
;Lancelot
	DB	0,0,0,0,$C,$C,$3C,$F0
	DB	$C0,$C0,$C0,$C0,0,0,0,0
;Bors
	DB	0,0,$C0,$30,$C,$C,$3C,$30
	DB	$30,$30,$30,0,0,0,0,0
;Kay
	DB	0,0,0,$C0,$30,$30,$30,$F0,$F0
	DB	$30,$30,$30,0,0,0,0
;Galahad
	DB	0,0,$C0,$C0,$C0,$F0,$F0,$C0
	DB	$C0,$C0,$C0,$C0,0,0,0,0
;Mordred
	DB	0,0,0,0,$C,$3C,$F0,$C0
	DB	0,0,0,0,0,0,0,0
;Tristran
	DB	0,0,$C0,$C0,$C0,$C0,$F0,$C
	DB	$C,$3C,$F0,$C0,0,0,0,0
;Lamerok
	DB	0,0,0,0,$30,$30,$30,$30
	DB	$30,$F0,$C0,0,0,0,0,0
;Enemy King
	DB	0,0,0,0,$30,$30,$C0,$C0
	DB	$C0,$C0,$30,$30,0,0,0,0
;Bedivere
	DB	0,0,0,$30,$30,$30,$30,$30
	DB	$30,$30,$30,0,0,0,0,0
;Percivale
	DB	0,0,$C0,$30,$C,$C,0,$C0
	DB	$C0,$30,$F0,$F0,0,0,0,0
;Lucas
	DB	0,0,0,$C0,$30,$C,$C,0
	DB	$C0,$C0,$C0,$C0,0,0,0,0
;Gawain
	DB	0,0,0,0,$F0,$F0,0,0
	DB	$C0,$C0,$C0,$C0,0,0,0,0
;broken
RUNMTF
	DB	0,0,0,0
	DB	$C,$CC,$33,$30
	DB	$C,$CC,$33,$30
	DB	$C,$CC,$33,$30
	DB	$C,$CC,$33,$30
	DB	$C,$CC,$33,$30
	DB	0,0,0,0
	DB	0,0,0,0
;
LKMTAB
;Augusel
	DB	0,0,0,0,3,3,$C,$C
	DB	$30,$30,$30,$30,0,0,0,0
;Uryens
	DB	0,0,0,0,$30,$3C,$3C,$3F
	DB	$3F,$3C,$3C,$30,0,0,0,0
;Lot
	DB	0,0,0,$C,$C,$3C,$3C,0
	DB	0,$3C,$3C,$C,$C,0,0,0
;Idres
	DB	0,0,0,0,3,3,$F,$F
	DB	$3F,$3F,$F,3,0,0,0,0
;Colgrin
	DB	0,0,0,0,$30,$30,$30,$C
	DB	$C,$C,3,3,0,0,0,0
;Baldulf
	DB	0,0,0,0,3,3,3,3
	DB	3,3,3,$F,0,0,0,0
;Garwin
	DB	0,0,0,0,3,$C,$30,3
	DB	$C,$30,3,0,0,0,0,0
;Sater
	DB	0,0,0,0,0,$3F,3,$3F
	DB	3,$3F,3,$3F,0,0,0,0
;Penda
	DB	0,0,0,0,3,0,$F,0
	DB	$3F,0,$F,0,3,0,0,0
;Pellinore
	DB	0,0,0,0,3,$C,$33,$33
	DB	$C,3,$C,$30,0,0,0,0
;Cheldric
	DB	0,0,0,0,3,$C,$C,$33
	DB	$33,$C,$C,3,0,0,0,0
;Hengist
	DB	0,0,0,0,$F,$F,0,$F
	DB	$F,0,$F,$F,0,0,0,0
;Horsa
	DB	0,0,0,0,$3F,$3F,$30,$33
	DB	$33,$30,$3F,$3F,0,0,0,0
;Royns
	DB	0,0,0,0,$C,$C,3,3
	DB	3,3,$C,$C,0,0,0,0
;Hoel
	DB	0,0,0,0,3,$C,3,$30
	DB	$F,$30,3,$C,3,0,0,0
;
RKMTAB
;Augusel
	DB	0,0,0,0,$C0,$C0,$30,$30
	DB	$C,$C,$C,$C,0,0,0,0
;Uryens
	DB	0,0,0,0,$C,$3C,$3C,$FC
	DB	$FC,$3C,$3C,$C,0,0,0,0
;Lot
	DB	0,0,0,$30,$30,$3C,$3C
	DB	0,0,$3C,$3C,$30,$30,0,0,0
;Idres
	DB	0,0,0,0,$C0,$C0,$F0,$F0
	DB	$FC,$FC,$F0,$C0,0,0,0,0
;Colgrin
	DB	0,0,0,0,$C,$C,$C,$30
	DB	$30,$30,$C0,$C0,0,0,0,0
;Baldulf
	DB	0,0,0,0,$F0,0,$F0,0
	DB	$F0,0,0,0,0,0,0,0
;Garwin
	DB	0,0,0,0,$C0,$30,$C,$C0
	DB	$30,$C,$C0,0,0,0,0,0
;Sater
	DB	0,0,0,0,$C0,$FC,$C0,$FC
	DB	$C0,$FC,$C0,0,0,0,0,0
;Penda
	DB	0,0,0,0,$C0,0,$F0,0
	DB	$FC,0,$F0,0,$C0,0,0,0
;Pellinore
	DB	0,0,0,0,$C0,$30,$CC,$CC
	DB	$30,$C0,$30,$C,0,0,0,0
;Cheldric
	DB	0,0,0,0,$C0,$30,$30,$CC
	DB	$CC,$30,$30,$C0,0,0,0,0
;Hengist
	DB	0,0,0,0,$F0,$F0,0,$F0
	DB	$F0,0,$F0,$F0,0,0,0,0
;Horsa
	DB	0,0,0,0,$FC,$FC,$C,$CC
	DB	$CC,$C,$FC,$FC,0,0,0,0
;Royns
	DB	0,0,0,0,$30,$30,$C0,$C0
	DB	$C0,$C0,$30,$30,0,0,0,0
;Hoel
	DB	0,0,0,0,$C0,$30,$C0,$C
	DB	$F0,$C,$C0,$30,$C0,0,0,0
DIST:
DIST00: DB 99, 24, 23, 21, 17, 15, 14, 10, 10, 07, 10, 07, 04, 03, 03, 04
DIST01: DB 24, 99, 03, 03, 07, 09, 10, 14, 14, 17, 14, 19, 22, 24, 21, 26
DIST02: DB 23, 03, 99, 03, 07, 10, 10, 13, 14, 17, 13, 20, 22, 24, 21, 25
DIST03: DB 21, 03, 03, 99, 05, 07, 07, 11, 12, 15, 12, 17, 19, 22, 18, 24
DIST04: DB 17, 07, 07, 05, 99, 04, 03, 07, 08, 11, 07, 14, 15, 18, 14, 19
DIST05: DB 15, 09, 10, 07, 04, 99, 02, 05, 05, 08, 06, 10, 13, 15, 12, 18
DIST06: DB 14, 10, 10, 07, 03, 02, 99, 04, 05, 08, 05, 10, 12, 15, 11, 17
DIST07: DB 10, 14, 13, 11, 07, 05, 04, 99, 03, 04, 02, 08, 09, 11, 07, 13
DIST08: DB 10, 14, 14, 12, 08, 05, 05, 03, 99, 04, 05, 05, 08, 10, 08, 14
DIST09: DB 07, 17, 17, 15, 11, 08, 08, 04, 04, 99, 05, 04, 05, 07, 05, 10
DIST10: DB 10, 14, 13, 12, 07, 06, 05, 02, 05, 05, 99, 08, 09, 11, 07, 12
DIST11: DB 07, 19, 20, 17, 14, 10, 10, 08, 05, 04, 08, 99, 04, 06, 07, 11
DIST12: DB 04, 22, 22, 19, 15, 13, 12, 09, 08, 05, 09, 04, 99, 03, 04, 08
DIST13: DB 03, 24, 24, 22, 18, 15, 15, 11, 10, 07, 11, 06, 03, 99, 05, 06
DIST14: DB 03, 21, 21, 18, 14, 12, 11, 07, 08, 05, 07, 07, 04, 05, 99, 05
DIST15: DB 04, 26, 25, 24, 19, 18, 17, 13, 14, 10, 12, 11, 08, 06, 05, 99
;
;
;
FRCDST:
	DB	$80,$80,$80,$80
	DB	$7C,$78,$74,$70
	DB	$6C,$68,$64,$60
	DB	$5C,$58,$54,$50
	DB	$4C,$48,$44,$40
	DB	$3C,$38,$34,$30
	DB	$2C,$28,$24,$20
	DB	$1E,$1C,$1A,$18
;
;BAT25D.ASM  NOVEMBER 22, 1983
;
;this section is for the arithmetic routines
;
	ORG	$E0
PRDLO	ORG	*+1
PRDHI	ORG	*+1
MULTER	ORG	*+1
DIVSR	ORG	*+1
QUTNT	ORG	*+1
TMP1	ORG	*+1
TEMP2	ORG	*+1
TEMP3	ORG	*+1
KNTNO	ORG	*+1
SCNPTR	ORG	*+2
;
;hardware and OS declarations
;
RTCLKL	=	$14
ATRACT	=	$4D
SDMCTL	=	$22F
SDLSTL	=	$230
SDLSTH	=	$231
SSKCTL	=	$232
GPRIOR	=	$26F
PCOLR0	=	$2C0
PCOLR1	=	$2C1
PCOLR2	=	$2C2
PCOLR3	=	$2C3
COLOR4	=	$2C8
STICK	=	$278
CHBAS	=	$2F4
ICCMD2	=	$362
ICSTA2	=	$363
ICBAL2	=	$364
ICBAH2	=	$365
ICBLL2	=	$368
ICBLH2	=	$369
ICAX12	=	$36A
ICAX22	=	$36B
;
;
HPOSP0	=	$D000
HPOSP1	=	$D001
HPOSP2	=	$D002
HPOSP3	=	$D003
HPOSM0	=	$D004
SIZEP0	=	$D008
TRIG0	=	$D010
TRIG1	=	$D011
COLPT0	=	$D016
COLPF1	=	$D017
COLPF2	=	$D018
COLBAK	=	$D01A
GRACTL	=	$D01D
HITCLR	=	$D01E
CONSOL	=	$D01F
AUDF1	=	$D200
AUDC1	=	$D201
AUDF2	=	$D202
AUDC2	=	$D203
AUDF3	=	$D204
AUDC3	=	$D205
AUDF4	=	$D206
AUDC4	=	$D207
AUDCTL	=	$D208
RANDOM	=	$D20A
SKCTL	=	$D20F
PMBASE	=	$D407
NMIEN	=	$D40E
CIOV	=	$E456
SETVBV	=	$E45C
SYSVBV	=	$E45F
XITVBV	=	$E462
;
	ORG	$1D80
MISSLS	ORG	*+128
PLAYR0	ORG	*+128
PLAYR1	ORG	*+128
PLAYR2	ORG	*+128
PLAYR3	ORG	*+128

NOKNTS	=	32
;
	ORG	BATADD
	JMP	BEGIN
;
;warning: watch for 1K boundary here!
;
DLIST	DB	$70,$70,$70,$4E
	DW	SCNDAT
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$4E
	DW	SCNDAT+3920
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$E,$E,$E,$E,$E,$E,$E
	DB	$90,$82,2,$41
	DW	DLIST

;
;multiplies MULTER by DIVSR to get PRDLO, PRDHI
;
MULTPY	LDA	#0
	STA	PRDLO
	STA	PRDHI
	STA	TMP1
LOOP31	LSR	MULTER
	BCC	Y11
	CLC
	LDA	PRDLO
	ADC	DIVSR
	STA	PRDLO
	LDA	PRDHI
	ADC	TMP1
	STA	PRDHI
Y11	LDA	MULTER
	BEQ	Y12
	ASL	DIVSR
	ROL	TMP1
	BCC	LOOP31
Y12	RTS
;
;divides PRDLO, PRDHI by DIVSR to get quotient in PRDLO
;
DIVIDE	LDA	#0
	STA	MULTER
	LDY	#16
LOOP34	ASL	PRDLO
	ROL	PRDHI
	ROL	MULTER
	BCC	Y13
	LDA	MULTER
	SBC	DIVSR
	JMP	Y14
Y13	LDA	MULTER
	SEC
	SBC	DIVSR
	BCC	Y15
Y14	STA	MULTER
	INC	PRDLO
Y15	DEY
	BNE	LOOP34
	RTS
;
;declarations of parameters to be passed from mainline code
;
;
;declarations of local variables
;
KNTMAA	ORG	*+32	;knight men-at-arms
HLDKNT	ORG	*+1
KNTX	ORG	*+32
KNTY	ORG	*+32
BUFF1	ORG	*+1
BUFF2	ORG	*+1
BUFF3	ORG	*+1
MASK1	ORG	*+1
MASK2	ORG	*+1
MASK3	ORG	*+1
MOTIF	ORG	*+32
TEMPI	ORG	*+1
SHPOS0	ORG	*+1
SHPOS1	ORG	*+1
SCY	ORG	*+1
SCY1	ORG	*+1
DELAY	ORG	*+1
TIMSCL	ORG	*+1
CURSRY	ORG	*+1
CURSY1	ORG	*+1
CURSRX	ORG	*+1
CURSX1	ORG	*+1
UNITNO	ORG	*+1
TEMPD	ORG	*+1
KNEMAA	ORG	*+32
BUTFLG	ORG	*+1
HDIR	ORG	*+1
HRNGE	ORG	*+1
LRNGE	ORG	*+1
ERSFLG	ORG	*+1
OBJX	ORG	*+32
OBJY	ORG	*+32
CHRIS	ORG	*+32
SRNGE	ORG	*+32
LDIR	ORG	*+32
SDIR	ORG	*+32
RANGE	ORG	*+32
TCHRIS	ORG	*+1
TKNTX	ORG	*+1
TKNTY	ORG	*+1
LEADER	ORG	*+32	;leadership array
SELECT	ORG	*+32	;selected to accompany king
VICTIM	ORG	*+1
P2YSAV	ORG	*+1
P3YSAV	ORG	*+1
ABONUS	ORG	*+1
KNTSTG	ORG	*+32
EXPTML	ORG	*+2
EXPTMH	ORG	*+2
KNTDRW	ORG	*+1
BRKFLG	ORG	*+32
LOYLTY	ORG	*+32
ESUML	ORG	*+1
ESUMH	ORG	*+1
ASUML	ORG	*+1
ASUMH	ORG	*+1
TOTES	ORG	*+1
TOTAS	ORG	*+1
DANGRL	ORG	*+1
DANGRH	ORG	*+1
IKNT	ORG	*+1
DIR	ORG	*+1
TEMPOX	ORG	*+1
TEMPOY	ORG	*+1
BESTLO	ORG	*+1
BESTHI	ORG	*+1
BDIR	ORG	*+1
FRNFLG	ORG	*+1
DELTAX	ORG	*+1
DELTAY	ORG	*+1
ENDFLG	ORG	*+1
TEMPLO	ORG	*+1
TEMPHI	ORG	*+1
LIAMSZ	ORG	*+1
LFAMSZ	ORG	*+1
VIAMSZ	ORG	*+1
VFAMSZ	ORG	*+1
MAASUM	ORG	*+1
KNTSUM	ORG	*+1
BUTMSK	ORG	*+1
INTSIZ	ORG	*+2
VASMAA	ORG	*+1
OVRMAA	ORG	*+1
AUX1	ORG	*+1
AUX2	ORG	*+1
KINGY	ORG	*+1
BODCNT	ORG	*+1
IOFKNT	ORG	*+2
NMEARM	ORG	*+1
NMEKNT	ORG	*+1
PSTKIL	ORG	*+1
INVADR	ORG	*+1
AUXMAA	ORG	*+1
SLCFLG	ORG	*+1
;
CALDGR	STY	DIR
	LDA	#0
	STA	DANGRL
	STA	DANGRH
	STA	TOTES
	STA	TOTAS
	STA	ESUML
	STA	ESUMH
	STA	ASUML
	STA	ASUMH
	STA	FRNFLG
	LDX	KNTNO
	JSR	STEP
	LDX	#$1F
LOOP60	STX	IKNT
	LDA	SELECT,X
	BMI	X53
	JMP	X66
X53	CPX	KNTNO
	BNE	X60
	LDA	#8
	JMP	X82
X60	LDA	TEMPOX
	CMP	KNTX,X
	BCC	X54
	SBC	KNTX,X
	BCS	X55
X54	LDA	KNTX,X
	SEC
	SBC	TEMPOX
X55	STA	DELTAX
	LDA	TEMPOY
	SEC
	SBC	KNTY,X
	JSR	ABSVAL
	STA	DELTAY
	CMP	#8
	BCS	X81
	LDA	DELTAX
	CMP	#9
	BCS	X81
	TXA
	AND	#$10
	STA	TMP1
	LDA	KNTNO
	AND	#$10
	EOR	TMP1
	BNE	X81
	LDA	#$FF
	STA	FRNFLG
	RTS
X81	LDA	DELTAX
	CLC
	ADC	DELTAY
	BCC	X82
	LDA	#$FF
X82	STA	DIVSR
	LDA	#0
	STA	PRDLO
	STA	MULTER
	LDA	KNEMAA,X
	CLC		;##
	ADC	#1	;##
	ASL	A
	ROL	MULTER
	ASL	A
	ROL	MULTER
	ASL	A
	ROL	MULTER
	ASL	A
	ROL	MULTER
	STA	PRDHI
	JSR	DIVIDE+4
	LDX	IKNT
	LDA	KNEMAA,X
	CPX	#$10
	BCS	X63
	ADC	TOTAS
	STA	TOTAS
	LDA	PRDLO
	CLC
	ADC	ASUML
	STA	ASUML
	LDA	ASUMH
	ADC	PRDHI
	STA	ASUMH
	JMP	X66
X63	CLC
	ADC	TOTES
	STA	TOTES
	LDA	PRDLO
	CLC
	ADC	ESUML
	STA	ESUML
	LDA	ESUMH
	ADC	PRDHI
	STA	ESUMH
X66	DEX
	BMI	X67
	JMP	LOOP60
X67	LDA	KNTNO
	AND	#$10
	BEQ	X68
	LDX	ASUML
	LDA	ESUML
	STA	ASUML
	STX	ESUML
	LDX	ASUMH
	LDA	ESUMH
	STA	ASUMH
	STX	ESUMH
	LDA	TOTAS
	LDX	TOTES
	STX	TOTAS
	STA	TOTES
X68	LDA	#0
	STA	MULTER
	LDA	ESUMH
	STA	PRDHI
	LDA	ESUML
	STA	PRDLO
	LDA	ASUMH
LOOP54	ASL	PRDLO
	ROL	PRDHI
	ROL	MULTER
	BCC	Y32
	LDA	#$FF
	STA	DANGRH
	STA	DANGRL
	RTS
Y32	ASL	ASUML
	ASL	A
	BCC	LOOP54
	ROR	A
	ROR	ASUML
	STA	DIVSR
	LSR	MULTER
	ROR	PRDHI
	ROR	PRDLO
	JSR	DIVIDE+4
	LDA	PRDHI
	STA	ASUMH
	LDA	PRDLO
	STA	ASUML
;
	LDA	TOTES
	STA	PRDHI
	LDA	TOTAS
	STA	DIVSR
	LDA	#0
	STA	PRDLO
	JSR	DIVIDE
	LDA	PRDLO
	LSR	PRDHI
	ROR	A
	LSR	PRDHI
	ROR	A
	LSR	PRDHI
	ROR	A
	LSR	PRDHI
	ROR	A
	CLC
	ADC	ASUML
	STA	ASUML
	LDA	PRDHI
	ADC	ASUMH
	STA	ASUMH
	LDY	KNTNO
	LDA	BRKFLG,Y
	BMI	X59
	LDA	ASUML
	STA	DANGRL
	LDA	ASUMH
	STA	DANGRH
	RTS
X59	LDA	TEMPOY
	CPY	#$10
	BCS	X78
	LDA	#$50
	SEC
	SBC	TEMPOY
X78	ASL	A
	CLC
	ADC	ASUML
	STA	DANGRL
	LDA	ASUMH
	ADC	PRDHI
	BCC	X70
	LDA	#$FF
	STA	DANGRL
X70	STA	DANGRH
	RTS
;
STEP	LDA	KNTX,X
	CLC
	ADC	STEP1X,Y
	CMP	#6
	BNE	X93
	JSR	SETFFG
	LDA	#7
X93	CMP	#144
	BNE	X90
	JSR	SETFFG
	LDA	#143
X90	STA	TEMPOX
	LDA	KNTY,X
	CLC
	ADC	STEP1Y,Y
	CMP	#1
	BNE	X91
	JSR	SETFFG
	LDA	#2
	BNE	X92
X91	CMP	#78
	BNE	X92
	JSR	SETFFG
	LDA	#77
X92	STA	TEMPOY
	RTS
;
SETFFG	LDA	#$FF
	STA	FRNFLG
	RTS
;
STEP1X	DB	0,0,1,0,$FF
STEP1Y	DB	0,$FF,0,1,0
;
FNDSAF	LDA	#$FF
	STA	BESTLO
	STA	BESTHI
	LDA	#0
	STA	BDIR
	STA	DIR
	TAY
LOOP62	JSR	CALDGR
	BIT	FRNFLG
	BMI	X74
	LDA	DANGRH
	CMP	BESTHI
	BCC	X73
	BNE	X74
	LDA	DANGRL
	CMP	BESTLO
	BCS	X74
X73	LDA	DIR
	BEQ	X74
	STA	BDIR
	LDA	DANGRL
	STA	BESTLO
	LDA	DANGRH
	STA	BESTHI
X74	INC	DIR
	LDY	DIR
	CPY	#5
	BNE	LOOP62
	RTS
;
FNDNGR	LDA	#0
	STA	BESTLO
	STA	BESTHI
	STA	BDIR
	STA	DIR
	TAY
LOOP63	JSR	CALDGR
	BIT	FRNFLG
	BMI	X75
	LDA	ESUMH
	CMP	BESTHI
	BCC	X75
	BNE	X76
	LDA	ESUML
	CMP	BESTLO
	BCC	X75
	BEQ	X75
X76	LDA	ESUML
	STA	BESTLO
	LDA	ESUMH
	STA	BESTHI
	LDA	DIR
	STA	BDIR
X75	INC	DIR
	LDY	DIR
	CPY	#5
	BNE	LOOP63
	RTS
;
CURTAB	DB	$FF,$FF,$81,$81,$81,$81,$81
	DB	$81,$81,$81,$81,$81,$FF,$FF
CR1TAB	DB	0,0,0,0,$21,$12,$C,$C,$12,$21,0,0,0,0
LIMTAB	DB	$BE,$C0
;
;SUBROUTINE DNUMBR
;displays a number with leading zero suppress
;
DNUMBR	LDX	#$FF
	STX	TEMPD
	SEC
LOOP43	INX
	SBC	#100
	BCC	X62
	INC	TEMPD
	JMP	LOOP43
X62	PHA
	TXA
	BEQ	X61
	ADC	#$10
	STA	TXTWDW,Y
	INY
X61	PLA
	ADC	#100
	LDX	#$FF
	SEC
LOOP44	INX
	SBC	#10
	BCS	LOOP44
	PHA
	TXA
	BNE	X84
	BIT	TEMPD
	BMI	X85
X84	ADC	#$10
	STA	TXTWDW,Y
	INY
X85	PLA
	ADC	#$1A
	STA	TXTWDW,Y
	INY
	LDA	#0
	STA	TXTWDW,Y
	INY
	RTS
;
;subroutine DRAWSD draws shield of unit in X-register
;
DRAWSD	STX	KNTDRW
	LDA	KNTY,X
	ASL	A
	STA	DIVSR
	LDA	#40
	STA	MULTER
	JSR	MULTPY
	LDX	KNTDRW
	LDA	KNTX,X
	LSR	A
	LSR	A
	CLC
	ADC	PRDLO
	STA	PRDLO
	BCC	X00
	INC	PRDHI
X00	LDA	PRDLO
	CLC
	ADC	#SCNDAT&$FF
	STA	SCNPTR
	LDA	PRDHI
	ADC	#SCNDAT/256
	STA	SCNPTR+1
;
	LDA	KNTX,X
	AND	#3
	STA	TMP1
	LDA	BRKFLG,X
	BEQ	X96
	LDX	#$1F
LOOP33	LDA	RUNMTF,X
	STA	MOTIF,X
	DEX
	BPL	LOOP33
	BMI	X98
X96	CPX	#11
	BNE	Y22
	LDX	CASTLE
	BNE	Y23
Y22	CPX	#$10
	BCC	X04
	CPX	#$1F
	BNE	Y43
	LDX	AUX2
	BNE	Y23
Y43	LDX	OPPONT
Y23	DEX
	TXA
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	ORA	#$F
	TAX
	LDY	#$1F
LOOP41	LDA	RKMTAB,X
	STA	MOTIF,Y
	DEY
	LDA	LKMTAB,X
	STA	MOTIF,Y
	DEX
	DEY
	BPL	LOOP41
	BMI	X98
X04	TXA
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	ORA	#$F
	TAX
	LDY	#$1F
LOOP11	LDA	RMTFTB,X
	STA	MOTIF,Y
	DEY
	LDA	LMTFTB,X
	STA	MOTIF,Y
	DEX
	DEY
	BPL	LOOP11
;
X98	LDA	#1
	JSR	STALL
	LDX	#0
LOOP04	JSR	GRONGE
	STA	BUFF1
	INX
	JSR	GRONGE
	STA	BUFF2
	INX
	STX	TEMP2
	LDA	#0
	STA	BUFF3
	STA	MASK3
	LDA	#$FF
	STA	MASK1
	STA	MASK2
	LDY	TMP1
	BEQ	LOOP08
LOOP09	LSR	BUFF1
	ROR	BUFF2
	ROR	BUFF3
	LSR	BUFF1
	ROR	BUFF2
	ROR	BUFF3
	LSR	MASK1
	ROR	MASK2
	ROR	MASK3
	LSR	MASK1
	ROR	MASK2
	ROR	MASK3
	DEY
	BNE	LOOP09
LOOP08	LDA	ERSFLG
	BEQ	Y03
	BMI	Y03
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	TAX
	LDA	ERSFLG
	AND	#$1F
	ASL	A
	ASL	A
	ASL	A
	CMP	RANDOM
	BCC	Y04
	INX
Y04	TXA
	ASL	A
	ASL	A
	STA	TEMP3
	LDA	RANDOM
	AND	#3
	ORA	TEMP3
	TAX
	LDA	BITTAB,X
Y03	AND	BUFF1,Y
	EOR	(SCNPTR),Y
	AND	MASK1,Y
	EOR	(SCNPTR),Y
	STA	(SCNPTR),Y
	INY
	CPY	#3
	BNE	LOOP08
;
	LDX	TEMP2
	LDA	SCNPTR
	CLC
	ADC	#40
	STA	SCNPTR
	BCC	X01
	INC	SCNPTR+1
X01	CPX	#$1E
	BEQ	Y10
	JMP	LOOP04
Y10	RTS
;
GRONGE	LDA	SHDTAB,X
	LDY	KNTDRW
	BNE	X06
	LDA	CRNTAB,X
	LSR	A
	JMP	X02
X06	CPY	#$10
	BNE	X08
	LDA	CRNTAB,X
	JMP	X02
X08	BCS	X02
	LSR	A
X02	ORA	MOTIF,X
	RTS
;
STALL	CLC
	ADC	RTCLKL
LOOP26	CMP	RTCLKL
	BNE	LOOP26
	RTS
;
;extracts square root of single-byte value
;
SQRT1	LDX	#0
LOOP39	CMP	SQRTAB,X
	BCC	Y16
	BEQ	Y16
	INX
	BNE	LOOP39
Y16	TXA
	RTS
;
SQRTAB	DB	0,2,6,12,20,30,42,56,72,90,110,132,156,182,210,240
;
;
;BAT25M.ASM   NOVEMBER 22, 1983
;battle scene for EXCALIBUR
	LIST	I
;
	INCLUDE	D4:EQUATE.DAT
	INCLUDE	D4:BAT25D.ASM
	INCLUDE	D4:BAT25T.ASM
	INCLUDE	D4:BAT25I.ASM
;
;clear screen RAM
;
BEGIN	LDA	#SCNDAT&$FF
	STA	SCNPTR
	LDA	#SCNDAT/256
	STA	SCNPTR+1
LOOP07	LDA	#0
	TAY
LOOP00	STA	(SCNPTR),Y
	INC	SCNPTR
	BNE	LOOP00
	INC	SCNPTR+1
	LDA	SCNPTR+1
	CMP	#[SCNDAT/256]+$1D
	BNE	LOOP07
;
;set colors
	LDX	#9
LOOP01	LDA	COLTAB,X
	STA	PCOLR0,X
	DEX
	BPL	LOOP01
;
;set graphics registers
	LDA	#$40
	STA	NMIEN
	JSR	CLRVBI
	LDA	#0
	STA	AUDCTL
	LDA	#DLIST&$FF
	STA	SDLSTL
	LDA	#DLIST/256
	STA	SDLSTH
	LDA	#$2E
	STA	SDMCTL
	LDA	#3
	STA	GRACTL
	STA	SSKCTL
	STA	SKCTL
	LDA	#$11
	STA	GPRIOR
	LDA	#[PLAYR0-512]/256
	STA	PMBASE
	LDA	#$E0
	STA	CHBAS
	LDA	#0
	LDX	#3
LOOP02	STA	HPOSP0,X
	STA	HPOSM0,X
	STA	SIZEP0,X
	DEX
	BPL	LOOP02
	STX	DEDKNG
	STX	UNITNO
	STA	BUTFLG
	STA	HITCLR
	STA	ENDFLG
	STA	BUTMSK
	STA	VASMAA
	STA	OVRMAA
	STA	AUX1
	STA	AUX2
	STA	INTSIZ
	STA	INTSIZ+1
	STA	IOFKNT
;
;clear out player RAM
;
	TAX
LOOP03	STA	MISSLS,X
	STA	PLAYR0,X
	STA	PLAYR2,X
	INX
	BNE	LOOP03
	LDA	#1
	STA	SIZEP0
;
	LDX	#$1F
	LDA	#0
LOOP22	STA	SELECT,X
	STA	KNTMAA,X
	DEX
	BPL	LOOP22
;
	LDY	#0
	LDA	VBISAV
	CMP	#5
	BEQ	Y25
	LDY	OPPONT
Y25	STY	INVADR
;
	LDY	OPPONT
	LDX	FLDKNT,Y
	LDA	FLDARM,Y
	CPY	INVADR
	BEQ	Y46
	LDX	HOMKNT,Y
	LDA	HOMARM,Y
Y46	STA	NMEARM
	STX	NMEKNT
	LDX	#1
	JSR	FIGXTM
	LDY	#0
	LDX	#0
	JSR	FIGXTM
;
	LDX	OPPONT
	LDA	NMEKNT
	STA	IOFKNT+1
	CLC
	ADC	#$10
	TAY
LOOP23	JSR	SETLDL
	DEY
	CPY	#$10
	BCS	LOOP23
	LDA	#$10
	STA	LOYLTY+16
;
;set SELECT values of selected knights
;
	LDX	#$F
LOOP51	LDA	KNTIN,X
	BEQ	Y34
	LDA	KNTCOL,X
	BMI	Y34
	LDA	#$FF
	BMI	Y35
Y34	LDA	#0
Y35	STA	SELECT,X
	LDA	KNTARM,X
	CLC
	ADC	#1
	STA	KNTMAA,X
	INC	IOFKNT
	DEX
	BNE	LOOP51
	LDA	#$FF
	STA	SELECT
	LDA	KNTARM
	CLC
	ADC	#1
	STA	KNTMAA
;
	LDA	VBISAV
	CMP	#8
	BNE	Y19
	LDX	CASTLE
	STX	AUX1
	LDA	ARMSIZ,X
	CLC
	ADC	KGKNTS,X
	ADC	#1
	STA	KNTMAA+11
	STA	VASMAA
	LDA	#$FF
	STA	SELECT+11
	LDA	#$10
	STA	LOYLTY+11
;
Y19	LDY	OPPONT
	LDA	NMEARM
	LSR	A
	LSR	A
	LSR	A
	STA	KNTMAA+16
	LDA	NMEARM
	SEC
	SBC	KNTMAA+16
	TAY
	BEQ	X40
	LDX	#$10
X43	INC	KNTMAA,X
	DEY
	BEQ	X40
X42	INX
	TXA
	AND	#$F
	CMP	NMEKNT
	BCC	X41
	BEQ	X41
	LDX	#$10
X41	LDA	SELECT,X
	BPL	X42
	BMI	X43
;
X40	LDX	#$1F
LOOP53	LDA	SELECT,X
	BPL	Y31
	INC	KNTMAA,X
Y31	DEX
	CPX	#$F
	BNE	LOOP53
;
;bring in overlord
;
	LDX	OPPONT
	LDA	LIEGE,X
	CMP	#$10
	BCS	Y24
	STA	AUX2
	TXA
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	CLC
	ADC	AUX2
	TAX
	LDY	DIST,X
	LDA	FRCDST,Y
	STA	MULTER
	LDY	AUX2
	LDA	HOMARM,Y
	STA	DIVSR
	JSR	MULTPY
	LDA	PRDHI
	CLC
	ADC	#1
	LDX	AUX2
	LDY	#$1F
	STA	OVRMAA
	STA	KNTMAA,Y
	JSR	SETLDL
;
Y24	LDY	#$F
LOOP45	LDA	SELECT,Y
	BPL	Y21
	CPY	#11
	BEQ	Y21
	LDA	AKNTLD,Y
	STA	LEADER,Y
	TYA
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	TAX
	LDA	KNTKNT,X
	STA	LOYLTY,Y
Y21	DEY
	BPL	LOOP45
	LDA	#$10
	STA	LOYLTY
;
;add up total strengths
;
	LDX	#$1F
LOOP48	LDA	SELECT,X
	BEQ	Y29
	LDA	KNTMAA,X
	CLC
	ADC	INTSIZ+1
	STA	INTSIZ+1
Y29	DEX
	CPX	#$F
	BNE	LOOP48
;
LOOP49	LDA	SELECT,X
	BEQ	Y30
	LDA	KNTMAA,X
	CLC
	ADC	INTSIZ
	STA	INTSIZ
Y30	DEX
	BPL	LOOP49
;
;figure peasant kill
;
	LDX	#$F
	LDY	OPPONT
	LDA	VBISAV
	CMP	#5
	BEQ	FIGPST
	LDX	#$1F
	LDY	#0
	CMP	#1
	BEQ	FIGPST
	LDY	CASTLE
FIGPST	LDA	ACTCRP,Y
	STA	PRDLO
	LDA	#0
	STA	PRDHI
	TXA
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	TAY	;gets invader value (0 or 1) in Y
	LDA	EXPTMH,Y
	STA	TEMP2
	LDA	EXPTML,Y
	LSR	TEMP2
	BEQ	X64
	SEC
	LDA	#$FF
X64	ROR	A
	STA	DIVSR
	JSR	DIVIDE
	LDY	PRDLO
	INY	;guarantees at least one casualty
	LDA	#0
	STA	PSTKIL
	STX	TEMP2
LOOP57	LDX	TEMP2
	LDA	#0
	STA	TEMP3
LOOP52	LDA	SELECT,X
	BEQ	Y27
	LDA	KNTMAA,X
	CMP	#2
	BCC	Y27
	DEC	KNTMAA,X
	INC	PSTKIL
	INC	TEMP3
	DEY
	BEQ	Y36
Y27	DEX
	TXA
	AND	#$F
	CMP	#$F
	BNE	LOOP52
	LDA	TEMP3
	BNE	LOOP57
;
;display peasant kill
;
Y36	LDY	#12
	LDX	#4
	JSR	DWORD2
	LDX	#5
	JSR	DWORD2
	LDA	PSTKIL
	JSR	DNUMBR
;
;position all knights
;
	LDX	#0
LOOP13	LDY	#0
LOOP14	LDA	SELECT,X
	BEQ	X11
	LDA	PLCTAB,Y
	STA	KNTX,X
	STA	OBJX,X
	LDA	#5
	CPX	#$10
	BCS	X10
	LDA	#74
X10	STA	KNTY,X
	STA	OBJY,X
	LDA	KNTMAA,X
	STA	KNEMAA,X
	LDA	#$FF
	STA	KNTSTG,X
	LDA	#0
	STA	BRKFLG,X
	INY
X11	INX
	CPX	#$10
	BEQ	LOOP13
	CPX	#$20
	BNE	LOOP14
;
;draw each knight
;
	LDA	#$FF
	STA	ERSFLG
	LDX	#$1F
	STX	KNTNO
LOOP05	LDA	SELECT,X
	BPL	X05
	JSR	DRAWSD
X05	DEC	KNTNO
	LDX	KNTNO
	BPL	LOOP05
;
;draw cursor 0
;
	LDX	#$32
	STX	SCY
	LDA	#$74
	STA	SHPOS0
	STA	HPOSP0
	LDA	#37
	STA	CURSRY
	LDA	#72
	STA	CURSRX
	LDY	#13
LOOP18	LDA	CURTAB,Y
	STA	PLAYR0,X
	INX
	DEY
	BPL	LOOP18
;
;enable VBI
;
	JSR	SETVBI
;
X65	LDA	CONSOL
	AND	#1
	BNE	X65	;wait for START pressed
	LDX	#160
LOOP56	STA	TXTWDW,X
	DEX
	BNE	LOOP56
	STA	SLCFLG
;
;movement loop
;
X33	LDX	#0
LOOP24	STX	KNTNO
;
;pause check
;
	LDA	SLCFLG
	BEQ	Y57
	LDA	#10
	JSR	STALL
	JSR	CLRVBI
	JSR	PAUSDL
	LDA	#0
	STA	SLCFLG
	JSR	SETVBI
;
Y57	LDX	KNTNO
	LDA	SELECT,X
	BMI	Y01
	JMP	X28
Y01	LDY	#0
	JSR	CALDGR
	LDX	KNTNO
	BEQ	X39
	CPX	#$10
	BNE	Y53
	LDA	KNTMAA,X
	CMP	#1
	BEQ	Y54
Y53	LDA	DANGRH
	CMP	#4
	BCC	X39
Y54	JSR	FADOUT
	TXA
	AND	#$F
	BNE	Y05
	JMP	ENDGAM
Y05	JMP	X27
X39	CPX	#0
	BEQ	X72
	LSR	DANGRH
	ROR	DANGRL
	LSR	DANGRH
	BNE	X58
	ROR	DANGRL
	LDA	BRKFLG,X
	BPL	X57
	ASL	DANGRL
	BCS	X58
X57	LDA	KNTSTG,X
	SEC
	SBC	LOYLTY,X
	BCC	X58
	SBC	DANGRL
	BCC	X58
	LDA	KNEMAA,X
	BNE	X72
X58	LDA	#$FF
	JSR	SHOWRN
	JSR	FNDSAF
	LDY	BDIR
	BEQ	JMPX28
	LDX	KNTNO
	DEY
	LDA	KNEMAA,X
	BEQ	JMPX28
	JMP	X56
;
X72	LDA	#0
	JSR	SHOWRN
	CPX	#$10
	BCC	X88
	JSR	FNDNGR
	LDY	BDIR
	BEQ	JMPX28
	LDX	KNTNO
	DEY
	JMP	X56
X88	LDA	OBJX,X
	CMP	KNTX,X
	BNE	X35
	LDA	OBJY,X
	CMP	KNTY,X
	BNE	X35
JMPX28	JMP	X28
X35	LDA	CHRIS,X
	CLC
	ADC	SRNGE,X
	BCC	X14
	SBC	RANGE,X
	JMP	OVRFLO
X14	STA	TCHRIS
	SEC
	SBC	RANGE,X
	BCS	OVRFLO
	LDA	LDIR,X
	BCC	STIP
OVRFLO	STA	TCHRIS
	LDA	SDIR,X
STIP	TAY
X56	LDA	KNTX,X
	CLC
	ADC	STEPX,Y
	STA	TKNTX
	LDA	KNTY,X
	CLC
	ADC	STEPY,Y
	STA	TKNTY
;
;check for map exit
;
	CPX	#$10
	BCS	X71
	CMP	#77
	BNE	X77
ESCAPE	LDX	KNTNO
	LDA	#0
	STA	ERSFLG
	JSR	DRAWSD
	LDX	KNTNO
	LDA	#1
	STA	SELECT,X
	TXA
	AND	#$F
	BEQ	X79
	JMP	X27
X79	JMP	ENDGAM
X71	CMP	#2
	BEQ	ESCAPE
;
;check for collisions
;
X77	LDY	#$1F
LOOP06	CPY	KNTNO
	BEQ	X15
	LDA	SELECT,Y
	BPL	X15
	LDA	KNTX,Y
	SEC
	SBC	TKNTX
	JSR	ABSVAL
	CMP	#9
	BCS	X15
	LDA	KNTY,Y
	SEC
	SBC	TKNTY
	JSR	ABSVAL
	CMP	#8
	BCS	X15
	TYA
	AND	#$10
	STA	TMP1
	LDA	KNTNO
	AND	#$10
	EOR	TMP1
	BEQ	X16
	JSR	COMBAT
	LDA	ENDFLG
	BEQ	X16
	LDX	DEDKNG
	JMP	ENDGAM
X16	JMP	X27
X15	DEY
	BPL	LOOP06
	LDX	KNTNO
;
;move knight
;
X44	LDA	BRKFLG,X
	BMI	X45
	CPX	#11		;##
	BEQ	X45		;##
	LDA	KNTSTG,X
	SEC
	SBC	KNEMAA,X
	BCS	X07
	LDA	#0
X07	STA	KNTSTG,X
	JSR	FIGEMA
X45	LDA	#0
	STA	ERSFLG
	JSR	DRAWSD
	LDX	KNTNO
	LDA	TCHRIS
	STA	CHRIS,X
	LDA	TKNTX
	STA	KNTX,X
	LDA	TKNTY
	STA	KNTY,X
	LDA	BRKFLG,X
	BEQ	Y06
	LDA	TKNTX
	STA	OBJX,X
	LDA	TKNTY
	STA	OBJY,X
Y06	LDA	#$FF
	STA	ERSFLG
	JSR	DRAWSD
;
;recover from disruption
;
X28	LDA	KNTNO
	TAX
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	TAY
	LDA	RANDOM
	AND	#$7F
	CMP	LEADER,X
	BCS	X27
	LDA	EXPTMH,Y
	BNE	X46
	LDA	EXPTML,Y
;	CMP	RANDOM	;##
;	BCC	X27		;##
;	LDA	#1		;##
	LSR	A		;##
	LSR	A		;##
	LSR	A		;##
	JMP	X46A		;##
X46	ASL	A
	BCS	X47A		;##
	ASL	A
	BCS	X47A		;##
	ASL	A
	BCS	X47A		;##
	ASL	A		;##
	BCS	X47A		;##
	ASL	A		;##
	BCS	X47A		;##
X46A	ADC	KNTSTG,X
	BCC	X47
X47A	LDA	#$FF
X47	STA	KNTSTG,X
	JSR	FIGEMA
X27	LDA	#1
	JSR	STALL
	LDX	KNTNO
	INX
	CPX	#$20
	BEQ	X18
	JMP	LOOP24
X18	JMP	X33
;
STEPX	DB	0,1,0,$FF
STEPY	DB	$FF,0,1,0
;
SETVBI	LDY	#VBISRV&$FF
	LDX	#VBISRV/256
	LDA	#7
	JSR	SETVBV
	RTS
;
SETLDL	LDA	#$FF
	STA	SELECT,Y
	LDA	RANDOM
	AND	#$7F
	CLC
	ADC	KGLDR,X
	STA	LEADER,Y
	LDA	RANDOM
	AND	#$7F
	CLC
	ADC	KGLOYT,X
	STA	LOYLTY,Y
	RTS
;
SHOWRN	CMP	BRKFLG,X
	BEQ	X99
	STA	BRKFLG,X
	LDA	#$FF
	STA	ERSFLG
	JSR	DRAWSD
	LDX	KNTNO
X99	RTS
;
FADOUT	STX	KNTNO
	LDA	#1
	STA	SELECT,X
	LDA	#$7E
	STA	ERSFLG
LOOP37	JSR	DRAWSD	;fade out
	LDX	KNTNO
	DEC	ERSFLG
	DEC	ERSFLG
	BPL	LOOP37
	LDA	KNEMAA,X
	BEQ	Y26
	STA	KNTMAA,X
Y26	RTS
;
DWORD2	LDA	WRDLNG,X
	TAX
	SEC
LOOP38	LDA	WORDTB,X
	SBC	#$20
	STA	TXTWDW,Y
	BEQ	Y07
	INY
	INX
	BNE	LOOP38
Y07	INY
	RTS
WORDTB	DB	'VICTOR: '
	DB	'DEFEATED: '
	DB	'I: '
	DB	'F: '
	DB	'PEASANTS '
	DB	'KILL '
WRDLNG	DB	0,8,18,21,24,33,38
;
;
FIGXTM	LDA	ARMEXP,Y
	STA	PRDLO
	LDA	ARMEXP+16,Y
	STA	PRDHI
	LDA	ARMSIZ,Y
	STA	DIVSR
	JSR	DIVIDE
	LDA	PRDHI
	STA	EXPTMH,X
	LDA	PRDLO
	STA	EXPTML,X
	RTS
;
FIGEMA	LDA	KNTSTG,X
	CMP	#$FF
	BNE	X50
	LDA	KNTMAA,X
	BNE	X51
X50	STA	MULTER
	LDA	KNTMAA,X
	STA	DIVSR
	JSR	MULTPY
	LDA	PRDLO
	BPL	Y44
	INC	PRDHI
Y44	LDA	PRDHI
X51	STA	KNEMAA,X
	RTS
;
COMBAT	STY	VICTIM
	LDX	KNTNO
	LDA	KNTX,X
	CLC
	ADC	#48
	STA	HPOSP2
	LDA	#$44
	STA	PCOLR2
	LDA	KNTY,X
	CLC
	ADC	#17
	TAY
	STA	P2YSAV
	LDX	#0
LOOP27	LDA	P2TAB,X
	STA	PLAYR2,Y
	INY
	INX
	CPX	#6
	BNE	LOOP27
;
	LDX	VICTIM
	LDA	KNTX,X
	CLC
	ADC	#48
	STA	HPOSP3
	LDA	#$2C
	STA	PCOLR3
	LDA	KNTY,X
	CLC
	ADC	#17
	TAY
	STA	P3YSAV
	LDX	#0
LOOP28	LDA	P2TAB,X
	STA	PLAYR3,Y
	INY
	INX
	CPX	#6
	BNE	LOOP28
;
	LDA	#$40
	STA	AUDF2
	LSR	A
	STA	AUDF3
	LSR	A
	STA	AUDF4
	LDX	#0
	STX	AUDCTL
LOOP29	LDA	SC2TAB,X
	STA	AUDC2
	LDA	SC3TAB,X
	STA	AUDC3
	LDA	SC4TAB,X
	STA	AUDC4
	LDA	#1
	JSR	STALL
	INX
	CPX	#16
	BNE	LOOP29
	LDA	#$A0
	STA	AUDC2
	STA	AUDC3
	STA	AUDC4
;
	LDX	P2YSAV
	LDA	#0
	TAY
LOOP30	STA	PLAYR2,X
	INX
	INY
	CPY	#6
	BNE	LOOP30
;
	LDX	P3YSAV
	LDA	#0
	TAY
LOOP32	STA	PLAYR3,X
	INX
	INY
	CPY	#6
	BNE	LOOP32
;
	LDX	KNTNO
	LDY	VICTIM
	LDA	RANDOM
	JSR	KILL
	LDY	KNTNO
	LDX	VICTIM
	LDA	RANDOM
	LSR	A
	LSR	A
	JSR	KILL
	RTS
;
KILL	STA	ABONUS
	LDA	KNEMAA,Y
	STX	TEMP3
	JSR	SQRT1
	LDX	TEMP3
;	CLC		;##
;	ADC	#2	;##
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	BCC	Y45
	LDA	#$FF
Y45	STA	MULTER
	LDA	LEADER,Y
	STA	DIVSR
	JSR	MULTPY
	LDA	PRDHI
	CMP	ABONUS
	BCC	X95
	DEC	KNTMAA,X
	BEQ	DEAD
;	BNE	X95		;##
;X37	LSR	ABONUS	;##
;	LDA	KNEMAA,Y	;##
;	CMP	ABONUS	;##
;	BCC	X94		;##
X95	LDA	KNTSTG,X
	SEC
	SBC	#$10
	BEQ	X48
	BCS	X49
X48	LDA	#1
X49	STA	KNTSTG,X
	JSR	FIGEMA
X94	RTS
DEAD	LDA	#0
	STA	SELECT,X
	STA	KNTMAA,X
	STA	KNEMAA,X
	STA	ERSFLG
	CPX	#$10
	BCS	X69
	LDA	TOTHON
	SEC
	SBC	KNTHON,X
	STA	TOTHON
	LDA	#0
	STA	KNTHON,X
X69	TXA
	AND	#$F
	BNE	X89
	INC	ENDFLG
	STX	DEDKNG
X89	JSR	DRAWSD
	RTS
;
;warning: watch 4K boundary carefully!
;
	ORG	$B000-3920
SCNDAT	DS	7040
TXTWDW	DS	80
	END	BEGIN
;BAT25I.ASM  NOVEMBER 22, 1983
;VBI service routine
;
VBISRV	LDA	CONSOL
	AND	#2
	BNE	Y61
	LDA	#$FF
	STA	SLCFLG
Y61	LDA	TRIG0
	ORA	BUTMSK
	BNE	X36
	JMP	X19
X36	LDA	BUTFLG
	BNE	X34
X17	JMP	NOBUT
;
;button released
;
X34	LDA	#$46
	STA	PCOLR0
	LDA	#0
	STA	BUTFLG
	LDX	#80
LOOP19	LDA	TXTWDW+80,X
	STA	TXTWDW,X
	DEX
	BPL	LOOP19
;
	LDX	SCY1
	LDY	#13
LOOP21	STA	PLAYR1,X
	INX
	DEY
	BPL	LOOP21
;
	LDX	UNITNO
	BMI	X17
	LDA	BRKFLG,X
	BNE	X17
	LDA	CURSX1
	STA	OBJX,X
	LDA	CURSY1
	STA	OBJY,X
;
	LDY	#1
	LDA	OBJX,X
	SEC
	SBC	KNTX,X
	BCS	X29
	LDY	#3
	JSR	INVERT
X29	STY	HDIR
	STA	HRNGE
	LDY	#2
	LDA	OBJY,X
	SEC
	SBC	KNTY,X
	BCS	X30
	LDY	#0
	JSR	INVERT
X30	CMP	HRNGE
	BCC	X31
	STA	LRNGE
	TYA
	STA	LDIR,X
	LDA	HRNGE
	STA	SRNGE,X
	LDA	HDIR
	STA	SDIR,X
	JMP	X32
X31	STA	SRNGE,X
	TYA
	STA	SDIR,X
	LDA	HRNGE
	STA	LRNGE
	LDA	HDIR
	STA	LDIR,X
X32	LDA	LRNGE
	CLC
	ADC	SRNGE,X
	STA	RANGE,X
	LDA	LRNGE
	LSR	A
	STA	CHRIS,X
;
GOBUT	JMP	NOBUT
;
X19	LDA	BUTFLG
	BEQ	X24
	JMP	ORDERS
X24	LDA	#$FF
	STA	BUTFLG
	LDY	#80
LOOP35	LDA	TXTWDW,Y
	STA	TXTWDW+80,Y
	LDA	#0
	STA	TXTWDW,Y
	DEY
	BPL	LOOP35
	LDX	#NOKNTS
LOOP17	LDA	SELECT,X
	BPL	X21
	LDA	CURSRX
	SEC
	SBC	KNTX,X
	JSR	ABSVAL
	CMP	#5
	BCC	X20
X21	DEX
	BPL	LOOP17
	STX	UNITNO
	JMP	NOBUT
X20	LDA	CURSRY
	SEC
	SBC	KNTY,X
	JSR	ABSVAL
	CMP	#3
	BCS	X21
;
	LDA	#$4E
	STA	PCOLR0
	STX	UNITNO
	JSR	POSTNG
;
;now post cursor 1
;
	LDX	UNITNO
	CPX	#$10
	BCS	X97
	LDA	OBJY,X
	STA	CURSY1
	CLC
	ADC	#13
	STA	SCY1
	TAY
	LDA	OBJX,X
	STA	CURSX1
	CLC
	ADC	#47
	STA	SHPOS1
	STA	HPOSP1
;
	LDX	#0
LOOP20	LDA	CR1TAB,X
	STA	PLAYR1,Y
	INY
	INX
	CPX	#14
	BNE	LOOP20
;
X97	JMP	ENDISR
;
ORDERS	LDX	UNITNO
	BMI	Y02
	JSR	POSTNG
	LDA	RTCLKL
	ASL	A
	ASL	A
	ASL	A
	AND	#$F0
	ORA	#6
	STA	PCOLR1
	LDX	UNITNO
	LDA	BRKFLG,X
	BNE	Y02
	CPX	#$10
	BCS	Y02
X52	LDX	#1
	BNE	X23
;
NOBUT	LDX	#0
X23	LDA	STICK
	AND	#$F
	EOR	#$F
	BNE	SCROLL
Y02	LDA	#8
	STA	DELAY
	CLC
	ADC	RTCLKL
	STA	TIMSCL
EXITI	JMP	ENDISR
;
SCROLL	LDA	#0
	STA	ATRACT
	LDA	TIMSCL
	CMP	RTCLKL
	BNE	EXITI
	LDA	DELAY
	CMP	#1
	BEQ	X12
	SEC
	SBC	#1
	STA	DELAY
X12	CLC
	ADC	RTCLKL
	STA	TIMSCL
;
	LDA	STICK
	PHA
	AND	#8
	BNE	CHKRT
	LDA	SHPOS0,X
	CMP	LIMTAB,X
	BEQ	CHKUP
	ADC	#1
	STA	HPOSP0,X
	STA	SHPOS0,X
	INC	CURSRX,X
	BNE	CHKUP
CHKRT	PLA
	PHA
	AND	#4
	BNE	CHKUP
	LDA	SHPOS0,X
	CMP	#$36
	BEQ	CHKUP
	SBC	#1
	STA	SHPOS0,X
	STA	HPOSP0,X
	DEC	CURSRX,X
CHKUP	PLA
	LSR	A
	PHA
	BCS	CHKDN
	LDY	SCY,X
	CPY	#$F
	BEQ	CHKDN
	DEC	CURSRY,X
	DEY
	TYA
	STA	SCY,X
	CPX	#1
	BNE	X25
	CLC
	ADC	#$80
	TAY
X25	CLC
	ADC	#$12
	STA	TEMPI
LOOP15	LDA	PLAYR0,Y
	STA	PLAYR0-1,Y
	INY
	CPY	TEMPI
	BNE	LOOP15
;
CHKDN	PLA
	LSR	A
	BCS	ENDISR
	LDY	SCY,X
	CPY	#$5A
	BEQ	ENDISR
	INC	CURSRY,X
	INY
	TYA
	STA	SCY,X
	CPX	#1
	BNE	X26
	CLC
	ADC	#$80
X26	SEC
	SBC	#2
	STA	TEMPI
	CLC
	ADC	#$14
	TAY
LOOP16	LDA	PLAYR0-1,Y
	STA	PLAYR0,Y
	DEY
	CPY	TEMPI
	BNE	LOOP16
;
ENDISR	JMP	XITVBV
;
ABSVAL	BPL	X22
INVERT	EOR	#$FF
	CLC
	ADC	#1
X22	RTS
;
POSTNG	CPX	#11
	BNE	Y20
	LDA	CASTLE
	CLC
	ADC	#17
	TAX
	BNE	X13
Y20	CPX	#$10
	BCC	X13
	LDA	OPPONT
	CPX	#$1F
	BNE	Y28
	LDX	OPPONT
	LDA	LIEGE,X
Y28	CLC
	ADC	#17
	TAX
X13	LDY	#16
	JSR	DWORDS
	LDY	#50
	LDX	#16
	JSR	DWORDS
	LDX	UNITNO
	LDA	KNTMAA,X
	JSR	DNUMBR
	LDX	#17
	JSR	DWORDS
	LDX	UNITNO
	LDA	KNEMAA,X
	JSR	DNUMBR
	RTS
;
;writes a word designated in X
;
DWORDS	LDA	NAMLNG,X
	TAX
	SEC
LOOP10	LDA	NAMTAB,X
	SBC	#$20
	STA	TXTWDW,Y
	BEQ	X03
	INY
	INX
	BNE	LOOP10
X03	INY
	RTS
;
NAMTAB	DB	'ARTHUR '
	DB	'NOSNIKTA '
	DB	'SREMMUS '
	DB	'DROFWARC '
	DB	'LANCELOT '
	DB	'BORS '
	DB	'KAY '
	DB	'GALAHAD '
	DB	'MORDRED '
	DB	'TRISTRAN '
	DB	'LAMEROK '
	DB	'ENEMY '
	DB	'BEDIVERE '
	DB	'PERCIVALE '
	DB	'LUCAS '
	DB	'GAWAIN '
	DB	'MEN: '
	DB	'STRENGTH: '
	DB	'AUGUSEL '
	DB	'URYENS '
	DB	'LOT '
	DB	'IDRES '
	DB	'COLGRIN '
	DB	'BALDULF '
	DB	'GARWIN '
	DB	'SATER '
	DB	'PENDA '
	DB	'PELLINORE '
	DB	'CHELDRIC '
	DB	'HENGIST '
	DB	'HORSA '
	DB	'ROYNS '
	DB	'HOEL '
NAMLNG	DB	0,7,16,24,33,42,47,51
	DB	59,67,76,84,90,99,109,115,122,127
	DB	137,145,152,156,162,170,178,185,191,197,207,216,224,230,236
;
AVOCDO	LDA	#0
	STA	MAASUM
	STA	KNTSUM
	LDA	KINGY
	BEQ	X38
	LDA	#$10
X38	CLC
	ADC	#$F
	TAX
LOOP36	LDA	SELECT,X
	BEQ	X87
	LDA	KNTMAA,X
	BEQ	X87
	CLC
	ADC	MAASUM
	STA	MAASUM
	TXA
	AND	#$F
	BEQ	X87
	CPX	#11
	BEQ	Y18
	CPX	#$1F
	BEQ	Y18
	INC	KNTSUM
Y18	LDY	KINGY
	CPY	LOSER
	BNE	X87
	LDA	SELECT,X
	BPL	X87
	JSR	FADOUT
X87	DEX
	TXA
	AND	#$F
	CMP	#$F
	BNE	LOOP36
	LDA	#0
	STA	TEMP2
	LDX	KINGY
	LDA	KNTSUM
	CPX	INVADR
	BEQ	Y47
	CPX	#0	;##
	BNE	Y47A	;##
	LDX	CASTLE	;##
	BNE	Y47	;##
Y47A	STA	HOMKNT,X
	JMP	Y48
Y47	STA	FLDKNT,X
Y48	LDY	#0
	LDX	KINGY
	CPX	#0
	BEQ	Y42
	INY
Y42	LDA	IOFKNT,Y
	SEC
	SBC	KNTSUM
	STA	TEMP2
	LDA	KGKNTS,X
	SEC
	SBC	TEMP2
	STA	KGKNTS,X
;
;auxilliary force handling
;
	LDA	#0
	STA	AUXMAA
Y38	LDA	AUX1,Y
	BEQ	Y39
	TAY
	CPX	#0
	BEQ	Y40
	LDA	KNTMAA+$1F
	SEC
	SBC	#1
	BCS	Y56
	LDA	#0
Y56	STA	AUXMAA
	JMP	Y55
Y40	LDA	KNTMAA+11
	STA	AUXMAA
	SEC
	SBC	KGKNTS,Y
	BCS	Y55
	ADC	KGKNTS,Y
	STA	KGKNTS,Y
	LDA	#0
Y55	JSR	GUAVA
Y39	LDY	KINGY
	LDA	MAASUM
	SEC
	SBC	KNTSUM
	SBC	AUXMAA
	JSR	GUAVA
	RTS
;
;Subroutine GUAVA
;A=remaining MAA
;X=don't care
;Y=king ID number
;
GUAVA	STA	TEMP2
	LDA	FLDARM,Y
	CPY	INVADR
	BEQ	Y49
	CPY	#0	;##
	BNE	Y49A	;##
	LDX	CASTLE	;##
	BNE	Y49	;##
Y49A	LDA	HOMARM,Y
Y49	SEC
	SBC	TEMP2
	STA	BODCNT
	LDA	TEMP2
	CPY	INVADR
	BEQ	Y50
	CPY	#0	;##
	BNE	Y50A	;##
	LDX	CASTLE	;##
	BNE	Y50	;##
Y50A	STA	HOMARM,Y
	JMP	Y51
Y50	STA	FLDARM,Y
Y51	LDA	ARMSIZ,Y
	STA	DIVSR
	SEC
	SBC	BODCNT
	STA	ARMSIZ,Y
	STA	PRDHI
	STY	TEMP2
	LDA	#0
	STA	PRDLO
	JSR	DIVIDE
	LDA	PRDHI
	BNE	ENGUAV
	LDA	PRDLO
	STA	MULTER
	PHA
	LDY	TEMP2
	LDA	ARMEXP+16,Y
	STA	DIVSR
	JSR	MULTPY
	LDA	PRDLO
	STA	TEMPLO
	LDA	PRDHI
	STA	TEMPHI
	LDA	ARMEXP,Y
	STA	DIVSR
	PLA
	STA	MULTER
	JSR	MULTPY
	LDA	PRDHI
	CLC
	ADC	TEMPLO	;not a bug!
	STA	ARMEXP,Y
	LDA	TEMPHI
	ADC	#0
	STA	ARMEXP+16,Y
ENGUAV	RTS
;
ENDGAM	LDA	DEDKNG
	BNE	Y58
	JMP	SWPEND	;Arthur has died
Y58	LDA	#$FF
	STA	BUTMSK
	LDA	#1
	JSR	STALL
	CPX	#$10
	BEQ	X80
	LDA	INTSIZ
	STA	LIAMSZ
	LDA	INTSIZ+1
	STA	VIAMSZ
	LDA	OPPONT
	LDY	#0
	BEQ	Y41
X80	LDA	INTSIZ
	STA	VIAMSZ
	LDA	INTSIZ+1
	STA	LIAMSZ
	LDA	#0
	LDY	OPPONT
Y41	STA	VICTOR
	STY	LOSER
	STY	KINGY
	JSR	AVOCDO
	LDA	MAASUM
	STA	LFAMSZ
	LDX	VICTOR
	STX	KINGY
	JSR	AVOCDO
	LDA	MAASUM
	STA	VFAMSZ
;
	LDX	#$F
LOOP40	CPX	#11
	BEQ	Y17
	LDA	KNTMAA,X
	BNE	X86
	STA	KNTIN,X
	BEQ	X83
X86	SEC
	SBC	#1
X83	STA	KNTARM,X
Y17	DEX
	BPL	LOOP40
;
;final display
;
	LDY	#4
	LDX	#0
	JSR	DWORD2
	LDA	VICTOR
	BEQ	Y09
	CLC
	ADC	#$11
Y09	TAX
	JSR	DWORDS
	LDA	#0
	STA	TXTWDW,Y
	INY
	LDX	#2
	JSR	DWORD2
	LDA	VIAMSZ
	JSR	DNUMBR
	LDA	#0
	STA	TXTWDW,Y
	INY
	LDX	#3
	JSR	DWORD2
	LDA	VFAMSZ
	JSR	DNUMBR
;
	LDY	#44
	LDX	#1
	JSR	DWORD2
	LDA	LOSER
	BEQ	Y08
	CLC
	ADC	#$11
Y08	TAX
	JSR	DWORDS
	LDA	#0
	STA	TXTWDW,Y
	INY
	LDX	#2
	JSR	DWORD2
	LDA	LIAMSZ
	JSR	DNUMBR
	LDA	#0
	STA	TXTWDW,Y
	INY
	LDX	#3
	JSR	DWORD2
	LDA	LFAMSZ
	JSR	DNUMBR
;
	LDA	#0
	STA	COLOR4
	STA	BUTMSK
WFRST	LDA	CONSOL
	AND	#1
	BNE	WFRST
;
	JSR	CLRVBI
;
; ENDBAT.ASM
; FOR END PROCESSING OF BATTLE.OBJ
;
; DECIDES PILLAGE REC. IF DEFENDER WINS
; IMPLEMENTS FORCING CAMPAIGN END IF DEFENDER WINS
; IF ATTACKER WINS, DECIDES IF CONTINUE CAMPAIGN
; IF ATTACKER = ARTHUR, NO DECISION
; DECIDES WHICH SWAP VECTOR TO JUMP TO
;
	LDY	#0
	LDA	VBISAV
	CMP	#1
	BEQ	Y33
	CMP	#8
	BEQ	Y33
	LDA	VICTOR
	BEQ	Y33
	LDA	#1
LOOP55	STA	HITCRP,Y
	INY
	BNE	LOOP55
	BEQ	Y37
;
Y33	LDA	VICTOR
	BEQ	Y37
	DEY
Y37	STY	TRAPFL
;
	LDX	LOSER
	LDA	LIEGE,X
	CMP	#$10
	BCS	ENDIT0
	TAX
	LDA	PRESTG,X
	LSR	A
	JMP	ENDIT1
;
ENDIT0	LDA	PRESTG,X
ENDIT1	LSR	A
	LSR	A
	STA	TEMP1
;
	LDX	VICTOR
	LDA	LIEGE,X
	CMP	#$10
	BCS	ENDIT2
	TAX
ENDIT2	LDA	TEMP1
	CLC
	ADC	PRESTG,X
	STA	PRESTG,X
	LDX	LOSER
	LDA	LIEGE,X	;##
	CMP	#$10		;##
	BCS	ENDIT3	;##
	TAX			;##
ENDIT3	LDA	PRESTG,X
	SEC
	SBC	TEMP1
	STA	PRESTG,X
;
	LDA	DEDKNG
	BMI	NODEAD
;
KNGDED:
;
	LDX	LOSER
	LDY	#0
	LDA	#2
	JSR	MAKVAS
	JMP	ARTWIN
;
;
NODEAD:
	LDA	LOSER
	BEQ	ARTLOS
;
ARTWIN:
	LDX	OPPONT
	LDA	LIEGE,X
	CMP	#$10
	BCS	Y59
	LDA	#1
	STA	REVAS,X
;
	TXA
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	CLC
	ADC	LIEGE,X
	TAY
	LDA	LNGTRM,Y
	SEC
	SBC	#2
	BCS	Y60
	LDA	#0
Y60	STA	LNGTRM,Y
;
Y59	LDA	VBISAV
	CMP	#5
	BNE	ARTDEF
	LDX	LOSER
;
	LDA	CRPSTG,X
	BEQ	ARTW00
	DEC	CRPSTG,X
ARTW00:
	JMP	SWPBRT
;
ARTDEF:
	LDY	CASTLE
	LDX	LOSER		; ARTHUR GETS ATTACKER'S
	LDA	PILCAR,X	; PILLAGE
	CLC
	ADC	BANK,Y
	STA	BANK,Y
	LDA	PILCAR+16,X
	ADC	BANK+16,Y
	STA	BANK+16,Y
;
	LDA	#0		; ZERO THE PILLAGE CARRY
	STA	PILCAR,X
	STA	PILCAR+16,X
;
	LDX	CASTLE	; ARTHUR IS DEFENDER
	LDY	LOSER		; LOSER WAS ATTACKER
	JSR	CAMSTP	; TURN OFF CAMPAIGN
;
	LDA	VBISAV
	CMP	#1
	BEQ	JMPCAM
	JMP	SWPVAS
JMPCAM:	JMP	SWPCAM
;
;
ARTLOS:
	LDA	VBISAV
	CMP	#5		; ARTHUR WAS ATTAKER
	BNE	REATTK
;
	LDX	VICTOR	; ARTHUR'S PILLAGE GOES
	LDA	PILCAR	; TO THE DEFENDER
	CLC
	ADC	BANK,X
	STA	BANK,X
	LDA	PILCAR+16
	ADC	BANK+16,X
	STA	BANK+16,X
;
	LDA	#0		; ARTHUR DOESN'T GET PILLAGE
	STA	PILCAR
	STA	PILCAR+16
;
	LDA	VICTOR
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	TAX
	LDA	#1
	LDY	#$0F
ARTL00:
	STA	HITCRP,X
	INX
	DEY
	BPL	ARTL00
;
	JMP	SWPBRT
;
;
REATTK:
	DEC	CRPSTG
	LDA	VBISAV
	CMP	#1
	BEQ	CAMATK
;
VASAT0:	JMP	SWPVAS
;
CAMATK:	JMP	SWPCAM
;
CAMST1	LDX	TARGIT,Y
	CPX	#$10
	BCC	CAMSTP
	LDA	#$FF
	STA	ADVNCE,Y
	RTS
;
CAMSTP:
	LDA	#0		; SHUT DOWN CAMPAIGN
	STA	DANGER,X
	STA	BURNT,X
	STA	CAMPGN,Y
;
	LDA	#$13
	STA	AGRSSR,X
	STA	TARGIT,Y
;
	LDA	#$FF		; BEGIN RETREAT OF ATTACKER
	STA	ADVNCE,Y
;
	RTS
;
;
ATKVAS:
ATKCAM:
; TEMPORARY STUB
	SEC
	RTS
;
;
MAKNUE:
	LDA	#$40
	STA	STATUS
	STX	SX4
	STY	SY4
	JSR	DOX2Y
	LDX	SX4
	LDY	SY4
	JSR	DOY2X
	LDX	SX4
	LDY	SY4
	RTS
;
SX4	DB	0
SY4	DB	0
STATUS	DB	0
;
;
MAKVAS:
		; X IS MADE A VASSAL TO Y
		; Y IS MADE NUETRAL TO X
		; A HAS TITHE AMOUNT
		; TRIBUTE BY X IS UNDONE
		; LIEGE IS SET UP
		; MAIL IS POSTED
;
	STX	SX5
	STY	SY5
	LDY	LIEGE,X
	CPY	#$10
	BCS	MAKVA3
	RTS
MAKVA3	STA	TITBGT,X
;
	TYA
	STA	LIEGE,X	; SET UP ECON
;
	LDA	TRBCNT,X
	BEQ	MAKVA0
	LDA	#0
	STA	TRIBUT,X
	STA	TRBCNT,X
;
	LDA	TRBTOR,X
	CMP	#$10
	BCS	MAKVA0
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	STA	TEMP3
	TXA
	CLC
	ADC	TEMP3
	TAY
	LDA	#$40
	STA	KNGSTS,Y
;
	TXA
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	CLC
	ADC	TRBTOR,X
	LDA	#$40
	STA	KNGSTS,Y
;
	LDA	#$10
	STA	TRBTOR,X
MAKVA0:
	LDA	#$40
	LDX	SX5
	STA	AMBITN,X
;
	LDA	#$10		; X IS VASSL TO Y
	STA	STATUS
	LDX	SX5
	LDY	SY5
	JSR	DOX2Y
;
	LDA	#$40		; Y IS NUETRL TO X
	STA	STATUS
	LDX	SX5
	LDY	SY5
	JSR	DOY2X
;
	LDX	#$0F
MAKVA1:
	STX	SXX
	LDA	LIEGE,X
	CMP	SX5
	BNE	MAKVA2
;
	LDX	SXX
	LDY	SX5
	JSR	MAKNUE		; UNDO OLD LIEGE
	LDX	SXX
	LDY	SY5
	LDA	TITBGT,X
	JSR	MAKBAS		; SET UP NEW LIEGE
;
MAKVA2:
	LDX	SXX
	DEX
	BNE	MAKVA1
;
	LDX	SX5		; TRANSFER PRESTIGE FROM
	LDY	SY5		; VASSAL TO LIEGE
	LDA	PRESTG,X
	CLC
	ADC	PRESTG,Y
	BCC	MAKVA4
	LDA	#$FF
MAKVA4:
	STA	PRESTG,Y
;
	LDX	SX5
	LDA	#0
	STA	PRESTG,X
	STA	CRPSTG,X
;
	LDY	SX5		; VASSALS CAN NOT CAMPAGN
	JSR	CAMST1		; SO STOP IF ON ONE
;
	LDX	SX5
	LDY	SY5
	RTS
;
SX5	DB	0
SY5	DB	0
SXX	DB	0
;
;
MAKBAS:
		; REDUNDANT COPY TO AVOID
		; RECURSIVE CODE
;
		; X IS MADE A VASSAL TO Y
		; Y IS MADE NUETRAL TO X
		; A HAS TITHE AMOUNT
		; TRIBUTE BY X IS UNDONE
		; LIEGE IS SET UP
;
	STX	SX6
	STY	SY6
	STA	TITBGT,X
;
	TYA
	STA	LIEGE,X	; SET UP ECON
;
	CMP	TRBTOR,X
	BNE	MAKBA0
	LDA	#0		; UNDO TRIBUTE STATUS
	STA	TRIBUT,X	; IF TRBTOR IS NOW
	LDA	#$10		; THE NEW LIEGE
	STA	TRBTOR,X
;
MAKBA0:
	LDA	#$10		; X IS VASSAL TO Y
	STA	STATUS
	LDX	SX6
	LDY	SY6
	JSR	DOX2Y
;
	LDA	#$40		; Y IS NUETRAL TO X
	STA	STATUS
	LDX	SX6
	LDY	SY6
	JSR	DOY2X
;
	LDX	SX6
	LDY	SY6
	RTS
;
SX6	DB	0
SY6	DB	0
;
;
DOY2X:
	STX	SX9
	STY	SY9
	JSR	MULX16
	CLC
	ADC	SY9
	JMP	DOSTAT
;
;
DOX2Y
	STX	SX9
	STY	SY9
	JSR	MULY16
	CLC
	ADC	SX9
;
DOSTAT:
	TAX
	LDA	KNGSTS,X
	AND	#$0F
	ORA	STATUS
	STA	KNGSTS,X
	LDX	SX9
	LDY	SY9
	RTS
;
SX9	DB	0
SY9	DB	0
;
;
MULX16:
	TXA
	JMP	MULBTH
;
MULY16:
	TYA
MULBTH:
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	RTS
;
CLRVBI	LDY	#XITVBV&$FF
	LDX	#XITVBV/256
	LDA	#7
	JSR	SETVBV
;
	LDY	#SYSVBV&$FF
	LDX	#SYSVBV/256
	LDA	#6
	JSR	SETVBV
	RTS
; EQUATE.DAT    FEB 8, 1983
;
; CONTAINS SHARED EQUATES USED IN EXCALIBUR
;
ZZZZZZ	=	*
	ORG	$E0
PRODLO	ORG	*+1
PRODHI	ORG	*+1
DIVISR	ORG	*+1
MULTPR:
QUOTNT	ORG	*+1
ACCLO	ORG	*+1
ACCHI	ORG	*+1
SQRTA	ORG	*+1
TEMPX	ORG	*+1
TEMPY	ORG	*+1
NBITS	ORG	*+1
TEMP1	ORG	*+1
SUMLO	ORG	*+1
SUMHI	ORG	*+1
	ORG	ZZZZZZ
;
SWPLOG	=	$0400	; SWAP VECTORS FOR VBI
SWPCAM	=	SWPLOG+$0003	;
SWPBRT	=	SWPLOG+$0006	;
SWPBAT	=	SWPLOG+$0009	;
SWPEND	=	SWPLOG+$000C	;
SWPLOD	=	SWPLOG+$000F	;
SWPZED	=	SWPLOG+$0012	;
SWPVAS	=	SWPLOG+$0015	;
SWPWIN	=	SWPLOG+$0018
SWPRES	=	SWPLOG+$001B
;
TITADD	=	$6300	;
CAMADD	=	$5D01	; STARTING ADDRESSES
BRTADD	=	$6300	;
BATADD	=	$6300	;
ENDADD	=	$3600	;
LOGADD	=	$2000	;
PAUSDL	=	LOGADD+3
LOADIT	=	LOGADD+6
ZEDADD	=	$6300	;
VASADD	=	$6300	;
WINADD	=	$6300	;
;
CALIG	=	$9000	; SHARED SUBROUTINES &
LINLEN	=	$8FFF	; THEIR INTERFACES
PADPTR	=	$00FE	;
;
BRTEXT	=	$B600	; SHARED EQUATES
BIGMAP	=	$A000	; AND VARIABLES
NORTH 	=	$B000
MIDDL 	=	$B200
SOUTH 	=	$B400
STREAM	=	$CE	; MUSIC
FLRATE	=	10	; EMERG. FLASH RATE
;
BOTDAT	=	$5D00
CRPTYP	=	BOTDAT-256
KNGSTS	=	CRPTYP-256
OUTCRP	=	KNGSTS-16
ACTCRP	=	OUTCRP-16
DEMAND	=	ACTCRP-16
DEMREC	=	DEMAND-16
CAMPGN	=	DEMREC-16
TIME  	=	CAMPGN-2
YPOSH 	=	TIME  -1
YPOSL 	=	YPOSH -1
XPOSH 	=	YPOSL -1
XPOSL 	=	XPOSH -1
CASTLE	=	XPOSL -1
DANGER	=	CASTLE-16	;
DLSAVE	=	DANGER-$49
CHRSET	=	DLSAVE-1
ARMDIS	=	CHRSET-32
TITBGT	=	ARMDIS-16
TITGAV	=	TITBGT-16
MONGER	=	TITGAV-16
SAVRAT	=	MONGER-16
AGRSSR	=	SAVRAT-16
OPPONT	=	AGRSSR-01
KGKNTS	=	OPPONT-16
TOTHON	=	KGKNTS-01
RELHON	=	TOTHON-16
KNTARM	=	RELHON-16
BURNT 	=	KNTARM-16
ACCUM 	=	BURNT -16	; MAIN LINE VARIABLES
TRBTOR	=	ACCUM -$10	; GROW BACKWARDS BECAUSE
TAX   	=	TRBTOR-$10	; TO BE FLUSH WITH VBI
TRIBUT	=	TAX   -$10	; VARIABLES 
MAINT 	=	TRIBUT-$10	;
BANK  	=	MAINT -$20	;
LIEGE 	=	BANK  -$10
WEEKHI	=	LIEGE -$01
WEEKLO	=	WEEKHI-$01
KILLHI	=	WEEKLO-$01
KILLLO	=	KILLHI-$01
EXCESS	=	KILLLO-$10
ARMBGT	=	EXCESS-$10
ARMSIZ	=	ARMBGT-$20
ARMEXP	=	ARMSIZ-$20
KTABX 	=	ARMEXP-$10
KTABY 	=	KTABX -$10
KNTIN	=	KTABY -$10
KNTCOL	=	KNTIN-$10
ARRIVE	=	KNTCOL-$01
QUEUE 	=	ARRIVE-256
HEAD  	=	QUEUE -$01
BUTT  	=	HEAD  -$01
LOCK  	=	BUTT  -$01
;
MI_STATE = LOCK    -$01
N_V      = MI_STATE- $04
N_ENV    = N_V     - $04
N_MODE   = N_ENV   - $01
N_D_L    = N_MODE  - $04
N_D_H    = N_D_L   - $04
ACTIVE   = N_D_H   - $04
DISTORT  = ACTIVE  - $04
VOLUME   = DISTORT - $04
TARGET   = VOLUME  - $04
STAGE    = TARGET  - $04
DECAY    = STAGE   - $04
TIME_L   = DECAY   - $04
TIME_H   = TIME_L  - $04
LEVEL    = TIME_H  - $04
ENV      = LEVEL   - $04
TEMP     = ENV     - $02
CMD      = TEMP    - $01
;
DATASIZE: = 60

;
TAXREC   = CMD     - $10
KNTHON   = TAXREC  - $10
KNTKNT   = KNTHON  - 256
SKTABX   = KNTKNT  - $10
SKTABY   = SKTABX  - $10
MAGIC    = SKTABY  - $01
MERFLG   = MAGIC   - $01
MAGCNT   = MERFLG  - $01
SUCESS   = MAGCNT  - $01
VBIENV   = SUCESS  - $01
HITCRP   = VBIENV  - 256
TRBASK   = HITCRP  - 128
TYRANT   = TRBASK  - 16
ADVNCE   = TYRANT  - 16
BRNCNT   = ADVNCE  - 16
TARGIT   = BRNCNT  - 16
RETRET   = TARGIT  - 16
PILAMT   = RETRET  - 01
VBISAV   = PILAMT  - 01
CHGKNG   = VBISAV  - 16
PILCAR   = CHGKNG  - $20
VICTOR   = PILCAR  - 01
LOSER    = VICTOR  - 01
DEDKNG   = LOSER   - 01
FLDARM   = DEDKNG  - 16
FLDKNT   = FLDARM  - 16
HAIRY    = FLDKNT  - 16
PRESTG   = HAIRY   - 16
ATACKR   = PRESTG  - 01
DEFNDR   = ATACKR - 01
VICLOS   = DEFNDR  - 01
LOSLOS   = VICLOS  - 01
WINNER   = LOSLOS  - 01
TURKEY   = WINNER  - 01
SELFLG   = TURKEY  - 01
TRAPFL   = SELFLG  - 01
CRPSTG   = TRAPFL  - 16
HISTRY   = CRPSTG  - 256
HOMARM   = HISTRY  - 16
HOMKNT   = HOMARM  - 16
;
SUPOPP   = HOMKNT  - 16  ; ****
INFOPP   = SUPOPP  - 16  ; ****
INFPOS   = INFOPP  - 16  ; ****
NASTY    = INFPOS  - 16  ; ****
NICEY    = NASTY   - 16  ; ****
AMBITN   = NICEY   - 16  ; ****
COWARD   = AMBITN  - 16  ; ****
WSHWSH   = COWARD  - 16  ; ****
LNGTRM   = WSHWSH  - 256 ; ****
JUSTIC   = LNGTRM  - 256 ; ****
TA       = JUSTIC  - 256 ; ****
TB       = TA      - 256 ; ****
ATKDES   = TB      - 256 ; ****
DEFDES   = ATKDES  - 256 ; ****
ATKBVL   = DEFDES  - 16  ; ****
ATKBID   = ATKBVL  - 16  ; ****
DEFBVL   = ATKBID  - 16  ; ****
DEFBID   = DEFBVL  - 16  ; ****
;
TITPAY   = DEFBID  - 16
HEAD1    = TITPAY  - 01
BUTT1    = HEAD1   - 01
MAILN1   = BUTT1   - 01
MAILN2   = MAILN1  - 01
MAILVB   = MAILN2  - 01
MAILCN   = MAILVB  - 01
GEORGE   = MAILCN  - 16
FILE     = GEORGE  - 02
SFLAG    = FILE    - 01
FLAGLL   = SFLAG   - 01
TARGSV   = FLAGLL  - 16
TRBCNT   = TARGSV  - 16
REVAS    = TRBCNT  - 16
ADLTRY   = REVAS   - 01
BNKRAT   = ADLTRY  - 16
RATBNK   = BNKRAT  - 16
NUMONE   = RATBNK  - 01
PRESHI   = NUMONE  - 01
LANGER   = PRESHI  - 01
;
TOPDAT   = LANGER   - $01
;

;
;SUBR TRIG 
TRIG	LDX	ZONE
	BEQ	TRG13
	CPX	#5
	BEQ	TRG13
	DEX
	BEQ	TRG13		;WEALTH
	DEX
	TXA
	ASL	A
	TAX
	LDA	#1
	STA	NOISFL
	LDA	#$A6
	STA	AUDC3
	LDA	#$60
	STA	AUDF3
	LDA	#15
	STA	NOISCT
	LDA	TRGOTO,X
	STA	RMPTR
	LDA	TRGOTO+1,X
	STA	RMPTR+1
	LDY	CASTLE
	JMP	(RMPTR)
TRG13	RTS		;NOT IN ACCEPTABLE ZONE
;
TRG3Z2	LDA	TAXSHO		;TAXES
	STA	TAX,Y
	RTS
TRG3Z3	LDA	ARMSHO		;ARMY
	STA	ARMBGT,Y
	RTS
TRG3Z4	LDA	TITSHO		;TITHE
	STA	TITBGT,Y
	RTS
;
TRNOIS	DEC	NOISCT
	LDA	NOISCT
	BEQ	TRGN1
	CMP	#10
	BNE	TRGN2
	LDA	#$90
	STA	AUDF3
TRGN2	RTS
TRGN1	STA	AUDC3
	RTS
;
;CROWN DATA TABLE
CTAB1	DB	0,1,$23
	DB	$23,$37,$37,$3F
	DB	$3F,$3F,0
CTAB2	DB	0,0,$88
	DB	$88,$D8,$D8,$F8
	DB	$F8,$F8,0
;
;ADDR OF WHERE ROUTIENS FOR TRIG
;STUFF ARE
TRGOTO	DW	TRG3Z2
	DW	TRG3Z3
	DW	TRG3Z4
;TRNUMS PRINTS OUT ALL 8 NUMS IN TRES
TRNUMS	LDX	#0
TRNUM1	STX	COUNT
	JSR	DODGT
	LDX	COUNT
	INX
	INX
	CPX	#16
	BNE	TRNUM1
	RTS
;
;DODGT DOES ONE NUMBER. NEEDS WHICH
;VALUE (*2) IN X. DISTROYS Y AND X.
DODGT	LDA	NUMPOS,X
	STA	PADPTR
	LDA	NUMPOS+1,X
	STA	PADPTR+1
	LDA	AMOUNT,X
	STA	RMPTR
	LDA	AMOUNT+1,X
	STA	RMPTR+1
	LDY	CASTLE
	CPX	#8
	BCS	DODGT1
	CPX	#0
	BEQ	DODGT1
	LDY	#0		;FOR 2,4,6: USE ___SHO
DODGT1	LDA	(RMPTR),Y
	STA	NUMLO
	STA	NUMSHO,X
	CPX	#8		;BANK
	BEQ	TRNUM4
	LDA	#0
	STA	NUMHI
	STA	NUMSHO+1,X
TRNUM2	JSR	GETDGT
	JMP	DRWDGT
TRNUM4	LDA	BANK+16,Y
	STA	NUMHI
	STA	NUMSHO+1,X
	JMP	TRNUM2
;
;DRWDGT NEEDS DDIGITS & PADPTR.
DRWDGT	LDX	#0
	LDY	#0
	STY	FLAG
DRWDG1	LDA	DDIGIT,Y
	BNE	DRWDG2
	LDA	FLAG
	BEQ	DRWDG3
	LDA	#0
DRWDG2	INC	FLAG
	STY	TIMP2
	CLC
	ADC	#$7B
	JSR	CALIG
	LDY	TIMP2
	INY
	CPY	#5
	BNE	DRWDG1
	RTS
DRWDG3	CPY	#4		;FOR LEADING ZEROS
	BEQ	DRWDG2
	TXA
	CLC
	ADC	#16
	TAX
	INY
	JMP	DRWDG1
;
;GETDGT DISTROYS X&Y. NEEDS NUMHI
;AND NUMLO
GETDGT	LDX	#0
GETDG2	LDY	#$FF
	SEC
GETDG1	INY
	LDA	NUMLO
	SBC	POWER_L,X
	STA	NUMLO
	LDA	NUMHI
	SBC	POWER_H,X
	STA	NUMHI
	BCS	GETDG1
	TYA
	STA	DDIGIT,X
	LDA	NUMLO
	CLC
	ADC	POWER_L,X
	STA	NUMLO
	LDA	NUMHI
	ADC	POWER_H,X
	STA	NUMHI
	INX
	CPX	#5
	BCC	GETDG2
	RTS
;
;ERSDGT NEEDS WHICH AMOUNT (*2) TO
;DISTROY IN X. DISTROYS A & Y.
;NEEDS LINLEN
;SET TOO
ERSDGT	LDA	#32
	STA	COUNT
	LDA	NUMPOS,X
	STA	PADPTR
	LDA	NUMPOS+1,X
	STA	PADPTR+1
	CPX	#0
	BNE	ERSDG4
	INC	PADPTR
	JMP	ERSDG2
ERSDG4	CPX	#8
	BCC	ERSDG2
	LDA	PADPTR
	BNE	ERSDG5
	DEC	PADPTR+1
ERSDG5	DEC	PADPTR
ERSDG2	LDA	#0
	LDY	#1
ERSDG1	STA	(PADPTR),Y
	INY
	CPY	#12
	BCC	ERSDG1
	LDA	LINLEN
	JSR	INCPTR
	DEC	COUNT
	BNE	ERSDG2
	RTS
;
NUMPOS	DW	EXCPOS,DEMPOS,BUDPOS
	DW	TITPOS
	DW	BNKPOS,GOTPOS,MENPOS
	DW	GAVPOS,WNDRAM+28
AMOUNT	DW	EXCESS,TAXSHO,ARMSHO
	DW	TITSHO
	DW	BANK,TAXREC,ARMSIZ
	DW	TITGAV
POWER_L	DB	LOW 10000,LOW 1000,LOW 100
	DB	LOW 10,LOW 1
POWER_H	DB	HIGH 10000,HIGH 1000
	DB	HIGH 100,HIGH 10,HIGH 1
NUMSHO	DS	16

;
;ROOM DATA COMES NEXT!!
TRESRM	DB	'Wealth',$9B
	DB	'Taxes',$9B
	DB	'Army',$9B
	DB	'Tithe',$FF
KNGDAT	DW	CAMEL
	DW	PICTLD
	DW	DALRIA
	DW	GUOTOD
	DW	RHEGED
	DW	NORTHU
	DW	ELMET
	DW	POWYS
	DW	LINDSE
	DW	MERCIA
	DW	GWYNED
	DW	ANGLIA
	DW	ESSEX
	DW	SUSSEX
	DW	DYFED
	DW	DUMNON
PICTLD	DB	'Augusel',$FF
DALRIA	DB	'Uryens',$FF
GUOTOD	DB	'Lot',$FF
RHEGED	DB	'Idres',$FF
NORTHU	DB	'Colgrin',$FF
ELMET	DB	'Baldulf',$FF
POWYS	DB	'Garwin',$FF
LINDSE	DB	'Sater',$FF
MERCIA	DB	'Penda',$FF
GWYNED	DB	'Pellinore',$FF
ESSEX	DB	'Hengist',$FF
SUSSEX	DB	'Horsa',$FF
CAMEL	DB	'Arthur',$FF
DYFED	DB	'Royns',$FF
DUMNON	DB	'Hoel',$FF
ANGLIA	DB	'Cheldric',$FF
	LIST	I
	INCLUDE	D2:EQUATE.DAT
	LIST	I
	INCLUDE	D3:VAS001.SRC
	INCLUDE	D3:VASMOR.SRC
	INCLUDE	D3:VTRAP.SRC
;
	LIST	I
	INCLUDE	D2:PLAFARE.ASM
	INCLUDE	D3:DISPLST.SRC
;VASSEL CASTLE
;NEEDS KING # IN 'CASTLE'
	ORG	$C0
SCNPTR	ORG	*+2
TIMP2	ORG	*+1
RMPTR	ORG	*+2
KNGPTR	ORG	*+2
KINDEX	ORG	*+1
CHITE	ORG	*+1
KNITS	ORG	*+1
KNITCT	ORG	*+1
ZONE	ORG	*+1
JOYDLY	ORG	*+1
LASTRG	ORG	*+1
;PUT ANY MORE ZERO PAGE AT $80-$8F!
	ORG	$80
FLAG	ORG	*+1
TAXSHO	ORG	*+1
ARMSHO	ORG	*+1
TITSHO	ORG	*+1
STOREY	ORG	*+1
NOISFL	ORG	*+1
NOISCT	ORG	*+1
FLCNT	ORG	*+1
WHICH	ORG	*+1
WHADD	ORG	*+1
TWCOL	ORG	*+1
COUNT	ORG	*+1
NUMHI	ORG	*+1
NUMLO	ORG	*+1
DDIGIT	ORG	*+5
COLSWP	ORG	*+1
;
;
DLADDR	EQU	$BEF4		;$10B LONG
SCRRAM	EQU	$A010		;MUST BE AT $X010
PMADDR	EQU	$1C00
WINDOW	EQU	$1900
WNDRAM	EQU	SCRRAM+WINDOW
MISSLE	EQU	PMADDR+$180
PLAY0	EQU	PMADDR+$200
PLAY1	EQU	PMADDR+$280
CTOP	EQU	16-4
CEND	EQU	95
CRTALL	EQU	10
CBOT	EQU	CEND-CRTALL-4
RED	EQU	$44
GOLD	EQU	$28
EXCPOS	=	SCRRAM+$28B
DEMPOS	=	EXCPOS+$500
BUDPOS	=	DEMPOS+$500
TITPOS	=	BUDPOS+$500
BNKPOS	=	SCRRAM+$29C
GOTPOS	=	BNKPOS+$500
MENPOS	=	GOTPOS+$500
GAVPOS	=	MENPOS+$500
;
ATRACT	=	$4D
DRKMSK	=	$4E
COLRSH	=	$4F
DLIVEC	=	$200
SDLSTL	=	$230
SDLSTH	=	$231
STICK0	=	$278
PCOLR0	=	$2C0
PCOLR1	=	$2C1
COLOR1	=	$2C5
COLOR2	=	$2C6
COLOR3	=	$2C7
COLOR4	=	$2C8
HPOSP0	=	$D000
HPOSP1	=	$D001
HPOSM0	=	$D004
HPOSM1	=	$D005
SIZEP0	=	$D008
SIZEP1	=	$D009
SIZEM	=	$D00C
TRIG0	=	$D010
COLPF1	=	$D017
COLPF2	=	$D018
PRIOR	=	$D01B
CONSOL	=	$D01F
GPRIOR	=	$026F
GRACTL	=	$D01D
AUDF3	=	$D204
AUDC3	=	$D205
SKCTL	=	$D20F
DMACTL	=	$D400
SDMCTL	=	$022F
HSCROL	=	$D404
PMBASE	=	$D407
WSYNC	=	$D40A
VCOUNT	=	$D40B
NMIEN	=	$D40E
SETVBV	=	$E45C
XITVBV	=	$E462
;
;
;
;
	ORG	VASADD
;	JMP	START
;START
	LDA	#128		; DISABLE VBI
	STA	SFLAG
	LDA	#40		;INITIALIZE STUFF
	STA	LINLEN
	LDA	#$11
	STA	PRIOR
	STA	GPRIOR
	LDA	#1
	STA	LASTRG
	STA	COLOR4		;BACKGROUND
	LDA	#3
	STA	SKCTL
	STA	GRACTL
	LDA	#0
	STA	SIZEP0
	STA	SIZEP1
	STA	JOYDLY
	STA	NOISFL
	STA	AUDCTL
	STA	KINDEX
	STA	KNITS
	STA	SELFLG
	TAX
T09	STA	MISSLE,X
	INX
	CPX	#16
	BNE	T09
	LDA	#$0F
	STA	SIZEM
T07	STA	MISSLE,X
	INX
	CPX	#$5F
	BNE	T07
	LDA	#0		;CLEAR OUT REST OF MISSILES
T08	STA	MISSLE,X
	INX
	CPX	#$7F
	BNE	T08
	JSR	CLEAR
	LDA	#HIGH DLISRV
	STA	DLIVEC+1
	LDA	#LOW DLISRV
	STA	DLIVEC
	LDA	#0		;TURN OFF ANTIC
	STA	DMACTL
	STA	SDMCTL
	LDA	#LOW DLADDR		;POINT ANTIC TO DL
	STA	SDLSTL
	LDA	#HIGH DLADDR
	STA	SDLSTH
X55	LDA	VCOUNT		;WAIT TOP OF SCREEN
	CMP	#16
	BCS	X55
	LDA	#$2E
	STA	DMACTL		;TURN ANTIC ON
	STA	SDMCTL
	LDA	#$C0
	STA	NMIEN
;
; SET UP PLAYERS
;
	LDA	#HIGH PMADDR
	STA	PMBASE
	LDA	#136
	STA	HPOSP0
	STA	HPOSM0
	LDA	#144
	STA	HPOSP1
	STA	HPOSM1
	LDA	#RED		;MAKE RUG RED
	STA	COLOR3		;MISSILES
	LDA	#GOLD		;MAKE PLAYERS GOLDISH
	STA	PCOLR0
	STA	PCOLR1
;
	LDA	TRAPFL
	BEQ	T02
;NEED TO BUILD TRAP RM
;WILL DO SO FIRST VBI
	LDX	CASTLE
	STA	BURNT,X
	LDA	#0
	STA	TRAPFL
	JMP	T03
;
T02	JSR	BROOM
T03	LDX	#HIGH VROOM	;SET UP VBV
	LDY	#LOW VROOM
	LDA	#7
	JSR	SETVBV
	LDA	#$C0		;SETVBV DISTROYS DMACTL
	STA	NMIEN
	LDA	#$2E
	STA	DMACTL
	STA	SDMCTL
	PLA		;RESTORE MAIN CODE
	TAY
	PLA
	TAX
	PLA
	LSR	SFLAG	; ENABLE VBI
	RTI
;
;
;
ROOM
	LDX	#8
ROOM1	LDY	#0
	LDA	(RMPTR),Y	;FETCH CHARACTER
	INC	RMPTR		;POINT TO NEXT ONE
	BNE	T15
	INC	RMPTR+1
T15	CMP	#$9B		;CARRIAGE RETURN
	BEQ	T11
	CMP	#$20		;SPACE
	BEQ	T12
	CMP	#$FF		;END OF TEXT
	BEQ	T13
	JSR	CALIG
	JMP	ROOM1
T13	RTS
;
; FOR CARRIAGE RETURN, CHANGES PADPTR
; TO NEXT LINE(32 SCAN LINES) DOWN
;
T11	LDA	PADPTR+1
	CLC
	ADC	#5
	STA	PADPTR+1
	LDX	#8		;SET OFFSET TO 8(4 CC)
	JMP	ROOM1
;
; FOR A SPACE, ADD 8 TO OFFSET
;
T12	TXA
	CLC
	ADC	#8
	TAX
	JMP	ROOM1
;
;
BROOM
	LDA	#LOW TRESRM	;SET UP POINTER
	STA	RMPTR
	LDA	#HIGH TRESRM
	STA	RMPTR+1
	JSR	ROOM
	LDA	#[SCRRAM+WINDOW]&255
	STA	PADPTR
	LDA	#[SCRRAM+WINDOW]/256
	STA	PADPTR+1
	JSR	KINGS
;
	LDA	#6
	STA	COLOR1		;LUM OF ROOMS
	LDA	#$C2		;TREASURY ROOM
	STA	COLOR2
	LDA	#$D4
	STA	TWCOL
	LDA	#7
	STA	KNITCT
	LDX	CASTLE
	LDA	TAX,X
	STA	TAXSHO
	LDA	ARMBGT,X
	STA	ARMSHO
	LDA	TITBGT,X
	STA	TITSHO
	JSR	TRNUMS
;
	LDA	#CBOT-1
	ASL	A
	STA	CHITE
	LDA	#5
	STA	ZONE
	JSR	CROWN
	RTS
;
;
;SUBROUTINE CLEAR CLEARS THE SCREEN
;AND REPOSITIONS PADPTR
;
CLEAR	LDA	#LOW SCRRAM	;REINITIALIZE PADPTR
	STA	SCNPTR
	LDA	#HIGH SCRRAM
	STA	SCNPTR+1
	LDX	#0
T04	LDA	#0
	LDY	#0
T05	STA	(SCNPTR),Y
	INY
	CPY	#$FE
	BNE	T05
	CLC
	LDA	SCNPTR
	ADC	#$FE
	STA	SCNPTR
	LDA	SCNPTR+1
	ADC	#0
	STA	SCNPTR+1
	INX
	CPX	#31
	BNE	T04
	LDA	#LOW [SCRRAM+$280]
	STA	PADPTR
	LDA	#HIGH [SCRRAM+$280]
	STA	PADPTR+1
;CLRP01
	LDA	#0
	LDX	#0
T16	STA	PLAY0,X
	STA	PLAY1,X
	INX
	CPX	#$80
	BNE	T16
	RTS
;
;
BLKOUT	LDA	#0
	STA	SDMCTL
	STA	DMACTL
	RTS
;
;
;DLI SERVICE ROUTINE CHANGES THE SCREEN COLOR
DLISRV	PHA
	LDA	TWCOL		;TEXT WINDOW
	EOR	COLRSH
	AND	DRKMSK
	STA	WSYNC
	STA	COLPF2
	LDA	#8
	EOR	COLRSH
	AND	DRKMSK
	STA	COLPF1
	PLA
	RTI
;
;
;
;SUBR CROWN POSITIONS AND DRAWS THE
;CROWN WHEN BUILDING A ROOM, MOVING
;IT, AND WHEN GOING OFF THE BOTTOM
CROWN	LDY	#0
	LDA	CHITE		;WHERE TOP OF CROWN GOES
	LSR	A
	CLC
	ADC	#4
	TAX
CROWN0	LDA	CTAB1,Y
	STA	PLAY0,X
	LDA	CTAB2,Y
	STA	PLAY1,X
	INX
	CPX	#CEND		;AT TEXT WINDOW?
	BEQ	CROWN1
	INY
	CPY	#CRTALL		;HEIGHT OF CROWN
	BNE	CROWN0
CROWN1	RTS
;
;
;VERTICAL BLANK ROUTINE
;
VROOM	JSR	PLAFAN
	LDA	NOISFL
	BEQ	VR03
	JSR	TRNOIS
VR03	LDA	JOYDLY
	BEQ	VR12
	DEC	JOYDLY
VR12	LDA	SFLAG
	BPL	VR0		;NO ROOM TO BUILD
	JMP	XITVBV
VR0	ASL	SFLAG
;
	LDA	CONSOL		;LOAD & SAVE
	AND	#4		;OPTION KEY
	BNE	VRSEL3
	JSR	BLKOUT
	LDX	#HIGH XITVBV
	LDY	#LOW XITVBV
	LDA	#7
	JSR	SETVBV
	PLA
	PLA
	PLA
	PLA
	PLA
	PLA
	JMP	SWPZED
;
VRSEL3	LDA	SELFLG		;PAUSE OPTION
	BEQ	VRSEL1		;NOT WAITING 4 DEBOUNCE
VRSEL2	LDA	CONSOL		;DEBOUNCING
	AND	#2
	BEQ	VRSEL2		;WAIT FOR 1 (UP)
	JSR	PAUSDL
	LDA	#0
	STA	SELFLG
	JMP	TRUPD1		;EXIT VBV
VRSEL1	LDA	CONSOL		;INITIAL PRESS
	AND	#2
	BNE	VR101
	LDA	#$FF
	STA	SELFLG
;
VR101	LDA	TRAPFL
	BEQ	VR115
	JMP	TRAP
VR115
	LDA	DANGER		;##
	ORA	LANGER		;##
	BNE	VR116		;##
	LDA	#$2C		;##
	STA	PCOLR0
	STA	PCOLR1
	JMP	VR111
;
VR116
	LDA	#$26		;##
	STA	COLSWP		;##
	LDA	DANGER		;##
	BNE	VR113		;##
	LDA	#$2A		;##
	STA	COLSWP		;##
	JMP	VR114		;##
;
VR113
VR114
	LDA	FLCNT
	CMP	#FLRATE
	BNE	VR112
;##	LDA	PCOLR0		;FLASH CROWN
;##	EOR	#$04
	LDA	#$2C		;##
	LDX	PCOLR0		;##
	CPX	#$2C		;##
	BNE	VR117		;##
	LDA	COLSWP		;##
VR117
	STA	PCOLR0
	STA	PCOLR1
;
VR111	LDA	#$FF
	STA	FLCNT
VR112	INC	FLCNT
	LDX	CASTLE		;NO WARNING FOR DANGER
	LDA	BURNT,X
	BEQ	VR11
	STA	DANGER,X	;IF BURNT NOT 0,DANGER
	JMP	TRAPRM		;CAN'T BE EITHER
;
VR11	LDA	STICK0
	CMP	#$0F
	BNE	VR15
;STICK NOT MOVE, SO MAGNET STUFF
	LDA	CHITE
	CMP	#32
	BCS	MAGNT4
	CMP	#27
	BCC	VR19
	JMP	VR20
MAGNT4	CMP	#160
	BCS	VR19
	AND	#$1F
	CMP	#12
	BNE	VR141		;JMP V2R
	LDA	LASTRG
	BEQ	VR01
	LDA	TRIG0
	STA	LASTRG
	CMP	#0
	BEQ	VR02
	JMP	V2R
VR01	LDA	TRIG0
	STA	LASTRG
	JMP	V2R
;SEE IF IN CAMELOT,IF SO JSR TRIG
VR02	JSR	TRIG
VR19	JMP	V2R
VR141	BCS	MAGNT2
	INC	CHITE
	JMP	VR1		;JSR CROWN,JMP V2R
MAGNT2	DEC	CHITE
	JMP	VR1		;JSR CROWN, JMP V2R
VR15	STA	ATRACT
	CMP	#$E		;UP
	BNE	VR2
	DEC	CHITE		;STICK MOVED UP
	LDA	CHITE
	AND	#$1F
	CMP	#$1F
	BNE	VR16
	JSR	FIXTRES
	JSR	GTZONE
VR16	LDA	CHITE
	LSR	A
	CMP	#CTOP		;CROWN AT TOP OF SCREEN?
	BCS	VR1
	INC	CHITE		;CAN'T GO OFF TOP
	JMP	V2R
VR1	JSR	CROWN		;MOVED UP,NOT OFF TOP
	JMP	V2R
VR2	CMP	#$D		;DOWN
	BNE	VR4
VR20	INC	CHITE		;WENT DOWN
	LDA	CHITE
	AND	#$1F
	BNE	VR25
	JSR	FIXTRES		;IN ONE ZONE LOWER
	JSR	GTZONE
VR25	LDA	CHITE
	LSR	A
	CMP	#CBOT
	BCC	VR21
	JSR	BLKOUT
	LDA	#128
	STA	SFLAG
	JMP	SWPBRT		;EXIT CASTLE, TO BR MAP
VR21	JSR	CROWN		;MOVED DOWN, NOT TO
TOV2R	JMP	V2R		;NEXT ROOM
VR4	CMP	#$B		;LEFT
	BNE	VR6
	LDA	#$FF
	STA	KINDEX
	JMP	VR27
VR6	CMP	#7		;RIGHT
	BNE	TOV2R
	LDA	#1
	STA	KINDEX
VR27	LDA	JOYDLY
	BNE	TOV2R
	LDA	#30		;WENT LEFT OR RIGHT
	STA	JOYDLY
	LDA	ZONE
	CMP	#2
	BEQ	VRTAX
	CMP	#3
	BEQ	VRARM0
	CMP	#4
	BNE	VRARM3
	LDA	KINDEX
	BPL	VRTIT1
	DEC	TITSHO
	LDA	TITSHO
	CMP	#$FF
	BEQ	VRTIT5
	JMP	VRARM2
VRTIT5	INC	TITSHO
	JMP	VRARM3
VRTIT1	INC	TITSHO
	LDA	TITSHO
	CMP	#129
	BEQ	VRTIT3
	JMP	VRARM2
VRTIT3	DEC	TITSHO
	JMP	VRARM3
VRARM0	LDA	KINDEX
	BPL	VRARM1
	DEC	ARMSHO
	LDA	ARMSHO
	CMP	#$FF
	BEQ	VRARM5
VRARM2	JSR	FIXDGT
VRARM3	LDA	#0		;EXIT HERE
	STA	KINDEX
	JMP	V2R
VRARM1	INC	ARMSHO
	BEQ	VRARM4
	JMP	VRARM2
VRTAX	LDA	KINDEX
	BPL	VRTAX1
	DEC	TAXSHO
	LDA	TAXSHO
	CMP	#$FF
	BEQ	VRTAX2
	JMP	VRARM2
VRTAX1	INC	TAXSHO
	LDA	TAXSHO
	CMP	#129
	BEQ	VRTAX3
	JMP	VRARM2
VRARM4	DEC	ARMSHO
	JMP	VRARM3
VRARM5	INC	ARMSHO
	JMP	VRARM3
VRTAX2	INC	TAXSHO
	JMP	VRARM3
VRTAX3	DEC	TAXSHO
	JMP	VRARM3
;KINDEX WILL TELL IF MOVED STICK
;LEFT OR RIGHT: 1=RIGHT,SMASK=LEFT
;AT END OF THIS LITTLE PART, SET
;KINDEX BACK TO 0.
;
;
V2R	LDA	#$80
	STA	SFLAG		;COULD HAVE ALREADY ASL
	INC	KNITCT
	LDA	KNITCT
	AND	#$3F		;UPDATE EVERY 64 TIMES
	BNE	TRUPD1
	INC	KNITS
	LDA	KNITS
	AND	#7		;ONLY 5 NEED UPDATING
	BEQ	TRUPD2
	CMP	#5
	BCC	TRUPD3
	LDA	#$FF
	STA	KNITS
	JMP	TRUPD1
TRUPD3	CLC			;(N+3)*2=UPDATED ONE
	ADC	#3
	ASL	A
TRUPD2	TAX
	LDA	AMOUNT,X
	STA	PADPTR
	LDA	AMOUNT+1,X
	STA	PADPTR+1
	LDY	CASTLE
TRUPD4	LDA	(PADPTR),Y
	CMP	NUMSHO,X
	BNE	TRUPD5
	CPX	#8
	BNE	TRUPD1
	LDA	BANK+16,Y
	CMP	NUMSHO+1,X
	BEQ	TRUPD1
TRUPD5	JSR	ERSDGT
	JSR	DODGT
TRUPD1	PLA		;DO A JMP XITVBV
	TAY
	PLA
	TAX
	PLA
	LSR	SFLAG
	RTI
;
;
FIXDGT	LDX	ZONE
	DEX
	TXA
	ASL	A
	TAX
	JSR	ERSDGT
	JMP	DODGT
;
;ZONE BEFORE IT IS UPDATED
FIXTRES	LDY	CASTLE
	LDA	ZONE
	CMP	#2
	BNE	VR153
	LDA	TAX,Y
	CMP	TAXSHO
	BEQ	VR154
	STA	TAXSHO
	JMP	FIXDGT
VR153	CMP	#3
	BNE	VR1535
	LDA	ARMBGT,Y
	CMP	ARMSHO
	BEQ	VR154
	STA	ARMSHO
	JMP	FIXDGT
VR1535	CMP	#4
	BNE	VR154
	LDA	TITBGT,Y
	CMP	TITSHO
	BEQ	VR154
	STA	TITSHO
	JMP	FIXDGT
VR154	RTS
;
;GTZONE GETS THE ZONE FROM CHITE
GTZONE	LDA	CHITE
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	STA	ZONE
	RTS
;
;
;SUBR KINGS WRITES OUT KING'S NAMES
;WHERE PADPTR IS POINTING
KINGS	LDA	CASTLE
KING3	ASL	A
	TAX
	LDA	KNGDAT,X
	STA	KNGPTR
	LDA	KNGDAT+1,X
	STA	KNGPTR+1
	LDA	#$0F
	STA	HSCROL
	LDY	#0
	LDA	TRAPFL
	BEQ	KING5		;NOT IN TRAP RM
	LDY	#7		;WRITE OUT 'KING' FOR TRAP
KING5	LDX	#8
KING4	LDA	KING,Y
	CMP	#$FF
	BEQ	KING6
	STY	STOREY
	JSR	CALIG
	LDY	STOREY
	INY
	JMP	KING4
KING6	TXA
	CLC
	ADC	#8
	TAX
KING1	LDY	#0
	LDA	(KNGPTR),Y
	INC	KNGPTR
	BNE	T53
	INC	KNGPTR+1
T53	CMP	#$FF
	BEQ	KING2
	JSR	CALIG
	CPX	#216
	BCC	KING1
	JSR	FRED
	JMP	KING1
KING2	RTS
;
KING	DB	'Vassal',$FF,'King',$FF
;
;FOR WHEN A 8-BIT X IS NOT BIG ENOUGH
FRED	TXA
	LSR	A
	LSR	A
	LSR	A
	JSR	INCPTR
	TXA
	AND	#7
	TAX
	RTS
;
;
;SUBR INCPTR INCREMENTS PADPTR BY
;THE AMOUNT IN THE ACCUMULATOR
INCPTR	CLC
	ADC	PADPTR
	STA	PADPTR
	BCC	T14
	INC	PADPTR+1
T14	RTS

	ORG	DLADDR
	DB	$70,$70,$70,$4F
	DW	SCRRAM
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F,$F
	DB	$4F,0,[SCRRAM+$1000]/256
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F
	DB	$8F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$41
	DW	DLADDR

TRAPRM	LDY	CASTLE
	LDA	AGRSSR,Y
	CMP	#$10
	BCC	TRAPR0
	LDA	#0		;NOT A VALID AGRSSR
	STA	TRAPFL
	STA	DANGER,Y
	STA	BURNT,Y
	JMP	TRUPD1
TRAPR0	STA	OPPONT
	LDA	#0
	STA	COLOR1		;LUM
	STA	KNITS
	STA	WHADD
	LDA	#40
	STA	TRAPFL		;IN TRAP ROOM
	STA	KNITS		;LOOKING FOR TRIG
	LDA	#[RED-2]
	STA	COLOR2
	STA	COLOR3		;MISSILES
	STA	COLOR4		;BKGND
	STA	TWCOL
	JSR	CLEAR
;
;WRITE OUT WORDS
	LDA	#LOW TRAPTR		;SET UP RMPTR
	STA	RMPTR
	LDA	#HIGH TRAPTR
	STA	RMPTR+1
	JSR	ROOM		;WRITE OUT
	LDA	#LOW WNDRAM
	STA	PADPTR
	LDA	#HIGH WNDRAM
	STA	PADPTR+1
	JSR	ROOM
;
;WRITE OUT INTRUDER'S NAME
	LDA	#LOW [SCRRAM+$280]
	STA	PADPTR
	LDA	#HIGH [SCRRAM+$280]
	STA	PADPTR+1
	LDA	OPPONT
	JSR	KING3
	JSR	TROPTN		;WRITE OUT FIGHT
;
;WRITE OUT NUMBERS
	JSR	GETOTH
	LDA	NUMLO
	STA	NUMSHO+1
	LDX	#0
	JSR	TRANUM
	JSR	GETARM
	LDA	NUMLO
	STA	NUMSHO+2
	LDA	NUMHI
	STA	NUMSHO+3
	LDX	#2
	JSR	TRANUM
	LDX	CASTLE
	LDA	ACTCRP,X
	STA	NUMLO
	STA	NUMSHO
	LDA	#0
	STA	NUMHI
	LDX	#4
	JSR	TRANUM
	LDA	#$90		;MAKE CROWN
	STA	CHITE
	JSR	CROWN
	LDA	#GOLD
	STA	PCOLR0
	STA	PCOLR1
	LDA	#6
	STA	COLOR1		;LUM
	JMP	TRUPD1		;EXIT VBV
;
TRANUM	LDA	TRAPOS,X
	STA	PADPTR
	LDA	TRAPOS+1,X
	STA	PADPTR+1
	JSR	GETDGT
	JSR	DRWDGT
	RTS
;
TRAPOS	DW	BNKPOS,MENPOS,WNDRAM+28
TRAPTR	DB	$9B,'has invaded',$9B
	DB	'King Arthur',$9B
TQUEST	DB	'will you',$FF
	DB	'Crops Left',$FF
CHOICE	DB	'Fight',$FF,'Wait',$FF
;
;writes out fight or wait
TROPTN	LDX	#14
	JSR	ERSDGT
TROPT1	LDA	#LOW [MENPOS+$500]
	STA	PADPTR
	LDA	#HIGH [MENPOS+$500]
	STA	PADPTR+1
	LDA	#LOW CHOICE
	CLC
	ADC	WHADD
	STA	RMPTR
	LDA	#HIGH CHOICE
	ADC	#0
	STA	RMPTR+1
	JMP	ROOM
;
GETOTH	LDX	OPPONT
	LDA	FLDARM,X
	CLC
	ADC	FLDKNT,X
	STA	NUMLO
	INC	NUMLO
	LDX	#0
	STX	NUMHI
	RTS
;
GETARM	LDX	CASTLE
	LDA	ARMSIZ,X		;VASSEL'S
	CLC
	ADC	FLDARM		;ARTHUR'S
	ADC	FLDKNT
	ADC	KGKNTS,X		;VASSAL'S KNIGHTS;
	STA	NUMLO
	INC	NUMLO		;VASSAL
	LDA	#0
	ROL	A		;CARRY INTO BIT 0
	STA	NUMHI
	RTS
;
;******* TRAP ROUTIEN *****
TRAP	LDX	CASTLE
	LDA	DANGER,X
	BNE	TRAP06
	JMP	GOBACK		;NO MORE DANGER
;
TRAP06	LDX	CASTLE
	LDA	BURNT,X
	BNE	TRAP05
	JMP	TRAP21		;WAITING
;
TRAP05	LDA	KNITS
	BNE	TRAP07
;*****WRITE OUT 'WILL YOU FIGHT' ***
	STA	WHADD
	STA	WHICH
	LDA	#LOW [SCRRAM+$1180]
	STA	PADPTR
	LDA	#HIGH [SCRRAM+$1180]
	STA	PADPTR+1
	LDA	#40
	STA	LINLEN
	STA	KNITS
	LDA	#LOW TQUEST
	STA	RMPTR
	LDA	#HIGH TQUEST
	STA	RMPTR+1
	JSR	ROOM
	JSR	TROPT1
;
;****** BIG LOOP ****
;
;****** TRIG DEBOUNCE *****
TRAP07	LDA	LASTRG
	BEQ	TRAP01
	LDA	TRIG0
	STA	LASTRG
	CMP	#0
	BEQ	TRAP02
	JMP	TRAP03
TRAP01	LDA	TRIG0
	STA	LASTRG
	JMP	TRAP03
;
TRAP02	LDA	WHADD		;TRIG PRESSED
	BNE	NOWAIT		;WAIT
;
;******* PRESSED TRIG- FIGHT***
TFIGHT
	JSR	BLKOUT
	JMP	SWPBAT
;
;***** STICK ****
TRAP03	LDA	STICK0
	CMP	#$B		;LEFT
	BEQ	TRAP04
	CMP	#7		;RIGHT
	BNE	TRAP20		;SECOND PART
TRAP04	LDA	JOYDLY
	BNE	TRAP20
	LDA	#30
	STA	JOYDLY
	INC	WHICH
	LDA	WHICH
	LSR	A
	BCC	WFIGHT
	LDA	#6		;WRITE OUT WAIT
	STA	WHADD
	JSR	TROPTN
	JMP	TRAP20
WFIGHT	LDA	#0
	STA	WHADD
	JSR	TROPTN
;
;****** WAIT FOR TRIG ******
TRAP20	JMP	TRAP06
;
;****** END OF BIG LOOP******
;
NOWAIT	LDA	#0
	LDX	CASTLE
	STA	BURNT,X
	STA	KNITS
	LDA	#LOW [SCRRAM+$1180]	;CLEAR LINE
	STA	SCNPTR
	LDA	#HIGH [SCRRAM+$1180]
	STA	SCNPTR+1
	LDX	#0
;PART OF CLWIN, VASSAL DOESN'T HAVE
T35	LDA	#0
	TAY
T34	STA	(SCNPTR),Y
	INY
	CPY	#40
	BNE	T34
	LDA	SCNPTR
	CLC
	ADC	#40
	STA	SCNPTR
	LDA	SCNPTR+1
	ADC	#0
	STA	SCNPTR+1
	INX
	CPX	#32
	BNE	T35
;****DEC CRPSTG***
	LDA	CRPSTG
	BEQ	TRAP21
	DEC	CRPSTG
;
;******UPDATE CROPS LEFT ***
TRAP21	LDX	CASTLE
	LDA	ACTCRP,X
	CMP	NUMSHO
	BEQ	TRAP22
	STA	NUMLO
	STA	NUMSHO
	LDA	#0
	STA	NUMHI
	LDX	#16
	JSR	ERSDGT
	JSR	GETDGT
	LDA	#LOW [WNDRAM+28]
	STA	PADPTR
	LDA	#HIGH [WNDRAM+28]
	STA	PADPTR+1
	JSR	DRWDGT
;
;*******UPDATE ARMY SIZES******
TRAP22	JSR	GETOTH
	LDA	NUMLO
	CMP	NUMSHO+1
	BEQ	TRAP23
	STA	NUMSHO+1
	LDA	#LOW BNKPOS
	STA	PADPTR
	STA	SCNPTR
	LDA	#HIGH BNKPOS
	STA	PADPTR+1
	STA	SCNPTR+1
	LDA	#32
	STA	COUNT
	JSR	ERSDG2
	LDA	SCNPTR
	STA	PADPTR
	LDA	SCNPTR+1
	STA	PADPTR+1
	JSR	TRNUM2
TRAP23	JSR	GETARM
	LDA	NUMLO
	CMP	NUMSHO+2
	BNE	TRAP24
	LDA	NUMHI
	CMP	NUMSHO+3
	BEQ	TRAPBK
TRAP24	LDA	NUMLO
	STA	NUMSHO+2
	LDA	NUMHI
	STA	NUMSHO+3
	LDA	#HIGH MENPOS
	STA	PADPTR+1
	STA	SCNPTR+1
	LDA	#LOW MENPOS
	STA	PADPTR
	STA	SCNPTR
	LDA	#32
	STA	COUNT
	JSR	ERSDG2
	LDA	SCNPTR
	STA	PADPTR
	LDA	SCNPTR+1
	STA	PADPTR+1
	JSR	TRNUM2
;
;***** BACK TO MAINLINE ****
TRAPBK	PLA
	TAY
	PLA
	TAX
	PLA
	LSR	SFLAG
	RTI
;
;NO MORE DANGER, BACK TO OTHER ROOM
GOBACK	LDA	#0
	STA	TRAPFL
	LDA	#1
	STA	LASTRG
	STA	COLOR4
	LDA	#RED
	STA	COLOR3		;MISSILES
	JSR	CLEAR
	JSR	BROOM
	JMP	TRAPBK

;
; Crockford's Music Interpreter
;
; Modified for Excalibur 11/11/82
;
; Entry points:
;    INTFAN -- must be called when loaded, or to silence
;    STRFAN -- must be called to start fanfare
;    PLAFAN -- must be called every VBLANK
;
; Assumes that there exists a page zero word called STREAM.
;
AUDF: =   $D200
AUDC: =   $D201
AUDCTL: = $D208
;
; NEW MUSIC INTERPRETER
;
PLAFAN:
     PROC
     LDA  MI_STATE
     BPL  :1
     RTS
:1:
     BEQ  :3
:2:
     JMP  ENVELOPE
:3:
     LDY  #0
     LDA  (STREAM),Y
     STA  CMD
     AND  #3
     TAX
     LDA  ACTIVE,X
     BNE  :2
     JSR  ADVANCE
     LSR  CMD
     LSR  CMD
     LSR  CMD
     BCC  :5
     LDA  (STREAM),Y
     BPL  :4
     INC  MI_STATE
     JMP  :2
:4:
     STA  N_MODE
     TAY
     LDA  :M,Y
     STA  AUDCTL
     LDY  #0
     JSR  ADVANCE
:5:
     LSR  CMD
     BCC  :8A
     TXA
     ASL  A
     STA  TEMP
     TXA
     AND  #2
     BNE  :7
     LDA  #4
:7:
     AND  N_MODE
     BEQ  :8
     LDA  (STREAM),Y
     STA  TEMP+1
     JSR  ADVANCE
     LDA  (STREAM),Y
     LDY  TEMP
     STA  AUDF,Y
     LDA  TEMP+1
     STA  AUDF-2,Y
     LDY  #0
     JSR  ADVANCE
     JMP  :8A
:8:
     LDA  (STREAM),Y
     LDY  TEMP
     STA  AUDF,Y
     LDY  #0
     JSR  ADVANCE
:8A:
     LSR  CMD
     BCC  :9
     LDA  (STREAM),Y
     STA  N_V,X
     JSR  ADVANCE
:9:
     LSR  CMD
     BCC  :10
     LDA  (STREAM),Y
     STA  N_ENV,X
     JSR  ADVANCE
:10:
     LDA  CMD
     BEQ  :12
     TYA
     STA  N_D_L,X
     STA  N_D_H,X
     LSR  CMD
     BCC  :11
     LDA  (STREAM),Y
     STA  N_D_L,X
     JSR  ADVANCE
:11:
     LSR  CMD
     BCC  :12
     LDA  (STREAM),Y
     STA  N_D_H,X
     JSR  ADVANCE
:12:
     LDA  #1
     STA  STAGE,X
     STA  ACTIVE,X
     LDA  N_D_L,X
     STA  TIME_L,X
     LDA  N_D_H,X
     STA  TIME_H,X
;
     LDA  N_V,X
     AND  #15
     STA  VOLUME,X
;
     LDA  ENV,X
     LSR  A
     LSR  A
     AND  #14
     STA  DECAY,X
;
     LDA  ENV,X
     AND  #7
     CLC
     ADC  VOLUME,X
     CMP  #16
     BCC  :13
     LDA  #15
:13:
     STA  TARGET,X
     LDA  N_ENV,X
     ASL  A
     BCS  :15
     BMI  :14
     LDA  #0
     JMP  :17
:14:
     LDA  VOLUME,X
     JMP  :17
:15:
     BMI  :16
     LDA  N_ENV,X
     AND  #7
     JMP  :17
:16:
     LDA  TARGET,X
:17:
     STA  LEVEL,X
     LDA  N_V,X
     LSR  A
     LSR  A
     LSR  A
     LSR  A
     TAY
     BNE  :17A
     STA  STAGE,X
     STA  LEVEL,X
     STA  TARGET,X
     STA  VOLUME,X
     JMP  :18
:17A:
     CMP  #1
     BEQ  :18
     LDA  TARGET,X
     STA  LEVEL,X
     LDA  #0
     STA  TARGET,X
:18:
     LDA  :D,Y
     STA  DISTORT,X
     JMP  ENVELOPE
;
:D:  DB   0,$A0,$00,$60
:M:  DB   0,$01,$28,$28+$01
     DB   $50,$50+$01,$50+$28,$50+$28+$01
     EPROC
;
ADVANCE_STREAM:
     PROC
     INC  STREAM
     BNE  :1
     INC  STREAM+1
:1:
     RTS
     EPROC
;
ENVELOPE:
     PROC
     LDX  #0        ; X := 0
     LDY  #0
:1:                 ; do
     LDA  ACTIVE,X  ;   if ACTIVE.X <> 0
     BEQ  :5        ;     then
     LDA  STAGE,X   ;       if STAGE.X = UP
     BEQ  :2        ;         then
     INC  LEVEL,X;              LEVEL.X += 1
     LDA  LEVEL,X;              AUDC.X := 
     CMP  #16       ;             MIN (LEVEL.X, 15) or
     BCC  :1A
     LDA  #15
:1A:
     ORA  DISTORT,X
     STA  AUDC,Y    ;             DISTORT.X
     LDA  LEVEL,X   ;           if LEVEL.X >= TARGET.X
     CMP  TARGET,X  ;             then
     BCC  :3
     LDA  VOLUME,X  ;               TARGET.X := VOLUME.X
     STA  TARGET,X
     DEC  STAGE,X   ;               STAGE.X := 0
     JMP  :3        ;           fi
:2:                 ;         else
     LDA  TARGET,X  ;           if TARGET.X < LEVEL.X
     CMP  LEVEL,X
     BCS  :3        ;             then
     DEC  LEVEL,X   ;               LEVEL,X -= 1
     LDA  LEVEL,X   ;               AUDC.X := LEVEL.X
     ORA  DISTORT,X ;                 or DISTORT.X
     STA  AUDC,Y
:3:                 ;       fi  fi
     LDA  TIME_H,X  ;       if DECAY.X >= TIME.X
     BNE  :5
     LDA  DECAY,X
     CMP  TIME_L,X
     BCC  :4        ;         then
     LDA  #0        ;           TARGET.X := 0
     STA  TARGET,X
:4:                 ;       fi
     DEC  TIME_L,X  ;       TIME -= 1
     BEQ  :4A
     LDA  TIME_L,X
     CMP  #$FF
     BNE  :5
     DEC  TIME_H,X
     JMP  :5
:4A:
     LDA  TIME_H,X
     BNE  :5        ;       if TIME = 0
                    ;          then
     LDA  #$A0      ;            AUDC.X := $A0
     STA  AUDC,Y
     LDA  #0
     STA  ACTIVE,X  ;            ACTIVE.X := 0
:5:                 ;   fi  fi
     INY            ;   X += 1
     INY            ;   if X = 4
     INX            ;     then
     CPX  #4        ;       exit
     BNE  :1        ;   fi
     LDA  ACTIVE    ; od
     ORA  ACTIVE+1  ; if ACTIVE [0..3] = 0
     ORA  ACTIVE+2
     ORA  ACTIVE+3
     BNE  :6
     LDA  MI_STATE  ; andif MI_STATE <> 0
     BEQ  :6        ;   then
     LDA  #$FF      ;     MI_STATE := DONE
     STA  MI_STATE
:6:
     RTS            ; fi
     EPROC
;
;
