;
;SUBR TRIG 
TRIG	LDX	ZONE
	BEQ	TRG13
	CPX	#5
	BEQ	TRG13
	DEX
	STX	TIMP1
	LDX	ROOMIN
;MAKE SURE OKAY
	CPX	#1
	BNE	TRG12
	LDY	KINDEX		;NO ARTHUR IN RT
	BEQ	TRG13		;0 IF NO NAME
	LDA	KNTIN,Y
	BEQ	TRG13		;THE DUDE NOT IN
TRG12	CPX	#4		;MERLIN
	BNE	TRG11
	LDA	SHOWME		;IS HE THERE?
	BEQ	TRG13		;NO
	LDA	MAGIC
	AND	#$F0
	BEQ	TRG13		;CAN'T DO WORK
	LDY	KINDEX
	LDA	LIEGE,Y
	BEQ	TRG13		;NONE OF ART'S VASSALS!
TRG11	DEX
	TXA
	ASL	A
	ASL	A		;*8
	ADC	TIMP1		;CARRY ALREADY=0
	ASL	A
	TAX
	CMP	#16		;WEALTH
	BEQ	TRG13
	CMP	#22		;DEMAND
	BEQ	TRG13
	CMP	#12		;STATUS
	BEQ	TRG13
	CMP	#8		;TRIBUTE
	BNE	TRG152
	LDA	TRIBFL		;IN TRIB MODE
	BNE	TRG151
	BEQ	TRG153		;OR KINDEX CAN'T =0
TRG152	CMP	#10		;ATTACK
	BNE	TRG151
TRG153	LDA	KINDEX
	BEQ	TRG13		;NO NAME UP
;
TRG151
	JSR	DONOIS
	LDA	TRGOTO,X
	STA	RMPTR
	LDA	TRGOTO+1,X
	STA	RMPTR+1
	JMP	(RMPTR)
TRG13	RTS		;NOT IN ACCEPTABLE ZONE
;
;DOES NOISE FOR TRIG ACKNOWLEDGE
DONOIS	LDA	#1
	STA	NOISFL
	LDA	#$A6
	STA	AUDC3
	LDA	#$60
	STA	AUDF3
	LDA	#15
	STA	NOISCT
	RTS
;
TRG1Z1	LDX	KINDEX		;GIFT
	LDA	BANK
	CMP	#GIFDEC
	BCS	TRG172
	LDA	BANK+16
	BNE	TRG172
	STA	BANK
	STA	BANK+16
	RTS
;GIFT NEEDS RECIEVER(KINDEX) IN X
TRG172	JSR	MULX16
	LDA	GFTFAC,X
	TAY
	LDA	KNTKNT,X
	BEQ	GIFT1
GIFT4	CPY	RANDOM
	BCC	GIFT2
	SBC	#1
	CMP	#3
	BCS	GIFT4
GIFT1	LDA	#2
GIFT2	STA	KNTKNT,X
	LDA	BANK
	SEC
	SBC	#GIFDEC
	STA	BANK
	BCS	TRG17
	DEC	BANK+16		;IF C=0 THEN BORROWED
TRG17	RTS
;
;GFTFAC IS A TABLE DEFINING THE
;SUSCEPTIBILITY OF EACH KNIGHT TO
;BRIBERY. A LARGE VALUE IMPLIES A
;BRIBABLE KNIGHT. A SMALL VALUE
;IMPLIES A KNIGHT IMMUNE TO BRIBERY.
GFTFAC	DB	0,$D0,$A0,$80
	DB	$20,$60,$30,$10
	DB	$A0,$70,$80,$70
	DB	$A0,$90,$50,$B0
;
MULX16	TXA
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	TAX
	RTS
;
TRG1Z2	LDX	KINDEX		;HONOR
	CPX	#11		;NOT HONOR GWY
	BEQ	HONOR2
;HONOR NEEDS RECEIPITANT IN X
	INC	KNTHON,X
	LDA	KNTHON,X
	CMP	#241		;LIMIT IS 240!
	BCC	HONOR3
	DEC	KNTHON,X
	JMP	HONOR2		;NO CHANGE
HONOR3	INC	TOTHON
	BNE	HONOR5
	LDX	#$F		;TOTHON=0 ALREADY
HONOR1	CPX	#11
	BEQ	HONOR4
	LDA	KNTIN,X
	BEQ	HONOR4
	LSR	KNTHON,X
	BNE	HONOR7
	INC	KNTHON,X
HONOR7	LDA	TOTHON
	CLC
	ADC	KNTHON,X
	STA	TOTHON
HONOR4	DEX
	BNE	HONOR1
HONOR5	JSR	KREL
	JSR	KARM
	LDA	#44
	STA	LINLEN
	JSR	KNAME5		;NEW # MEN IN WINDOW
HONOR2	RTS
;
KREL	LDX	#$0F
KREL1	LDA	#0
	STA	RELHON,X
	LDA	KNTIN,X
	BEQ	KREL2
	CPX	#11
	BEQ	KREL2
	LDA	KNTHON,X
	STA	DIVDEN
	LDA	TOTHON
	STA	DIVSOR
	JSR	FDIVIDE
	LDA	RESULT
	STA	RELHON,X
KREL2	DEX
	BNE	KREL1
	RTS
;
KARM	LDX	#$0F
	LDA	ARMSIZ
	BEQ	KARM10		;NO ARMY AT ALL!
	LSR	A			;FOR ARTHUR
	LSR	A
	LSR	A
	STA	ARMSAV
	BNE	KARM7
	INC	ARMSAV		;ARTHUR GETS AT LEAST 1
KARM7	LDA	ARMSAV
	STA	KNTARM		;FOR ARTHUR
	LDA	ARMSIZ
	SEC
	SBC	ARMSAV
	STA	ARMSAV
	STA	TIMP1
KARM1	LDA	KNTIN,X
	BEQ	KARM2
	CPX	#11
	BEQ	KARM2
	LDA	RELHON,X
	STA	FRAC
	LDA	ARMSAV
	JSR	FRCT1B
	BNE	KARM4
	LDA	#1
KARM4	CMP	TIMP1
	BCC	KARM6
	LDA	TIMP1
KARM6	STA	KNTARM,X
	LDA	TIMP1
	SEC
	SBC	KNTARM,X
	STA	TIMP1
KARM2	DEX
	BNE	KARM1
	LDA	TIMP1
	BEQ	KARM5
KARM3	LDX	#15		;HAND OUT LEFTOVER MEN
KARM8	LDA	KNTIN,X
	BEQ	KARM9
	CPX	#11		;GWYNE
	BEQ	KARM9
	INC	KNTARM,X
	INC	NUMHI
	DEC	TIMP1
	BEQ	KARM5
KARM9	DEX
	BPL	KARM8		;ART GET TOO
	JMP	KARM3		;STILL SOME MEN LEFT
KARM5	RTS
KARM10	STA	KNTARM,X		;0 ARMSIZ
	DEX			;SO ALL GET 0 MEN
	BPL	KARM10		;ART GETS 0 TOO
	RTS
;
;FRACTIONAL DIVIDE. THE DIVISOR IS
;BIGGER THAN THE DIVIDEND. IF NOT,
;RET
;INPUTS: DIVDEN=DIVIDEND AND DIVSOR=
;DIVISOR
;OUTPUTS RESULT
;PRESERVES X AND Y REGISTERS
FDIVIDE	LDA	#$80
	STA	FDMASK
	LDA	#0
	STA	RESULT
FDIV02	LDA	DIVDEN
	CMP	DIVSOR		;IF DIVDED>=DIVSOR THEN
	BCC	FDIV01
	LDA	RESULT		;RESULT GETS MASKED BIT
	CLC
	ADC	FDMASK
	STA	RESULT
	LDA	DIVDEN		;& DIVDEN=DIVDEN-SHIFTED
	SEC				;DIVSOR
	SBC	DIVSOR
	STA	DIVDEN		;FI
	BEQ	FDIV03
FDIV01	LSR	DIVSOR		;SHIFT DIVISOR RT
	LSR	FDMASK		;SHIFT MASKED BIT
	BCC	FDIV02
	LDA	DIVDEN
	BEQ	FDIV03
	INC	RESULT
FDIV03	RTS
;
;A HAS 1 BYTE TO BE REDUCED
;FRAC=FRACTION TO USE
;RETURNS RESULT IN A
FRCT1B	LDY	FRAC
	CPY	#$FF
	BNE	FRCT01
	RTS
FRCT01	STA	STOREY
	LDA	#$80
	STA	FDMASK
	LDA	#0
	STA	RESULT
FRCT03	LSR	STOREY
	LDA	FDMASK
	BIT	FRAC
	BEQ	FRCT02
	LDA	STOREY
	CLC
	ADC	RESULT
	STA	RESULT
FRCT02	LSR	FDMASK
	BCC	FRCT03
	LDA	RESULT
	RTS
;
;
TRG1Z3		LDX	KINDEX		;BANISH
	LDA	TOTHON		;GET RID OF HIS HONOR
	SEC
	SBC	KNTHON,X		;(FROM TOTAL HONOR)
	STA	TOTHON
	LDA	#0
	STA	KNTHON,X
	STA	KNTCOL,X
	STA	KNTIN,X		;NOT IN
	STA	KNTARM,X		;NO MEN AT ARMS
	JSR	GETPLT
;	JSR	ERSPLT
	LDA	#0
	STA	HPOSP3
	JSR	KREL
	JSR	KARM
	JMP	CLWIN
;
TRG1Z4	LDX	KINDEX		;SELECT
	LDA	KNTCOL,X		;SWITCH COLORS
	CMP	#$36
	BEQ	TRG16
	LDA	#$36
TRG18	STA	KNTCOL,X
	STA	PCOLR3
TRG14	RTS
TRG16	LDA	#$C4		;DESELECT HIM
	JMP	TRG18
;
TRG2Z1				;TRIBUTE
	LDX	KINDEX
	LDA	TRIBFL
	BNE	TRB3
	STX	SAVKNG
	LDA	#$FF
	STA	SMASK
	STA	TRIBFL
	LDA	#$34
	STA	TWCOL
	LDA	#0
	STA	KINDEX
	RTS
TRB3	LDA	SAVKNG
	STA	KINDEX
	LDA	NUMSHO		;SECOND TRIG
	STA	TRIBUT
	BNE	TRB31
	LDX	TRBTOR		;WHO ART WAS PAYING
	BEQ	TRB32		;NO ART
	CPX	#$10
	BCS	TRB32
	JSR	MULX16
	LDY	#$40
	LDA	LIEGE,X
	BNE	TRB33
	LDY	#$10		;VASSAL
TRB33	TYA
	STA	KNGSTS,X
	LDA	#$10
	STA	TRBTOR		;ART NOT PAYING ANYONE
	JMP	TRB32
;
TRB31	LDX	SAVKNG
	CPX	TRBTOR		;WHO ART WAS PAYING
	BEQ	TRB32		;SAME GUY
	LDX	TRBTOR
	BEQ	TRB32		;NO ART!
	JSR	MULX16
	LDA	#$40
	STA	KNGSTS,X		;ART NEUT TO OLD GUY
	LDX	SAVKNG
	STX	TRBTOR
	JSR	MULX16
	LDA	#$20		;ARTHUR A TRIB. OF X
	STA	KNGSTS,X
;
TRB32	LDA	#0
	STA	TRIBFL
	LDA	#$D4
	STA	TWCOL
	LDA	#$0F
	STA	SMASK
	RTS
;
MINUSA	LDA	#$FF
	STA	SCRRAM+$290+$280
	STA	SCRRAM+$291+$280
	STA	SCRRAM+$2B8+$280
	STA	SCRRAM+$2B9+$280
	STA	SCRRAM+$2E0+$280
	STA	SCRRAM+$2E1+$280
	RTS
;
DOKNGD	LDA	#0
	STA	NUMLO
	STA	NUMHI
	STA	NUMSHO+1
	LDX	KINDEX
	LDA	TRBTOR,X
	CMP	CASTLE
	BNE	TRBDGT
	LDA	TRIBUT,X
	STA	NUMLO
	STA	NUMSHO+1
;
TRBDGT	LDA	#LOW [WNDRAM+28]
	STA	PADPTR
	LDA	#HIGH [WNDRAM+28]
	STA	PADPTR+1
	LDA	#44
	STA	LINLEN
	JSR	GETDGT
	JMP	DRWDGT
;
;X HAS KINDEX
DOARTD	TXA
	LDY	CASTLE
	CMP	TRBTOR,Y
	BNE	TRB1
	JSR	MINUSA
	JMP	ARTTRB
TRB1	LDA	#0
	STA	NUMLO
	STA	NUMHI
	STA	NUMSHO
	JMP	ACTDG2
;
ARTTRB	LDA	TRIBUT,Y
	STA	NUMLO
	STA	NUMSHO
	LDA	#0
	STA	NUMHI
ACTDG2	LDA	#LOW [EXCPOS+1]
	STA	PADPTR
	LDA	#HIGH [EXCPOS+1]
	STA	PADPTR+1
	LDA	#40
	STA	LINLEN
	JSR	GETDGT
	JMP	DRWDGT
;
TRG2Z2	LDX	KINDEX		;ATTACK
	LDA	AGRSSR,X
	BNE	ATT06
	JSR	NOATCK		;ART ATTACK,TOGGLE
	LDX	KINDEX
	JMP	GETCO1		;NOT ORANGE
ATT06	CMP	#$10
	BCC	ATT03		;SOMEONE ELSE ATTACKING
ATT04	JSR	NOATCK
	TXA			;X=0
	LDX	KINDEX
	STA	AGRSSR,X
	STX	TARGIT
	LDA	#1
	STA	CAMPGN
	STA	DANGER,X
	LDA	CAMPGN,X
	BEQ	ATT05
	LDA	RETRET,X
	BEQ	ATT05
	SEC
	SBC	ADVNCE,X
	LSR	A
	STA	GEORGE,X
ATT05	JMP	T377		;PCOL2,3=$46,RTS
;
;CLEARS OUT ART'S OLD ATTACKEES
;BEFORE DECLARING ANOTHER,AND UPON
;ENTERING CAMELOT
NOATCK	LDX	#15
ATT02	LDA	AGRSSR,X		;CAN'T ATTACK 2
	BNE	ATT01
	STA	DANGER,X
	LDA	#$10
	STA	AGRSSR,X
ATT01	DEX
	BNE	ATT02
	LDA	#$10
	STA	TARGIT		;ART AFTER NO ONE
ATT03	RTS
;
TRG2Z4	JSR	CLWIN		;NEWS
	JSR	NEWS
	JSR	CLRP01
	LDA	#136
	STA	HPOSP0
	LDA	#144
	STA	HPOSP1
	LDA	#GOLD
	STA	PCOLR0
	STA	PCOLR1
	JSR	CROWN
	LDA	KINDEX
	BNE	TRG19
	INC	KINDEX		;IF NO NAME UP
TRG19	JMP	THRONE
;
TRG2Z3		;PRESTIGE
TRG3Z1				;WEALTH
TRG3Z4				;DEMAND
TRG3Z2	LDA	TAXSHO		;TAXES
	STA	TAX
	RTS
TRG3Z3	LDA	ARMSHO		;ARMY
	STA	ARMBGT
	RTS
;
TRG4Z1			;CHANGE STUFF HERE
	LDX	KINDEX
	LDA	CHGKNG,X
	CLC
	ADC	#$40
	BCC	CHG001
	LDA	#$FF
CHG001	STA	CHGKNG,X
	LDX	#0
	JMP	DECMAG
TRG4Z2	LDX	KINDEX		;PESTILENCE
	LDA	ACTCRP,X
	LSR	A		;DIVIDE BY 2????
	CMP	#32		;CAN'T BE <32
	BCS	TRG47
	LDA	#32
TRG47	STA	ACTCRP,X
	LDX	#1
	JMP	DECMAG
TRG4Z3	LDX	KINDEX		;PLAGUE
	LDA	FLDARM,X
	LSR	A
	STA	FLDARM,X
	LDA	ARMSIZ,X		;DIVIDE BY 2
	LSR	A
	STA	ARMSIZ,X
	SEC				;UPDATE HOMARM
	SBC	FLDARM,X
	STA	HOMARM,X
	LDA	ARMEXP+16,X
	LSR	A
	STA	ARMEXP+16,X
	LDA	ARMEXP,X
	ROR	A
	STA	ARMEXP,X
	LDX	#2
	JMP	DECMAG
;
TRG4Z4	LDA	KINDEX		;SEE
	STA	CASTLE		;TO NEW CASTLE
	LDA	#3		;APPEAR AT TOP OF TRES ROOM
	TAX
	STA	ROOMIN
	STA	BFLAG
	LDA	CBOT*2
	STA	CHITE		;WILL JMP BUILD LATER
DECMAG
	LDA	MAGIC		;DECREASE MAGIC
	SEC
	SBC	MERFAD,X
	BCS	TRG46
	LDA	#0
TRG46	STA	MAGIC
	LDA	#0
	STA	MAGCNT		;HOW LONG MERLIN GONE
	STA	MERFLG
	STA	SHOWME		;CUZ HE'S LEAVING
	CPX	#3
	BEQ	TRGN2		;NO FADOUT IF SEE
	JMP	FADOUT
;
MERFAD	DB	CHANGE,PEST,PLAGUE,SEE
;
TRNOIS	DEC	NOISCT
	LDA	NOISCT
	BEQ	TRGN1
	CMP	#10
	BNE	TRGN2
	LDA	#$90
	STA	AUDF3
TRGN2	RTS
TRGN1	STA	AUDC3
SWCAS1	RTS
;
;SUBR SWCAST RETURNS ARTHUR BACK TO
;CAMELOT
SWCAST	LDA	#0
	STA	CASTLE
	STA	COLOR2
	LDA	#8
	STA	COLOR1
	LDX	KINDEX
	BEQ	SWCAS2
	LDA	LIEGE,X
	BNE	SWCAS1		;RTS
SWCAS2	JSR	VASSEE
	CMP	#$FF
	BNE	SWCAS3
	LDA	#0
	STA	KINDEX
	JMP	CLWIN
SWCAS3	JMP	KINGS		;NEW NAME UP
;
;DATA FOR CURSOR SHIELD
SHIELD	DB	$99,$FF,$FF,$FF
	DB	$FF,$FF,$7E,$18
;
;CROWN DATA TABLE
CTAB1	DB	0,1,$23
	DB	$23,$37,$37,$3F
	DB	$3F,$3F,0
CTAB2	DB	0,0,$88
	DB	$88,$D8,$D8,$F8
	DB	$F8,$F8,0
;
;ADDR OF WHERE ROUTIENS FOR TRIG
;STUFF ARE
TRGOTO	DW	TRG1Z1
	DW	TRG1Z2
	DW	TRG1Z3
	DW	TRG1Z4
	DW	TRG2Z1
	DW	TRG2Z2
	DW	TRG2Z3
	DW	TRG2Z4
	DW	TRG3Z1
	DW	TRG3Z2
	DW	TRG3Z3
	DW	TRG3Z4
	DW	TRG4Z1
	DW	TRG4Z2
	DW	TRG4Z3
	DW	TRG4Z4

;MORE OF CAMVBI
;
DOPRST	LDY	CASTLE
	LDA	PRESTG,Y
	STA	NUMSHO+2
	STA	NUMLO
	LDA	#0
	STA	NUMHI
	LDA	#40
	STA	LINLEN
	LDX	#4
	JSR	ERSDGT
	LDA	#LOW BUDPOS
	STA	PADPTR
	LDA	#HIGH BUDPOS
	STA	PADPTR+1
	JSR	GETDGT
	JMP	DRWDGT
;
;TRES UPDATE FOR EXPERIENCE
;ALSO FOR BUILDING THE ROOM
TRUPEX	LDY	CASTLE
	LDA	ARMEXP,Y
	STA	CPRODL
	LDA	ARMEXP+16,Y
	STA	CPRODH
	LDA	ARMSIZ,Y
	BNE	TRUPE6
	STA	CPRODL		;0 ARMY SIZE,SO 0 EXPER
	STA	CPRODH
	JMP	TRUPE5
TRUPE6	STA	DIVRLO
	LDA	#0
	STA	DIVRHI
;DIVIDE ROUTINE
DIVIDE	LDY	#16
	LDA	#0
	STA	MULTR1
	STA	MULTR2
LOOP11	ASL	CPRODL
	ROL	CPRODH
	ROL	MULTR1
	ROL	MULTR2
	LDA	MULTR1
	SEC
	SBC	DIVRLO
	TAX
	LDA	MULTR2
	SBC	DIVRHI
	BCC	TRUPE3
	STA	MULTR2
	STX	MULTR1
	INC	CPRODL
TRUPE3	DEY
	BNE	LOOP11
	LDA	CPRODH
	BEQ	TRUPE5
	LDA	#$FF		;IF OVER 255,MAKE IT 255
	STA	CPRODL
	LDA	#0
	STA	CPRODH
TRUPE5	RTS

;
FIXDGT	LDX	ZONE
	DEX
	TXA
	ASL	A
	TAX
	LDA	#40
	STA	LINLEN
	JSR	ERSDGT
	JMP	DODGT
;
;ZONE BEFORE IT IS UPDATED
;FIXES TRIBUTE TOO
FIXTRES	LDA	CASTLE
	BNE	GTZONE
	LDA	ROOMIN
	CMP	#3
	BNE	VR152
	LDA	ZONE
	CMP	#2
	BNE	VR153
	LDA	TAX		;ZONE 2
	CMP	TAXSHO
	BEQ	GTZONE
	STA	TAXSHO
	JMP	VR13
VR153	CMP	#3
	BNE	GTZONE
	LDA	ARMBGT		;ZONE 3
	CMP	ARMSHO
	BEQ	GTZONE
	STA	ARMSHO
VR13	JSR	FIXDGT
;GTZONE GETS THE ZONE FROM CHITE
GTZONE	LDA	CHITE
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	STA	ZONE
FIXTH5	RTS
;
VR152	CMP	#2		;THRONE ROOM
	BNE	GTZONE
	LDA	ZONE
	CMP	#1
	BNE	VR154
	LDA	TRIBFL
	BEQ	VR154
	LDA	#$0F		;WAS IN TRIB. MODE
	STA	SMASK
	LDX	SAVKNG
	STX	KINDEX
	CPX	TRBTOR		;WHO ART PAYING
	BEQ	FTRES2
	LDA	#0
	JMP	FTRES3
FTRES2	LDA	TRIBUT		;WHAT ART PAY HIM
	CMP	NUMSHO
	BEQ	FTRES1
FTRES3	STA	NUMSHO
	STA	NUMLO
	LDA	#0
	STA	NUMHI
	LDA	#40
	STA	LINLEN
	LDX	#18
	JSR	ERSDGT
	LDA	NUMSHO
	BEQ	FTRES4
	JSR	MINUSA
FTRES4	JSR	ACTDG2
FTRES1	LDA	#0
	STA	TRIBFL
	LDA	#$D4
	STA	TWCOL
VR154	JSR	GTZONE
;EITHER ZONE CHANGED, OR NOW SOMEONE
;AFTER KINDEX. ONLY CAMELOT!
FIXTHR	LDA	ZONE
	CMP	#2
	BNE	FIXTH8
FIXTH4	LDX	KINDEX
	LDA	LIEGE,X
	BEQ	FIXTH7		;ART'S VASSAL
	LDA	AGRSSR,X		;IS HE BEING ATTACKED?
	BEQ	FIXTH5		;BY ARTHUR,OKAY
	CMP	#$10
	BCC	FIXTH7
	TXA
	CMP	TRBTOR
	BNE	FIXTH5
FIXTH7	JSR	ATACSE
	LDX	KINDEX
	BEQ	FIXTH1		;NO ART!
	CMP	#$FF
	BNE	THRONE
FIXTH1	JSR	CLWIN
	LDA	#40
	STA	LINLEN
	LDA	#0
	STA	KINDEX
	STA	HPOSP2		;NO PLAYER ON BRIT
	STA	HPOSP3
	LDX	#18
	JMP	ERSDGT		;NO TRIB NUMBER
THR01	RTS
;
FIXTH8	CMP	#1
	BNE	THR01
	LDA	TRIBFL		;ZONE 1 ONLY
	BNE	THR01		;DO NOTHING
	LDX	KINDEX
	LDA	LIEGE,X
	CMP	#$10
	BCS	THR01
	TXA
	STA	SAVKNG
	JSR	FIXTH2
	LDX	KINDEX
	BEQ	FIXTH1		;NO ART!
	CPX	SAVKNG
	BEQ	FIXTH1		;CLEAR STUFF
THRONE
	JSR	KINGS		;WRITE OUT KING'S NAME
	JSR	KNGDOM		;LIGHT UP KING'S CASTLE
THR02	LDX	#16
	JSR	ERSDGT
	LDA	#40
	STA	LINLEN
	LDX	#18
	JSR	ERSDGT
	LDX	KINDEX
	JSR	DOARTD
	JMP	DOKNGD
;
DOTRIB
	LDA	KINDEX
	BPL	DOTR1
	LDA	NUMSHO
	BEQ	VR1541
	DEC	NUMSHO
	JSR	FIXTRB
	LDA	NUMSHO
	BEQ	VR1541
	JMP	MINUSA
VR1541	RTS
;
DOTR1	LDA	NUMSHO
	CMP	#99
	BEQ	VR1541
	INC	NUMSHO
	JSR	FIXTRB
	JMP	MINUSA
;
FIXTRB	LDA	NUMSHO
	STA	NUMLO
	LDA	#0
	STA	NUMHI
	LDX	#18
	LDA	#40
	STA	LINLEN
	JSR	ERSDGT
	JMP	ACTDG2
;
;BEFORE CALLING FIXTH2, CHECK TRIBFL
;MUST NOT BE IN TRIB MODE! (TRIBFL=0)
FIXTH2	LDA	ZONE
	CMP	#1
	BNE	FIXTH6
	LDX	KINDEX
	LDA	LIEGE,X
	CMP	#$10
	BCS	FIXTH6
	JMP	VASSEE
FIXTH6	RTS
;
;
;SET UP ARTHUR'S FIELD ARMY AND
;NUMBER OF KNIGHTS SELECTED
;USED WHEN LEAVING CAMELOT
VRBYE3	LDX	#0
	STX	FLDARM
	STX	FLDKNT
	JMP	VRBYE4		;FOR ARTHUR
VRBYE2	LDA	KNTCOL,X
	CMP	#$36
	BNE	VRBYE1
VRBYE4	INC	FLDKNT
	LDA	FLDARM
	CLC
	ADC	KNTARM,X
	STA	FLDARM
VRBYE1	INX
	CPX	#16
	BNE	VRBYE2
;SET UP CROPS
	LDX	#0
	LDA	#1
HITCR1	STA	HITCRP,X
	INX
	BNE	HITCR1
	LDX	TARGIT
	CPX	#$10
	BCS	HITCR3		;NO TARGIT SET
	JSR	MULX16
	LDY	#$0F
	LDA	#0
HITCR2	STA	HITCRP,X
	INX
	DEY
	BPL	HITCR2
;
HITCR3	JMP	BLKOUT
;
;
;
;
;
;
;JUST TO SAVE BYTES IN LEFT/RIGHT(RT)
FRED3	JSR	FRED2		;INC OR DEC
	JSR	KNTSEE
	DEY
	RTS
;
;
;SUBR KNTSEE SEES IF THE KNIGHT
;IS IN THE ROOM
;WHWAY=FF FOR DEC,1 FOR INC
;RETURNS A=$FF IF NO KNIGHTS
KNTSEE	LDY	#16
T62	LDA	KINDEX
	BEQ	T62222
	TAX
	LDA	KNTIN,X		;IF =0,NOT THERE
	BNE	ATAC05
T62222	JSR	FRED2		;INC OR DEC KINDEX
	DEY
	BNE	T62
	JSR	KMASK
	LDA	#$FF
	RTS
;
;
;FOR THRONE ROOM, TRIES TO FIND KING
;WHO IS NOT BEING ATTACKED, FOR
;DISPLAY IN ATTACK ZONE
;NEEDS KINDEX, WHWAY=FF FOR DEC,1 FOR
;INC, RETURNS A=FF FOR NO ONE OPEN
ATACSE	LDY	#16
ATAC04	LDA	KINDEX
	BEQ	ATAC01
	TAX
	LDA	LIEGE,X
	BEQ	ATAC01		;NOT ART'S VASSAL
	LDA	AGRSSR,X
	BEQ	ATAC05		;ATRHUR ATTACK,OKAY
	CMP	#$10
	BCC	ATAC01
	TXA
	CMP	TRBTOR		;ART PAY TRIB TO
	BNE	ATAC05
ATAC01	JSR	FRED2
	DEY
	BNE	ATAC04
ATAC06	JSR	KMASK
	JSR	FIXTH1
	LDA	#$FF
ATAC05	RTS
;
;FOR TRIBUTE, ONLY IN CAMELOT
;SKIP ANYONE'S VASSAL
VASSEE	LDY	#16
VASSE1	LDX	KINDEX
	BEQ	VASSE3
	LDA	LIEGE,X
	CMP	#$10
	BCS	ATAC05
VASSE3	JSR	FRED2
	DEY
	BNE	VASSE1
	JMP	ATAC06
;
;
;SUBR KNAME WRITES KNIGHT'S NAME IN
;TEXT WINDOW.
KNAME	LDA	KINDEX
	JSR	GKNPTR
	JSR	CLWIN
	LDA	#$0F
	STA	HSCROL
	LDX	#0		;FOR CALIG
	LDA	KINDEX
	CMP	#11
	BEQ	KNAME1
	LDX	#8		;START 4 CC OVER
	LDY	#0
KNAME2	LDA	SIR,Y
	STY	STOREY
	JSR	CALIG
	LDY	STOREY
	INY
	CPY	#3
	BNE	KNAME2
KNAME1	JSR	T12		;IN ROOM
;DO # MEN AT ARMS IN WINDOW
KNAME5	LDX	KINDEX
	CPX	#11
	BEQ	KNAME4
	LDA	KNTARM,X
	STA	NUMLO
	STA	NUMSHO
KNAME3	LDA	#0
	STA	NUMHI
	LDX	#16
	LDA	#44
	STA	LINLEN
	JSR	ERSDGT
	JMP	TRBDGT
;
SIR	DB	'Sir'
;
;SUBR GKNPTR GETS THE KNIGHT'S AD-
;DRESS INTO KNGPTR
;A HAS KNIGHT #, KINDEX OR KNITS
GKNPTR	ASL	A
	TAX
	LDA	KNTAB,X
	STA	KNGPTR
	LDA	KNTAB+1,X
	STA	KNGPTR+1
KNAME4	RTS
;
;
MERFIX	LDA	KINDEX
	BNE	VR9
	JSR	FRED2		;INC OR DEC
VR9	LDY	#16
VR91	LDX	KINDEX
	BEQ	VR93		;SKIP ART
	LDA	LIEGE,X
	BNE	KINGS		;(VR92) OKAY
VR93	JSR	FRED2
	DEY
	BNE	VR91
	JSR	KMASK
	JMP	CLWIN
;VR92	JMP	KINGS
;
;SUBR KINGS WRITES OUT KING'S NAMES
;IN THE TEXT WINDOW
KINGS	JSR	CLWIN
	LDA	KINDEX
KING3	ASL	A
	TAX
	LDA	KNGDAT,X
	STA	KNGPTR
	LDA	KNGDAT+1,X
	STA	KNGPTR+1
	LDA	#$0F
	STA	HSCROL
	LDY	#0
	LDX	KINDEX
	BEQ	KING7		;ART NO VASSAL!!
	LDA	LIEGE,X		;IS HE A VASSAL?
	CMP	#$10
	BCS	KING7
	LDY	#5
KING7	LDX	#8
KING4	LDA	KING,Y
	CMP	#$FF
	BEQ	KING6
	STY	STOREY
	JSR	CALIG
	LDY	STOREY
	INY
	JMP	KING4
KING6	JMP	T12		;IN ROOM
;
KING	DB	'King',$FF,'Vassal',$FF
;
;FOR WHEN A 8-BIT X IS NOT BIG ENOUGH
FRED	TXA
	LSR	A
	LSR	A
	LSR	A
	JSR	INCPTR
	TXA
	AND	#7
	TAX
	RTS
;
;FOR INC OR DEC KINDEX
FRED2	LDA	KINDEX
	CLC
	ADC	WHWAY
	STA	KINDEX
;KMASK KEEPS KINDEX SMALL ENOUGH
KMASK	LDA	KINDEX
	AND	SMASK
	STA	KINDEX
	RTS
;
;SUBR KNPLOT ERASES THE OLD SHIELD,
;UPDATES AND DRAWS NEW SHIELD
;A= WHO IS BEING PLOTTED!!
KNPLOT	STA	TIMP1
	TAX
	JSR	GETPLT
	LDX	TIMP1
	LDA	SKTABX,X		;GET (X,Y) POS OF
	STA	KSHOWX,X		;KNIGHT'S SHIELD
	LDA	SKTABY,X		;AND UPDATE 'SHOWN'
	STA	KSHOWY,X
	JSR	GETPLT
	LDA	#15
	STA	COUNT
;	JMP	DRWPLT
;
;
;
;
;DRWPLT DRAWS THE SHIELD
;KNGPTR PTS. TO SHIELD DATA
;KADDR PTS TO SCREEN RAM AREA
DRWPLT	LDX	#0
DRWPL4	LDY	#0		;DRAW SHIELD
	LDA	(KNGPTR),Y
	STA	(KADDR),Y
	INY
	LDA	(KNGPTR),Y
	STA	(KADDR),Y
	JSR	IKADDR
	LDA	KNGPTR
	CLC
	ADC	#2
	STA	KNGPTR
	BCC	DRWPL2
	INC	KNGPTR+1
DRWPL2	INX
	CPX	COUNT
	BNE	DRWPL4
	RTS
;
;SUBR IKADDR INCREMENTS KADDR BY
;MOVING IT DOWN TO THE NEXT SCAN LINE
IKADDR	LDA	KADDR
	CLC
	ADC	#40
	STA	KADDR
	BCC	IKADD2
	INC	KADDR+1
IKADD2	RTS
;
;SUBR GETPLT GETS WHERE THE PLOT
;IS TO GO. IT SETS KADDR TO POINT
;TO WHERE THE SHIELD IS TO GO
;NEEDS KNIGHT NUMBER IN X
GETPLT	LDA	KSHOWX,X
	STA	KNITX
	LDA	KSHOWY,X
	STA	KNITY
GETPL1	LSR	A
	CMP	#64
	BCC	GETPL2
	ADC	#14		;C=1,ADD 15 SO NOT ON TABLE
GETPL2	STA	MULTR1
	LDA	#0
	STA	MULTR2
	JSR	MULT40
	LDA	CPRODL
	CLC
	ADC	#LOW [SCRRAM+27]
	STA	KADDR
	LDA	CPRODH
	ADC	#HIGH [SCRRAM+27]
	STA	KADDR+1
	JSR	KXOFF
	CLC
	ADC	KADDR
	STA	KADDR
	BCC	ERSPLT
	INC	KADDR+1
;
;ERSPLT ERASES THE PLOT AT KADDR
ERSPLT	LDA	KADDR+1
	STA	RMPTR+1		;SAVE FOR LATER
	LDA	KADDR
	STA	RMPTR
	BNE	ERPLT5
	DEC	KADDR+1
ERPLT5	DEC	KADDR
	LDX	#0
ERPLT1	LDY	#0		;BLANK OUT AREA
ERPLT2	LDA	(KADDR),Y
	AND	INVSH,X
	STA	(KADDR),Y
	INX
	CPX	#68		;17 ROWS BY 4 BYTES
	BEQ	ERPLT3
	INY
	CPY	#4		;4 BYTES ACROSS
	BNE	ERPLT2
	JSR	IKADDR
	JMP	ERPLT1
ERPLT3	LDA	RMPTR		;RESTORE KADDR
	STA	KADDR
	LDA	RMPTR+1
	STA	KADDR+1
	RTS
;
;NEEDS MULTR1,MULTR2
;MULTR1,MULTR2*40=CPRODH,CPRODL
MULT40	LDY	#3
MULT1	ASL	MULTR1
	ROL	MULTR2
	DEY
	BNE	MULT1
	LDA	MULTR1
	STA	CPRODL
	LDA	MULTR2
	STA	CPRODH
	ASL	MULTR1
	ROL	MULTR2
	ASL	MULTR1
	ROL	MULTR2
	LDA	MULTR1
	CLC
	ADC	CPRODL
	STA	CPRODL
	LDA	MULTR2
	ADC	CPRODH
	STA	CPRODH
MULT2	RTS
;
;
KXOFF	LDA	KNITX
	LSR	A		;DIVIDE BY 32
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	CMP	#4
	BCC	KXOFF1
	ADC	#3
KXOFF1	RTS
;
;
;SUBR FIXKN "FIXES" THE SHIELDS
;(ERASES OLD PLOT, AND PUTS AT NEW)
FIXKN	LDA	KNITS
	JSR	GKNPTR
FIXK6	LDY	#0		;MOVE KNGPTR TO SHIELD
	LDA	(KNGPTR),Y		;DATA
	INC	KNGPTR
	BNE	FIXK5
	INC	KNGPTR+1
FIXK5	CMP	#$FF
	BNE	FIXK6
	LDA	KNITS
	JMP	KNPLOT		;PUTS AT NEW PLOT
;
;
;SUBR KNCURS STICKS THE CURSOR ON A
;SELECTED SHIELD.
KNCURS	LDA	#0		;CLEAR OUT PLAYER 3
	LDX	#$7F
KNCU3	STA	PLAY3,X
	DEX
	BNE	KNCU3
	LDX	KINDEX		;GET COLOR OF CURSOR
	LDA	KNTCOL,X
	STA	PCOLR3
	LDA	KNITY
	LSR	A
	LSR	A
	CMP	#32
	BCC	KNCU2
	ADC	#6		;CARRY=1
KNCU2	TAX
	LDY	#0
KNCU1	LDA	SHIELD,Y
	STA	PLAY3+16,X
	INX
	INY
	CPY	#8
	BNE	KNCU1
	JSR	KXOFF
	ASL	A
	ASL	A
	CLC
	ADC	#156
	STA	HPOSP3
	RTS
;
;
;SUBR INCPTR INCREMENTS PADPTR BY
;THE AMOUNT IN THE ACCUMULATOR
INCPTR	CLC
	ADC	PADPTR
	STA	PADPTR
	BCC	T14
	INC	PADPTR+1
T14	RTS
;
; CAMELOT ROOMS' DATA COMES NEXT!!
TRESRM	DB	'Wealth',$9B
	DB	'Taxes',$9B
	DB	'Army',$9B
	DB	'Tithes',$FF
	DB	'Experience',$FF
THRRM	DB	'Tribute',$9B
	DB	'Attack',$9B
	DB	'Prestg',$9B
	DB	'News',$FF
RNDRM	DB	'Gift',$9B
	DB	'Honour',$9B
	DB	'Banish',$9B
	DB	'Select',$FF
MERLRM	DB	'Change',$9B
	DB	'Pestilence',$9B
	DB	'Plague',$9B
	DB	'See',$FF
;
;DATA FOR MAP OF BRITIAN IN THRONE ROOM
;
BRTMAP	DB	0,0,0,$FE,0
	DB	0,0,0,0
	DB	0,0,$E1,$FF,0
	DB	0,0,0,0
	DB	0,1,$FF,$FC,0
	DB	0,0,0,0
	DB	0,3,$FF,$F0,0
	DB	0,0,0,0
	DB	0,$3F,$FF,$F0,0
	DB	0,0,0,0
	DB	0,$0F,$FF,$C0,0
	DB	0,0,0,0
	DB	0,$EF,$FF,0,0
	DB	0,0,0,0
	DB	0,$7F,$FC,0,0
	DB	0,0,0,0
	DB	0,$FF,$FC,$7F,$FE
	DB	0,0,0,0
	DB	0,$3F,$FC,$FF,$FF
	DB	0,0,0,0
	DB	3,$FF,$FF,$FF,$FF
	DB	0,0,0,0
	DB	0,$FF,$FF,$FF,$FE
	DB	0,0,0,0
	DB	0,$FF,$FF,$FF,$FC
	DB	0,0,0,0
	DB	3,$F3,$FF,$FF,$F0
	DB	0,0,0,0
	DB	0,$C3,$FF,$FF,$C0
	DB	0,0,0,0
	DB	0,$0F,$FF,$FF,0
	DB	0,0,0,0
	DB	0,$3F,$FF,$FF,$80
	DB	0,0,0,0
	DB	0,$FF,$FF,$FC,0
	DB	0,0,0,0
	DB	0,$FC,$FF,$C0,$78
	DB	0,0,0,0
	DB	0,$F0,$3F,$FF,$FC
	DB	0,0,0,0
	DB	0,$C0,$FF,$FF,$FE
	DB	0,0,0,0
	DB	0,0,$FF,$FF,$FF
	DB	0,0,0,0
	DB	0,0,$FF,$FF,$FF
	DB	$C0,0,0,0
	DB	0,3,$FF,$FF,$FF
	DB	$C0,0,0,0
	DB	0,$0F,$FF,$FF,$FF
	DB	$F0,0,$00,$00
	DB	0,$0F,$FF,$FF,$FF
	DB	$F0,0,0,0
	DB	0,$F,$FF,$C3,$FF
	DB	$FC,0,0,0
	DB	0,3,$FC,$0F,$FF
	DB	$FF,0,0,0
	DB	0,0,$C0,$3F,$FF
	DB	$FF,0,0,0
	DB	0,0,0,$FF,$FF
	DB	$FF,$C0,0,0
	DB	0,0,0,$FF,$FF
	DB	$FF,$F0,0,0
	DB	0,0,0,$33,$FF
	DB	$FF,$FC,0,0
	DB	0,0,0,3,$FF
	DB	$FF,$FC,0,0
	DB	0,0,0,$0F,$FF
	DB	$FF,$FC,0,$00
	DB	0,0,0,$0F,$FF
	DB	$FF,$FC,0,0
	DB	0,0,0,3,$FF
	DB	$FF,$FC,0,0
	DB	0,0,0,$0F,$FF
	DB	$FF,$FF,0,0
	DB	0,0,$60,$0F,$FF
	DB	$FF,$FF,0,0
	DB	0,0,$3F,$FF,$FF
	DB	$FF,$FF,$C0,0
	DB	0,0,$FF,$FF,$FF
	DB	$FF,$FF,$C0,0
	DB	0,1,$83,$FF,$FF
	DB	$FF,$FF,$80,0
	DB	0,0,3,$FF,$FF
	DB	$FF,$FF,$9F,$F0
	DB	0,0,3,$FF,$FF
	DB	$FF,$FF,$FF,$FC
	DB	0,0,3,$FF,$FF
	DB	$FF,$FF,$FF,$FF
	DB	0,0,$0F,$FF,$FF
	DB	$FF,$FF,$FF,$FF
	DB	0,0,$3F,$FF,$FF
	DB	$FF,$FF,$FF,$FC
	DB	0,3,$FF,$FF,$FF
	DB	$FF,$FF,$FF,$E0
	DB	0,$3F,$FF,$FF,$FF
	DB	$FF,$FF,$FF,$C0
	DB	0,$0F,$FF,$FF,$FF
	DB	$FF,$FF,$FF,0
	DB	0,$3C,$3F,$FF,$FF
	DB	$FF,$FF,$FF,0
	DB	0,0,$F3,$F0,$FF
	DB	$FF,$FF,$FC,0
	DB	0,0,0,3,$FF
	DB	$FF,$FF,$FF,$F0
	DB	0,0,0,$0F,$FF
	DB	$FF,$FF,$FF,$F0
	DB	0,0,$3F,$FF,$FF
	DB	$FF,$FF,$FF,$C0
	DB	0,0,$FF,$FF,$FF
	DB	$FF,$FF,$FC,0
	DB	0,0,$FF,$FF,$FF
	DB	$C0,$FF,$80,0
	DB	0,3,$FF,$FC,$3C
	DB	0,0,0,0
	DB	$0,$0F,$FF,$F0,0
	DB	0,0,0,0
	DB	0,$3C,$0F,$C0,0
	DB	0,0,0,0
	DB	$0F,$F0,$3,0,0
	DB	0,0,0,0
	DB	$18,$C0,0,0,0
	DB	0,0,0,0
;
;DATA FOR KINGDOMS IN THRONE ROOM
;
KNGDAT	DW	CAMEL
	DW	PICTLD
	DW	DALRIA
	DW	GUOTOD
	DW	RHEGED
	DW	NORTHU
	DW	ELMET
	DW	POWYS
	DW	LINDSE
	DW	MERCIA
	DW	GWYNED
	DW	ANGLIA
	DW	ESSEX
	DW	SUSSEX
	DW	DYFED
	DW	DUMNON
KNTAB	DW	ARTHUR
	DW	MUGNAM
	DW	SREMMU
	DW	DROFWA
	DW	LANCEL
	DW	DAGON
	DW	KAY
	DW	GALAHA
	DW	MORDRE
	DW	TRIST
	DW	BRASTI
	DW	GWYNEV
	DW	BEDIVE
	DW	DYNADA
	DW	LUCAS
	DW	GAWAIN
PICTLD	DB	'Augusel',$FF
	DB	164,19,0
	DB	$00,$0C,$0F,$1F
	DB	$7F,$3F,$BF,$7E
	DB	$FE,$7E,$FF,$FF
	DB	$FF,$C7,$83,$03
	DB	$03,$03,$03,0
	DB	$E0,$F0,$E0,$C0
	DB	$C0,$80,$00,$00
	DB	$7E,$FF,$FF,$FE
	DB	$FE,$FC,$F8,$F0
	DB	$F8,$E0,$80
DALRIA	DB	'Uryens',$FF
	DB	164,9,13
	DB	$18,$1C,$3C,$7C
	DB	$FC,$EC,$C4,$8C
	DB	$08,$FF
GUOTOD	DB	'Lot',$FF
	DB	170,8,18
	DB	1,$FF,$FF,$7F
	DB	$1F,$0E,6,6
	DB	1,$80,$80,$C0
	DB	0,0,0,0
RHEGED	DB	'Idres',$FF
	DB	166,8,21
	DB	$18,$3E,$7F,$FF
	DB	$FF,$FE,$78,$20
	DB	3,$80,$80,0
	DB	0,0
NORTHU	DB	'Colgrin',$FF
	DB	176,11,22
	DB	$38,$78,$7C,$7C
	DB	$3E,$3F,$1F,$1F
	DB	$0F,$0F,3,7
	DB	$80,$C0,$E0,$E0
ELMET	DB	'Baldulf',$FF
	DB	172,10,26
	DB	$1C,$3C,$7E,$FE
	DB	$FF,$5F,$1F,$07
	DB	7,7,6
	DB	$C0,$E0,$E0,$80
POWYS	DB	'Garwin',$FF
	DB	174,13,33
	DB	$C0,$E0,$60,$FC
	DB	$FC,$FC,$78,$7C
	DB	$7C,$3C,$3C,$3C
	DB	$38,$FF
LINDSE	DB	'Sater',$FF
	DB	183,11,33
	DB	$F0,$F0,$F0,$F8
	DB	$F8,$7C,$3C,$38
	DB	$38,$38,$10,$FF
MERCIA	DB	'Penda',$FF
	DB	178,15,35
	DB	$18,$38,$38,$3C
	DB	$7E,$3E,$3E,$3E
	DB	$3F,$3F,$7F,$FE
	DB	$7C,$38,$10,$FF
GWYNED	DB	'Pellinore',$FF
	DB	167,9,36
	DB	$40,$60,$37,$7F
	DB	$CF,$8F,$0F,$0F
	DB	$03,6
	DB	$80,$80,$80
ESSEX	DB	'Hengist',$FF
	DB	183,5,46
	DB	$38,$7C,$FF,$FF
	DB	$FF,2
	DB	$80,$80,0
SUSSEX	DB	'Horsa',$FF
	DB	181,7,49
	DB	$40,$C0,$7F,$7F
	DB	$7F,$7F,$1F,2
	DB	$F8,$F8,$F0,$C0
	DB	0
CAMEL	DB	'Arthur',$FF
	DB	174,10,47
	DB	$08,$1C,$1E,$3E
	DB	$7F,$FF,$FF,$FF
	DB	$7E,$18,$FF
DYFED	DB	'Royns',$FF
	DB	165,7,44
	DB	$07,$0F,$3F,$FF
	DB	$7F,$CF,$1B,1
	DB	$70,$F8,$F8,$F0
	DB	$F0,$80
DUMNON	DB	'Hoel',$FF
	DB	161,8,53
	DB	0,1,1,3
	DB	7,$0C,$78,$D0
	DB	0,$F8,$F8,$FC
	DB	$FC,$F8,$70
	DB	$20,0
DAGON	DB	'Bors',$FF
	DB	$C3,$C3,$CF,$F3
	DB	$FC,$3F,$F1,$8F
	DB	$E7,$E7,$EF,$F7
	DB	$E3,$C7,$F3,$CF
	DB	$F3,$CF,$F3,$CF
	DB	$F3,$CF,$FF,$FF
	DB	$7F,$FE,$1F,$F8
	DB	$03,$C0
ANGLIA	DB	'Cheldric',$FF
	DB	186,7,41
	DB	$0F,$3F,$7F,$FF
	DB	$FF,$3F,$1E,1
	DB	$80,$C0,$C0,$80
	DB	0,0
BRASTI	DB	'Lamerok',$FF
	DB	$C3,$C3,$CF,$F3
	DB	$FF,$FF,$FF,$FF
	DB	$F3,$CF,$F3,$CF
	DB	$F3,$CF,$F3,$CF
	DB	$F3,$CF,$F0,$0F
	DB	$FC,$3F,$FF,$FF
	DB	$7F,$FE,$1F,$F8
	DB	$03,$C0
KAY	DB	'Kay',$FF
	DB	$C3,$C3,$CF,$F3
	DB	$FC,$3F,$F1,$8F
	DB	$F3,$CF,$F3,$CF
	DB	$F0,$0F,$F0,$0F
	DB	$F3,$CF,$F3,$CF
	DB	$F3,$CF,$FF,$FF
	DB	$7F,$FE,$1F,$F8
	DB	$03,$C0
GAWAIN	DB	'Gawain',$FF
	DB	$C3,$C3,$CF,$F3
	DB	$FF,$FF,$F0,$0F
	DB	$F0,$0F,$F3,$FF
	DB	$F3,$3F,$F3,$3F
	DB	$F3,$3F,$F3,$3F
	DB	$F3,$3F,$F0,$3F
	DB	$7F,$FE,$1F,$F8
	DB	$03,$C0
DROFWA	DB	'Drofwarc',$FF
	DB	$C3,$C3,$CF,$F3
	DB	$FC,$3F,$F1,$8F
	DB	$E7,$CF,$EF,$9F
	DB	$EF,$3F,$EF,$3F
	DB	$EF,$9F,$E7,$CF
	DB	$F1,$8F,$FC,$3F
	DB	$7F,$FE,$1F,$F8
	DB	$03,$C0
MUGNAM	DB	'Nosnikta',$FF
	DB	$C3,$C3,$CF,$F3
	DB	$FF,$FF,$FF,$FF
	DB	$F3,$CF,$F3,$CF
	DB	$FF,$FF,$EF,$F7
	DB	$EF,$F7,$E7,$E7
	DB	$F1,$8F,$FC,$3F
	DB	$7F,$FE,$1F,$F8
	DB	$03,$C0
LANCEL	DB	'Lancelot',$FF
	DB	$C3,$C3,$CF,$F3
	DB	$FF,$FF,$FF,$FF
	DB	$CF,$F3,$CF,$F3
	DB	$C3,$C3,$E0,$07
	DB	$FC,$3F,$FC,$3F
	DB	$FC,$3F,$FC,$3F
	DB	$7F,$FE,$1F,$F8
	DB	$03,$C0
BEDIVE	DB	'Bedivere',$FF
	DB	$C3,$C3,$CF,$F3
	DB	$FF,$FF,$FC,$CF
	DB	$FC,$CF,$FC,$CF
	DB	$F8,$CF,$F8,$CF
	DB	$F9,$CF,$F9,$CF
	DB	$F9,$CF,$FF,$FF
	DB	$7F,$FE,$1F,$F8
	DB	$03,$C0
MORDRE	DB	'Mordred',$FF
	DB	$C3,$C3,$CF,$F3
	DB	$FF,$FF,$FF,$FF
	DB	$FF,$FF,$FF,$8F
	DB	$FF,$1F,$FE,$3F
	DB	$FC,$3F,$F8,$7F
	DB	$F9,$FF,$FF,$FF
	DB	$7F,$FE,$1F,$F8
	DB	$03,$C0
ARTHUR
GWYNEV	DB	'Queen Gwynevere',$FF
	DB	0,0,1,$80
	DB	1,$80,$C3,$C3
	DB	$E3,$C7,$67,$E6
	DB	$77,$EE,$3F,$FC
	DB	$3F,$FC,$3F,$FC
	DB	$1F,$F8,$1F,$F8
	DB	$1F,$F8,0,0
	DB	$0,0
GALAHA	DB	'Galahad',$FF
	DB	$C3,$C3,$CF,$F3
	DB	$FC,$3F,$FC,$3F
	DB	$FC,$3F,$E0,$07
	DB	$E0,$07,$FC,$3F
	DB	$FC,$3F,$FC,$3F
	DB	$FC,$3F,$FC,$3F
	DB	$7F,$FE,$1F,$F8
	DB	$03,$C0
TRIST	DB	'Tristran',$FF
	DB	$C3,$C3,$CF,$F3
	DB	$FC,$3F,$FC,$3F
	DB	$FC,$3F,$FC,$3F
	DB	$E0,$07,$EF,$F7
	DB	$EF,$F7,$E7,$E7
	DB	$F1,$8F,$FC,$3F
	DB	$7F,$FE,$1F,$F8
	DB	$03,$C0
DYNADA	DB	'Percivale',$FF
	DB	$C3,$C3,$CF,$F3
	DB	$FC,$3F,$F9,$8F
	DB	$F3,$E7,$F1,$F7
	DB	$F8,$FF,$FE,$3F
	DB	$FF,$3F,$FF,$9F
	DB	$F8,$1F,$F8,$1F
	DB	$7F,$FE,$1F,$F8
	DB	$03,$C0
LUCAS	DB	'Lucas',$FF
	DB	$C3,$C3,$CF,$F3
	DB	$FF,$FF,$FC,$3F
	DB	$F1,$8F,$E7,$E7
	DB	$EF,$F7,$FF,$FF
	DB	$FC,$3F,$FC,$3F
	DB	$FC,$3F,$FC,$3F
	DB	$7F,$FE,$1F,$F8
	DB	$03,$C0
SREMMU	DB	'Sremmus',$FF
	DB	$C3,$C3,$CF,$F3
	DB	$FF,$FF,$FF,$FF
	DB	$CF,$F3,$CC,$33
	DB	$CC,$33,$C0,$03
	DB	$CC,$33,$CC,$33
	DB	$CF,$F3,$FF,$FF
	DB	$7F,$FE,$1F,$F8
	DB	$03,$C0
INVSH	DB	$FC,$18,$18,$3F
	DB	$FC,$00,$00,$3F
	DB	$FC,$00,$00,$3F
	DB	$FC,$00,$00,$3F
	DB	$FC,$00,$00,$3F
	DB	$FC,$00,$00,$3F
	DB	$FC,$00,$00,$3F
	DB	$FC,$00,$00,$3F
	DB	$FC,$00,$00,$3F
	DB	$FC,$00,$00,$3F
	DB	$FC,$00,$00,$3F
	DB	$FC,$00,$00,$3F
	DB	$FC,$00,$00,$3F
	DB	$FC,$00,$00,$3F
	DB	$FE,$00,$00,$7F
	DB	$FF,$80,$01,$FF
	DB	$FF,$F0,$0F,$FF
;
;BLANK SHIELD FOR SEE RT KNIGHTS
BLANKS	DB	$C3,$C3,$CF,$F3
	DB	$FF,$FF,$FF,$FF
	DB	$FF,$FF,$FF,$FF
	DB	$FF,$FF,$FF,$FF
	DB	$FF,$FF,$FF,$FF
	DB	$FF,$FF,$FF,$FF
	DB	$7F,$FE,$1F,$F8
	DB	3,$C0
;
SESHOX	DB	66,130,0,200
	DB	34,162,98,200
	DB	98,130
SESHOY	DB	80,84,126,128
	DB	142,174,182,122
	DB	36,214
;
;ROUND TABLE DATA, WITH CROWN
RNDTBL	DB	0,0,$3F,$FC,0,0
	DB	0,3,$C0,3,$C0,0
	DB	$00,$3C,$00,$00,$3C,$00
	DB	0,$C0,0,0,3,0
	DB	3,0,0,0,0,$C0
	DB	$0C,0,0,0,0,$30
	DB	$0C,0,0,0,0,$30
	DB	$30,0,0,0,0,$0C
	DB	$30,0,0,0,0,$0C
	DB	$C0,0,0,0,0,$03
	DB	$C0,$0,0,0,0,3
	DB	$C0,0,0,0,0,3
;
;
;SCRRAM+27+(40*6)
;+LNGTRM,(CASTLE*16+KINDEX)/24
;+40*(KINDEX*9)
SEEGET	LDA	CASTLE
	ASL	A
	ASL	A
	ASL	A
	ASL	A		;C=0
	ADC	SEEWHO		;EITHER KINDEX OR KNITS
	TAY
	LDA	LNGTRM,Y
	STA	CPRODL
	LDX	SEEWHO
	BNE	SEEG4
	CLC			;IF ART,ADD CHGKNG,CASTLE
	LDX	CASTLE
	ADC	CHGKNG,X
	STA	CPRODL
	BCC	SEEG4
	LDA	#$FF
	STA	CPRODL
SEEG4	LDA	#0
	STA	CPRODH
	STA	DIVRHI
	LDA	#24
	STA	DIVRLO
	JSR	DIVIDE
	LDA	CPRODL
	LDX	SEEWHO
	STA	PSHOWX,X
	CLC
	ADC	#LOW [SCRRAM+187]
	STA	KADDR
	LDA	#HIGH [SCRRAM+187]
	ADC	#0
	STA	KADDR+1
	LDA	SEEWHO
	STA	MULTR1
	LDA	#9
	STA	MULTR2
;MULTIPLY ROUTIEN
	LDA	#0
	STA	CPRODL
	STA	CPRODH
	STA	TIMP1
SEEG3	LSR	MULTR1
	BCC	SEEG1
	LDA	CPRODL
	CLC
	ADC	MULTR2
	STA	CPRODL
	LDA	CPRODH
	ADC	TIMP1
	STA	CPRODH
SEEG1	LDA	MULTR1
	BEQ	SEEG2
	ASL	MULTR2
	ROL	TIMP1
	BCC	SEEG3
;END OF MULTIPLY
SEEG2	LDA	CPRODL
	LDX	SEEWHO
	STA	PSHOWY,X
	STA	MULTR1
	LDA	CPRODH
	STA	MULTR2
	JSR	MULT40
	LDA	CPRODL
	CLC
	ADC	KADDR
	STA	KADDR
	LDX	SEEWHO
	STA	KSHOWX,X
	LDA	CPRODH
	ADC	KADDR+1
	STA	KADDR+1
	STA	KSHOWY,X
;
;ERRASE OLD, GET ADDR WHERE SHOWN
;SUBTRACT 40 ,1 LINE UP
SEEOLD	LDX	SEEWHO
	LDA	KSHOWY,X
	STA	RMPTR+1		;SAVE FOR LATER
	LDA	KSHOWX,X
	STA	RMPTR
	SEC
	SBC	#41		;1 ROW ABOVE,1BYTE IN FRONT
	STA	KADDR
	LDA	RMPTR+1
	SBC	#0
	STA	KADDR+1
	LDX	#0
SEER2	LDY	#0
SEER3	LDA	(KADDR),Y
	AND	INVCRN,X
	STA	(KADDR),Y
	INX
	CPX	#52		;4X13
	BEQ	SEER4
	INY
	CPY	#4		;4 ACROSS
	BNE	SEER3
	JSR	IKADDR
	JMP	SEER2
SEER4	JMP	ERPLT3		;RESTORE KADDR
;
SEECUR	JSR	CLRP23
	LDX	KINDEX		;CUZ CURS ONLY ON KINDEX
	LDA	PSHOWX,X
	ASL	A
	ASL	A
	CLC
	ADC	#$98+4
	STA	HPOSP2
	LDA	PSHOWY,X
	CLC
	ADC	#$25
	LSR	A
	TAY
;	LDX	#5
;	STX	COUNT
;	LDX	SEEWHO
;	LDA	LIEGE,X
;	CMP	#$10
;	BCS	SEEC2
;	LDX	#5		;VASSAL
;PUT IN VASSAL CURSOR
;	JMP	SEEC1
;SEEC2
	LDX	#0
SEEC1	LDA	SEECRP,X
	STA	PLAY2,Y
	INX
	INY
;	DEC	COUNT
	CPX	#5
	BNE	SEEC1
	LDA	CASTLE		;GET COLOR
	JMP	GETCOL		;IN KNGDOM
;
SEEUPD	JSR	SEEOLD		;OLD ERRASE
	JSR	SEEGET		;NEW & ERRASE
;JMP SEEPLT		NEW CROWN
;NEEDS KADDR(FROM SEEGET OR SUCH)
;2 WIDE X 11 TALL
SEEPLT	LDX	SEEWHO
	LDA	LIEGE,X		;IS HE A VASSAL?
	CMP	#$10
	BCS	SEEPL1
	LDA	#LOW SEEVCR		;VASSAL
	STA	KNGPTR
	LDA	#HIGH SEEVCR
	STA	KNGPTR+1
	JMP	SEEPL2
SEEPL1	LDA	#LOW SEECRN		;KING
	STA	KNGPTR
	LDA	#HIGH SEECRN
	STA	KNGPTR+1
SEEPL2	LDA	#11
	STA	COUNT
	JMP	DRWPLT
;
;PLAYER CURSOR FOR CROWNS
SEECRP	DB	$18,$99,$FF
	DB	$FF,$FF
;
;CROWNS
SEECRN	DB	1,$80,1,$80
	DB	$C3,$C3,$C3,$C3
	DB	$E7,$E7,$E7,$E7
	DB	$FF,$FF,$FF,$FF
	DB	$FF,$FF,$FF,$FF
	DB	$FF,$FF
;
SEEVCR	DB	1,$80,1,$80
	DB	$C3,$C3,$C2,$43
	DB	$E6,$67,$A6,$65
	DB	$BC,$3D,$80,$01
	DB	$80,$01,$80,$01
	DB	$FF,$FF
;
;INVERSE, TO BLANK OUT SPOT BENEATH
INVCRN	DB	$FF,$FC,$3F,$FF
	DB	$FF,$FC,$3F,$FF
	DB	$FE,$18,$18,$7F
	DB	$FE,$18,$18,$7F
	DB	$FE,0,0,$7F
	DB	$FE,0,0,$7F
	DB	$FE,0,0,$7F
	DB	$FE,0,0,$7F
	DB	$FE,0,0,$7F
	DB	$FE,0,0,$7F
	DB	$FE,0,0,$7F
	DB	$FE,0,0,$7F
	DB	$FE,0,0,$7F

;CAMELOT MODULE PART 1
	ORG	$C0
SCNPTR	ORG	*+2
TIMP1	ORG	*+1
TIMP2	ORG	*+1
RMPTR	ORG	*+2
KNGPTR	ORG	*+2
KADDR	ORG	*+2
EXPPTR	ORG	*+2
MULTR1	ORG	*+1
MULTR2	ORG	*+1
;DON'T USE CE.CF!!
;PUT ANY MORE ZERO PAGE AT $80-$8F!
	ORG	$80
LINCNT	ORG	*+1
HEIGHT	ORG	*+1
COUNT	ORG	*+1
BFLAG	ORG	*+1
KNITS	ORG	*+1
KNITCT	ORG	*+1
KNITX	ORG	*+1
KNITY	ORG	*+1
ROOMIN	ORG	*+1
SMASK	ORG	*+1
ZONE	ORG	*+1
JOYDLY	ORG	*+1
LASTRG	ORG	*+1
NUMHI	ORG	*+1
NUMLO	ORG	*+1
TWCOL	ORG	*+1
;$90 - $9F MINE TOO
KINDEX	ORG	*+1
CHITE	ORG	*+1
STOREY	ORG	*+1
WHWAY	ORG	*+1
NOISFL	ORG	*+1
NOISCT	ORG	*+1
TRIBFL	ORG	*+1
SAVKNG	ORG	*+1
SHOWME	ORG	*+1		;MERLIN SHOWN IN ROOM
FLCNT	ORG	*+1		;CNT OF CROWN FLASH
CPRODL	ORG	*+1		;FOR DIVIDE FOR
CPRODH	ORG	*+1		;EXPERIENCE IN TRES
DIVRLO	ORG	*+1
DIVRHI	ORG	*+1
FLAG	ORG	*+1
DECRES	ORG	*+1
;
	ORG	CAMADD
	JMP	START
DCOUNT	ORG	*+1		;COUNT FOR HOW MANY
;SEE OPT KNIGHTS TO ERRASE OR DRAW
NSEKIN	ORG	*+1		;# KNT IN SEE RT
SEKGIN	ORG	*+1		;=0 IF SEE KING HOME
SETVAS	ORG	*+1		;SEE THRONE VASSAL=0
WINFLG	ORG	*+1
SEEWHO	ORG	*+1		;WHO'S UP IN THRONE
;IE KINDEX OR KNITS, SEE OPT ONLY
SAVCNT	ORG	*+1
EXPBUF	ORG	*+64
SAVCHR	ORG	*+1
DDIGIT	ORG	*+5
TAXSHO	ORG	*+1
ARMSHO	ORG	*+1
WHICH	ORG	*+1	;FIGHT OR WAIT
WHADD	ORG	*+1	;OFFSET FOR F OR W
DIVDEN	ORG	*+1
DIVSOR	ORG	*+1
ARMSAV	ORG	*+1
RESULT	ORG	*+1
FRAC	ORG	*+1
FDMASK	ORG	*+1
NUMKNT	ORG	*+1
COLSWP	ORG	*+1
;
RTCLKL	EQU	$0014
DLADDR	EQU	$BEF4		;$10B LONG
SCRRAM	EQU	$A010		;MUST BE AT $X010
PMADDR	EQU	$1C00
WINDOW	EQU	$18B0
WNDRAM	EQU	SCRRAM+WINDOW
MISSLE	EQU	PMADDR+$180
PLAY0	EQU	PMADDR+$200
PLAY1	EQU	PMADDR+$280
PLAY2	EQU	PMADDR+$300
PLAY3	EQU	PMADDR+$380
CTOP	EQU	16-4
CEND	EQU	95
CRTALL	EQU	10
CBOT	EQU	CEND-CRTALL-4
RED	EQU	$44
GOLD	EQU	$28
ORANGE	EQU	$46
SUBORD	EQU	$06		;GREY
ENEMY	EQU	$96		;BLUE
TRBTRY	EQU	$66		;PURPLE
NEUTRL	EQU	$C4		;GREEN
GIFDEC	EQU	5
PEST	EQU	32
SEE	EQU	3
CHANGE	EQU	16
PLAGUE	EQU	64
EXCPOS	=	SCRRAM+$28B
DEMPOS	=	EXCPOS+$500
BUDPOS	=	DEMPOS+$500
BNKPOS	=	SCRRAM+$29C
GOTPOS	=	BNKPOS+$500
MENPOS	=	GOTPOS+$500
;
RTPTR	DW	RNDRM		;THESE 4 MUST BE KEPT
	DW	THRRM		;IN THIS ORDER
	DW	TRESRM
	DW	MERLRM
;
ATRACT	=	$4D
DRKMSK	=	$4E
COLRSH	=	$4F
DLIVEC	=	$200
SDLSTL	=	$230
SDLSTH	=	$231
STICK0	=	$278
PCOLR0	=	$2C0
PCOLR1	=	$2C1
PCOLR2	=	$2C2
PCOLR3	=	$2C3
COLOR1	=	$2C5
COLOR2	=	$2C6
COLOR3	=	$2C7
COLOR4	=	$2C8
HPOSP0	=	$D000
HPOSP1	=	$D001
HPOSP2	=	$D002
HPOSP3	=	$D003
HPOSM0	=	$D004
HPOSM1	=	$D005
SIZEP0	=	$D008
SIZEP1	=	$D009
SIZEP2	=	$D00A
SIZEP3	=	$D00B
SIZEM	=	$D00C
TRIG0	=	$D010
COLPF1	=	$D017
COLPF2	=	$D018
PRIOR	=	$D01B
CONSOL	=	$D01F
GPRIOR	=	$026F
GRACTL	=	$D01D
AUDF3	=	$D204
AUDC3	=	$D205
SKCTL	=	$D20F
DMACTL	=	$D400
SDMCTL	=	$022F
HSCROL	=	$D404
PMBASE	=	$D407
WSYNC	=	$D40A
NMIEN	=	$D40E
SETVBV	=	$E45C
XITVBV	=	$E462
;
;
;
;
START	LDA	#128		; DISABLE VBI
	STA	SFLAG
	LDA	#40		;INITIALIZE STUFF
	STA	LINLEN
	LDA	#$11
	STA	PRIOR
	STA	GPRIOR
	LDA	#1
	STA	BFLAG
	STA	LASTRG
	STA	KINDEX
	LDA	#0
	STA	WINFLG
	STA	JOYDLY
	STA	CASTLE
	STA	NOISFL
	STA	TRIBFL
	STA	AUDCTL
	STA	SELFLG
	STA	SIZEP0
	STA	SIZEP1
	LDA	#3
	STA	SKCTL
	STA	GRACTL
	LDA	#$0F
	STA	SMASK
	STA	SIZEM
	LDA	#$D4
	STA	TWCOL
	STA	NEWSFL		;NON-ZERO
	STA	SIRFL		;NON-ZERO
;
; CLEAR OUT SCREEN DISPLAY
;
	JSR	BLKOUT		;ANTIC OFF
	JSR	CLEAR
	JSR	CLRP01
	JSR	CLRP23
	LDA	#HIGH DLISRV
	STA	DLIVEC+1
	LDA	#LOW DLISRV
	STA	DLIVEC
;
; SET UP PLAYERS
;
	LDA	#136
	STA	HPOSP0
	STA	HPOSM0
	LDA	#144
	STA	HPOSP1
	STA	HPOSM1
	LDA	#HIGH PMADDR
	STA	PMBASE
	LDA	#RED		;MAKE RUG RED
	STA	COLOR3		;MISSILES
	LDA	#GOLD		;MAKE PLAYERS GOLDISH
	STA	PCOLR0
	STA	PCOLR1
;
;
; SEE IF NEED TO BUILD TRAP ROOM
;INSTEAD OF RT ROOM
;AFTER TRAP, TO BATTLE AND LOST
;WILL BUILD TRAP RM DURNING 1ST VBI
	LDA	TRAPFL
	BEQ	START1
	LDX	AGRSSR
	CPX	#$10
	BCS	START2
	STA	DANGER		;JUST NEED TO BE NON-0
	STA	BURNT
	LDA	#0
	STA	TRAPFL		;NOT IN TRAPRM NOW
	JMP	AFTBAT
;
START2	LDA	#0		;NOT A VALID AGRSSR
	STA	TRAPFL
	STA	DANGER
	STA	BURNT
;
;BUILD THE RT ROOM
;
START1	JSR	BROOM
	LDA	#CBOT-1
	ASL	A
	STA	CHITE
	LDA	#5
	STA	ZONE
	JSR	CROWN
;
AFTBAT	LDA	TARGIT		;ART CAN'T ATTACK
	CMP	#$10
	BCS	AFTBA1
	TAX
	LDA	#0
	STA	DANGER,X		;FIX IT
	LDA	#$10
	STA	TARGIT
	STA	AGRSSR,X
AFTBA1	JSR	NOATCK
	LDA	#LOW DLADDR		;POINT ANTIC TO DL
	STA	SDLSTL
	LDA	#HIGH DLADDR
	STA	SDLSTH
	LDX	#HIGH VROOM	;SET UP VBV
	LDY	#LOW VROOM
	LDA	#7
	JSR	SETVBV
	LDA	#$C0		;SETVBV DISTROYS NMIEN
	STA	NMIEN		;        AND DMACTL
	LDA	#$2E
	STA	DMACTL
	STA	SDMCTL
	JMP	V2R5		;RESTORE MAIN CODE
;
;
; SUBROUTINE ROOM PRINTS OUT OPTIONS
; ON THE SCREEN
;USES KNGPTR INSTEAD OF RMPTR
;
ROOM	LDX	#8
ROOM1	LDY	#0
	LDA	(KNGPTR),Y	;FETCH CHARACTER
	INC	KNGPTR		;POINT TO NEXT ONE
	BNE	T15
	INC	KNGPTR+1
T15	CMP	#$9B		;CARRIAGE RETURN
	BEQ	T11
	CMP	#$20		;SPACE
	BEQ	T12
	CMP	#$FF		;END OF TEXT
	BEQ	T13
	JSR	CALIG
	CPX	#216
	BCC	ROOM1
	JSR	FRED
	JMP	ROOM1
T13	RTS
;
; FOR CARRIAGE RETURN, CHANGES PADPTR
; TO NEXT LINE(32 SCAN LINES) DOWN
;
T11	LDA	PADPTR+1
	CLC
	ADC	#5
	STA	PADPTR+1
	JMP	ROOM		;SET OFFSET TO 8(4 CC)
;
; FOR A SPACE, ADD 8 TO OFFSET
;
T12	TXA
	CLC
	ADC	#8
	TAX
	JMP	ROOM1
;
;
;SUBROUTINE CLEAR CLEARS THE SCREEN
;AND REPOSITIONS PADPTR
;
CLEAR	LDA	#LOW SCRRAM	;REINITIALIZE PADPTR
	STA	SCNPTR
	LDA	#HIGH SCRRAM
	STA	SCNPTR+1
	LDX	#36
T04	LDA	#0
	TAY
T05	STA	(SCNPTR),Y
	INY
	CPY	#$D9
	BNE	T05
	CLC
	LDA	SCNPTR
	ADC	#$D9
	STA	SCNPTR
	BCC	T051
	INC	SCNPTR+1
T051	DEX
	BNE	T04
	TXA			;X=0
	LDY	#4
T052	STA	(SCNPTR),Y
	DEY
	BPL	T052
T055	LDA	#LOW [SCRRAM+$280]
	STA	PADPTR
	LDA	#HIGH [SCRRAM+$280]
	STA	PADPTR+1
	RTS
;
;
;SUBR BUILD BUILDS THE ROOMS WHEN
;FIRST ENTERED
BUILD	LDA	#40
	STA	LINLEN
	JSR	CLRP01
	JSR	CLEAR
	JSR	CLRP23
	JSR	BROOM
	LDX	#0
	LDA	CHITE		;WAS CROWN ON TOP?
	LSR	A
	CMP	#CTOP
	BNE	LOOP04
	LDX	#2
LOOP04	LDA	BLDTAB,X
	STA	CHITE
	LDA	BLDTAB+1,X
	STA	ZONE
	JSR	CROWN
;WANT CROWN DRAWN BEFORE MERLIN'S
;FACE,SO IT GOES HERE
;IF ROOMIN=4, CASTLE=0, MERFLG<>0,
;THEN JSR FADIN
	LDA	ROOMIN
	CMP	#4
	BNE	T01
	LDA	CASTLE
	BNE	T01
	LDA	MERFLG
	STA	SHOWME		;USE THIS AS FLAG
	BEQ	T01
	JSR	FADIN
T01	LDA	#0	;DO A JMP XITVBV
	STA	BFLAG
	JMP	V2R5
;
;
BLDTAB	DB	[CTOP+1]*2,0
	DB	[CBOT-1]*2,5
;
;
;SUBROUTINE BRITAN DRAWS THE SHAPE OF BRITAIN IN
; THE THRONE ROOM
;
BRITAN	LDA	#LOW [SCRRAM+$29C]
	STA	PADPTR
	LDA	#HIGH [SCRRAM+$29C]
	STA	PADPTR+1
	LDA	#LOW BRTMAP
	STA	RMPTR
	LDA	#HIGH BRTMAP
	STA	RMPTR+1
	LDA	#9
	STA	COUNT
	LDA	#61
	STA	LINCNT
	LDA	#0
	STA	DECRES
	JMP	PICTUR
;
;
;DLI SERVICE ROUTINE CHANGES THE SCREEN COLOR
DLISRV	PHA
	LDA	TWCOL		;TEXT WINDOW
	EOR	COLRSH
	AND	DRKMSK
	STA	WSYNC
	STA	COLPF2
	LDA	#8
	EOR	COLRSH
	AND	DRKMSK
	STA	COLPF1
	PLA
	RTI
;
;
;SUBROUTINE KNGDOM LIGHTS UP THE KINGDOMS
;IN THE BRITIAN MAP IN THE THRONE ROOM
;CHANGE THIS SO THAT IT LIGHTS UP JUSTTHE CASTLES
; NOT THE WHOLE KINGDOM?
;NEEDS KNGPTR (FROM KINGS)
;
KNGDOM	JSR	CLRP23
	LDY	#2
	LDA	(KNGPTR),Y		;OFFSET
	CLC
	ADC	#LOW [PLAY2+24]
	STA	PADPTR
	LDA	#HIGH PLAY2
	STA	PADPTR+1
	DEY
	LDA	(KNGPTR),Y		;Y=1
	STA	HEIGHT
	DEY
	LDA	(KNGPTR),Y		;Y=0
	STA	HPOSP2
	CLC
	ADC	#8
	STA	HPOSP3
	LDA	KNGPTR		;MOVE KNGPTR DOWN
	CLC
	ADC	#3
	STA	KNGPTR
	BCC	T20
	INC	KNGPTR+1
T20	LDA	(KNGPTR),Y	;PLAYER2 DATA(Y=0)
	STA	(PADPTR),Y
	INY
	CPY	HEIGHT
	BNE	T20
	LDA	KNGPTR		;MOVE KNGPTR DOWN TO
	CLC			;POINT TO PLAYER3 DATA
	ADC	HEIGHT
	STA	KNGPTR
	BCC	T201
	INC	KNGPTR+1
T201	LDA	#$80		;TO NEXT PLAYER AREA
	JSR	INCPTR
	LDY	#0
	LDA	(KNGPTR),Y
	CMP	#$FF		;PLAYER 3 EMPTY
	BEQ	T37
	STA	TIMP1
	JSR	INCPTR
	LDA	HEIGHT
	SEC
	SBC	TIMP1		;HOW MANY LINES TO PRINT
	STA	HEIGHT
	TAY			;Y=HEIGHT
	DEC	PADPTR
T21	LDA	(KNGPTR),Y		;PLAYER3
	STA	(PADPTR),Y
	DEY
	BNE	T21
T37	LDA	NEWSFL
	BEQ	T38
GETCO2	LDX	CASTLE
	LDA	KINDEX
	CMP	TARGIT,X
	BEQ	T377
	TXA
GETCOL	ASL	A
	ASL	A
	ASL	A
	ASL	A
	ADC	KINDEX		;CARRY ALREADY=0
	TAX
GETCO1	LDA	KNGSTS,X
	LDY	#0
T23	ASL	A
	BCS	T22
	INY
	CPY	#4
	BNE	T23
	LDX	KINDEX
	LDA	CASTLE
	CMP	LIEGE,X		;IS HE VASSAL?
	BNE	T24
	LDA	#6
	BNE	T222
T24	CMP	TRBTOR,X		;IS HE PAYING TRIB?
	BNE	T25
	LDA	#$66
	BNE	T222
T25	LDY	#1		;IF NONE,MAKE NEUTRAL
T22	LDA	STSCOL,Y
T222	STA	PCOLR2
	STA	PCOLR3
T38	RTS
;
T377	LDA	#ORANGE		;TARGIT COLOR
	JMP	T222
;
STSCOL	DB	ENEMY,NEUTRL,TRBTRY,SUBORD
;
;SUBR CLWIN SETS AND CLEARS THE TEXT
;WINDOW AREA
;
CLWIN	LDA	#44
	STA	LINLEN
	LDA	#LOW WNDRAM
	STA	SCNPTR
	STA	PADPTR
	LDA	#HIGH WNDRAM
	STA	SCNPTR+1
	STA	PADPTR+1
T351	LDX	#33		;CLEAR WINDOW AREA
T35	LDA	#0
	TAY
T34	STA	(SCNPTR),Y
	INY
	CPY	LINLEN
	BNE	T34
	LDA	SCNPTR
	CLC
	ADC	LINLEN
	STA	SCNPTR
	BCC	T341
	INC	SCNPTR+1
T341	DEX
	BNE	T35
	RTS
;
;SUBROUTINE CLRP23 CLEARS OUT PLAYERS
;2 AND 3
;
CLRP23	LDA	#0		;CLEAR OUT PLAYERS 2&3
	TAX
T19	STA	PLAY2,X
	DEX
	BNE	T19
	RTS
;
;SUBR ROUND PUTS THE ROUND TABLE
; WITH A CROWN IN THE RT ROOM
ROUND	JSR	TABLE
	LDX	#7		;MAKE CROWN IN PLAYER 2
RND1	LDA	RTCRN,X
	STA	PLAY2+$32,X
	DEX
	BPL	RND1
	LDA	#GOLD
	STA	PCOLR2
	LDA	#173
	STA	HPOSP2
	RTS
;
RTCRN	DB	$10,$10,$38,$BA
	DB	$BA,$FE,$FE,$FE
;
;
;SUBR TABLE DRAWS THE ROUND TABLE
TABLE	LDA	#40
	STA	LINLEN
	LDA	#LOW [SCRRAM+$866]	;SETUP PADPTR
	STA	PADPTR
	LDA	#HIGH [SCRRAM+$866]
	STA	PADPTR+1
	LDA	#LOW RNDTBL
	STA	RMPTR
	LDA	#HIGH RNDTBL
	STA	RMPTR+1
	LDA	#0
	STA	DECRES
	LDA	#6
	STA	COUNT
	LDA	#11
	STA	LINCNT
	JSR	PICTUR		;FIRST HALF OF TABLE
	LDA	#$0F
	STA	DECRES
	LDA	#6
	STA	COUNT
	ASL	A		;LINCNT=12
	STA	LINCNT
;PICTUR DOES SECOND HALF OF TABLE
;SUBR PICTUR DRAWS THE STUFF ON THE
; RIGHT SIDE OF THE ROOMS
; NEEDS: RMPTR POINTS TO DATA
;        PADPTR POINTS TO SCREEN RAM
;        COUNT # OF BYTES ACROSS
;        LINCNT # OF LINES TO DO
;   DECRES = 0 FOR INCREASING RMPTR
PICTUR	LDA	#$FF
	STA	FLAG
	LDX	LINCNT
T18	LDY	COUNT
	DEY
T10	LDA	(RMPTR),Y
	ORA	(PADPTR),Y
	STA	(PADPTR),Y
	DEY
	BPL	T10
	LDA	LINLEN		;MOVE TO NEXT LINE
	JSR	INCPTR
	INC	FLAG		;DO EACH LINE TWICE
	BEQ	T18
	LDA	DECRES
	BNE	T47
	LDA	RMPTR		;MOVE RMPTR TO NEXT LINE
	CLC
	ADC	COUNT
	STA	RMPTR
	BCC	T46
	INC	RMPTR+1
T46	LDA	#$FF
	STA	FLAG
	DEX
	BNE	T18
	RTS
T47	LDA	RMPTR		;MOVE RMPTR TO LINE
	SEC			; BEFORE IT
	SBC	COUNT
	STA	RMPTR
	BCS	T46
	DEC	RMPTR+1
	JMP	T46
;

TRAPRM	LDX	#0
	LDA	AGRSSR
	CMP	#$10
	BCC	TRAPR0
	STX	TRAPFL
	STX	DANGER
	STX	BURNT
	JMP	V2R5		;NOT A REAL AGRSSR,LEAVE
TRAPR0
	STX	WHICH		;FIGHT OR WAIT
	STX	WHADD
	STX	CASTLE		;RETURN TO CAM FROM BAT
	LDA	#40
	STA	LINLEN
	STA	TRAPFL		;IN TRAP ROOM
	STA	KNITS		;LOOKING FOR TRIG
	STA	PCOLR0		;GOLD = $28 =40
	STA	PCOLR1
	JSR	CLEAR
	JSR	CLRP01
	JSR	CLRP23
;
;WRITE OUT WORDS
	LDA	#LOW TRAPTR	;SET UP KNGPTR
	STA	KNGPTR
	LDA	#HIGH TRAPTR
	STA	KNGPTR+1
	JSR	ROOM		;WRITE OUT
	LDA	#44
	STA	LINLEN
	LDA	#LOW WNDRAM
	STA	PADPTR
	LDA	#HIGH WNDRAM
	STA	PADPTR+1
	JSR	ROOM
	LDA	#40
	STA	LINLEN
	LDA	#[RED-2]
	STA	COLOR2
	STA	COLOR4		;BKGND
	STA	TWCOL
	STA	COLOR3		;MISSILES
;
;WRITE OUT INTRUDER'S NAME
	JSR	T055		;SET PADPTR
	LDA	AGRSSR
	STA	OPPONT
	STA	KINDEX
	JSR	KING3
	JSR	TROPTN		;WRITE OUT FIGHT
;
;WRITE OUT NUMBERS
	JSR	GETOTH
	STA	NUMSHO+1
	LDX	#0
	JSR	TRANUM
	JSR	GETARM
	STX	NUMSHO+2
	LDX	#2
	JSR	TRANUM
	LDA	#44
	STA	LINLEN
	LDA	ACTCRP
	STA	NUMLO
	STA	NUMSHO
	LDA	#0
	STA	NUMHI
	LDX	#4
	JSR	TRANUM
	LDA	#$90		;MAKE CROWN
	STA	CHITE
	JSR	CROWN
	LDA	#6
	STA	COLOR1		;LUM
	JMP	V2R5		;EXIT VBV
;
TRANUM	LDA	TRAPOS,X
	STA	PADPTR
	LDA	TRAPOS+1,X
	STA	PADPTR+1
	JSR	GETDGT
	JMP	DRWDGT
;
TRAPOS	DW	BNKPOS,MENPOS,WNDRAM+28
TRAPTR	DB	$9B,'has invaded',$9B
	DB	'King Arthur',$9B
TQUEST	DB	'will you',$FF
	DB	'Crops Left',$FF
CHOICE	DB	'Fight',$FF,'Wait',$FF
;
;writes out fight or wait
TROPTN	LDA	#40
	STA	LINLEN
	LDX	#20
	JSR	ERSDGT
TROPT1	LDA	#LOW [MENPOS+$500]
	STA	PADPTR
	LDA	#HIGH [MENPOS+$500]
	STA	PADPTR+1
	LDA	#LOW CHOICE
	CLC
	ADC	WHADD
	STA	KNGPTR		;KNGPTR FOR SUBR ROOM
	LDA	#HIGH CHOICE
	ADC	#0
	STA	KNGPTR+1
	JMP	ROOM
;
;
;GETS ATTACKERS ARMY SIZE, AND PUTS
;IT IN A AND NUMLO. SETS NUMHI AND
;LINLEN
;MODIFIES A AND X
GETOTH	LDA	#40
	STA	LINLEN
	LDA	#0
	STA	NUMHI
	LDX	AGRSSR
	LDA	FLDARM,X	;FIELD (ARMY+KNIGHTS)
	CLC
	ADC	FLDKNT,X
	STA	NUMLO
	RTS
;
;
;GETS ARTHURS ARMY SIZE. SETS LINLEN
;AND NUMHI. MODIFIES X AND A
;RETURNS ARMY SIZE IN NUMLO AND X
GETARM	LDA	#40
	STA	LINLEN
	LDA	#0
	STA	NUMHI
	STA	NUMKNT
	LDX	#15
TR002	CPX	#11
	BEQ	TR001
	LDA	KNTIN,X
	BEQ	TR001
	INC	NUMKNT
TR001	DEX
	BNE	TR002
	LDA	ARMSIZ		;ARTHUR'S
	CLC
	ADC	NUMKNT		;ADD KNIGHTS TOO
	TAX
	INX				;ADD ARTHUR TOO
	STX	NUMLO
	RTS
;
;
;****** TRAP ROOM ROUTIEN****
TRAP	LDA	DANGER
	BNE	TRAP06
;NO MORE DANGER, BACK TO OTHER ROOM
	STA	TRAPFL
	LDA	ROOMIN
	STA	BFLAG
	LDA	#$D4
	STA	TWCOL
	LDA	#RED
	STA	COLOR3		;MISSILES
	LDA	#[CTOP*2]
	STA	CHITE
	JMP	BUILD
;
TRAP06	LDA	BURNT
	BNE	TRAP05
	JMP	TRAP21		;WAITING
;
TRAP05	LDA	KNITS
	BNE	TRAP07
;******WRITE OUT 'WILL YOU FIGHT'***
	STA	WHADD
	STA	WHICH
	LDA	#LOW [SCRRAM+$1180]
	STA	PADPTR
	LDA	#HIGH [SCRRAM+$1180]
	STA	PADPTR+1
	LDA	#40
	STA	LINLEN
	STA	KNITS
	LDA	#LOW TQUEST
	STA	KNGPTR
	LDA	#HIGH TQUEST
	STA	KNGPTR+1
	JSR	ROOM
	JSR	TROPT1
;
;****** BIG LOOP- WAIT FOR TRIG ****
;
;****** TRIG DEBOUNCE ******
TRAP07	LDA	LASTRG
	STA	ATRACT
	BEQ	TRAP01
	LDA	TRIG0
	STA	LASTRG
	CMP	#0
	BEQ	TRAP02
	JMP	TRAP03
TRAP01	LDA	TRIG0
	STA	LASTRG
	JMP	TRAP03
;
TRAP02	LDA	WHADD		;** TRIG PRESSED**
	BNE	NOWAIT
;
;******** PRESSED TRIG-FIGHT ***
;SELECT ALL KNIGHTS
	LDX	#15
TFIG02	CPX	#11		;GWY CAN'T FIGHT
	BEQ	TFIG01
	LDA	KNTIN,X		;IF IN, THEN SELECTED
	BEQ	TFIG01
	LDA	#$36
	STA	KNTCOL,X
TFIG01	DEX
	BNE	TFIG02		;ARTHUR=0, ALWAYS GOES
	JSR	BLKOUT
	JMP	SWPBAT
;
;******* STICK ******
TRAP03	LDA	STICK0
	CMP	#$B		;LEFT
	BEQ	TRAP04
	CMP	#7		;RIGHT
	BNE	TRAP20		;SECOND PART
TRAP04	STA	ATRACT
	LDA	JOYDLY
	BNE	TRAP20
	LDA	#30
	STA	JOYDLY
	INC	WHICH
	LDA	WHICH
	LSR	A
	BCC	WFIGHT
	LDA	#6		;WRITE OUT WAIT
	STA	WHADD
	JSR	TROPTN
	JMP	TRAP20
WFIGHT	LDA	#0
	STA	WHADD
	JSR	TROPTN
;
;***** WAIT FOR TRIG *****
TRAP20	JMP	TRAP06
;******* END OF BIG LOOP
;
NOWAIT	LDA	#0
	STA	BURNT
	STA	KNITS
;*******CLEAR LINE*****
	LDA	#LOW [SCRRAM+$1180]	;CLEAR LINE
	STA	SCNPTR
	LDA	#HIGH [SCRRAM+$1180]
	STA	SCNPTR+1
	LDA	#40
	STA	LINLEN
	JSR	T351		;IN CLWIN
;
;****DEC CROPSTG***
	LDA	CRPSTG
	BEQ	TRAP21
	DEC	CRPSTG
;
;****** UPDATE CROPS LEFT ******
TRAP21	LDA	ACTCRP
	CMP	NUMSHO
	BEQ	TRAP22
	STA	NUMLO
	STA	NUMSHO
	JSR	KNAME3
;UPDATE ARMIES LEFT
TRAP22	JSR	GETOTH
	CMP	NUMSHO+1
	BEQ	TRAP23
	STA	NUMSHO+1
	LDA	#HIGH BNKPOS
	STA	PADPTR+1
	STA	SCNPTR+1
	LDA	#LOW BNKPOS
	JSR	TRPDUP	;##
;##	STA	PADPTR
;##	STA	SCNPTR
;##	LDA	#32
;##	STA	COUNT
;##	JSR	ERSDG2
;##	LDA	SCNPTR
;##	STA	PADPTR
;##	LDA	SCNPTR+1
;##	STA	PADPTR+1
;##	JSR	TRNUM2
TRAP23	JSR	GETARM
	CPX	NUMSHO+2
	BEQ	TRAPBK
	STX	NUMSHO+2
	LDA	#HIGH MENPOS
	STA	PADPTR+1
	STA	SCNPTR+1
	LDA	#LOW MENPOS
	JSR	TRPDUP	;##
;##	STA	PADPTR
;##	STA	SCNPTR
;##	LDA	#32
;##	STA	COUNT
;##	JSR	ERSDG2
;##	LDA	SCNPTR
;##	STA	PADPTR
;##	LDA	SCNPTR+1
;##	STA	PADPTR+1
;##	JSR	TRNUM2
;
;******BACK TO MAINLINE *****
TRAPBK	JMP	V2R5
;
;
TRPDUP:
	STA	PADPTR
	STA	SCNPTR
	LDA	#32
	STA	COUNT
	JSR	ERSDG2
	LDA	SCNPTR
	STA	PADPTR
	LDA	SCNPTR+1
	STA	PADPTR+1
	JMP	TRNUM2

;
;
;SUBR BROOM BUILDS THE ROOMS INITIALLY
;BFLAG HAS # OF ROOM TO BUILD
;
BROOM	LDA	BFLAG		;WHICH ROOM TO BUILD
	STA	ROOMIN
	ASL	A
	TAX
	LDA	RTPTR-2,X		;SET UP POINTER
	STA	KNGPTR
	LDA	RTPTR-1,X
	STA	KNGPTR+1
	STX	SAVCNT
	JSR	ROOM		;WRITE OUT OPTIONS
	LDA	#1
	STA	COLOR4		;BACKGROUND
	LDA	#$0F
	STA	SMASK
	LDA	#6
	STA	COLOR1		;LUM OF ROOMS
	LDX	SAVCNT
	CPX	#8
	BEQ	RM0
	CPX	#2		;WHICH RIGHT SIDE TO DRAW?
	BEQ	RM1
	CPX	#4
	BEQ	TORM2
	JMP	RM3		;X=6
TORM2	JMP	RM2
RM0	LDA	#0;X MUST=8,SO MERLIN'S ROOM
	STA	COLOR2
	LDA	CASTLE
	BEQ	RM4
	STA	KINDEX
	LDA	#0		;SWITCH COLORS, OUT OF CAM
	STA	COLOR1
	LDA	#6
	STA	COLOR2
	JMP	KINGS
RM4	LDA	#1
	STA	WHWAY
	JMP	MERFIX
;WILL DRAW MERLIN DURING "BUILD"
RM1	LDA	#1		;ROUND TABLE ROOM
	STA	SIZEP2
	STA	KNITS
	LDA	CASTLE
	BNE	RM1SEE
	LDA	#$82		;CAMELOT
	STA	COLOR2
	JSR	ROUND
	JSR	CLSHOW
	LDX	#15
	LDA	#$C4		;MAKE ALL SHIELDS GREEN
	STA	PCOLR3
VR17	STA	KNTCOL,X
	DEX
	BPL	VR17
	LDA	#1
	STA	WHWAY
	JSR	KNTSEE
	CMP	#$FF
	BEQ	RM12		;NO SHIELDS
	LDX	KINDEX
	LDA	KNTIN,X
	BEQ	RM12
;##	JSR	KNAME
	PHA		;##
	LDA	#7
	STA	KNITCT
	PLA		;##
	JMP	PLOTIT	;##
;##	LDA	KINDEX
;##	JSR	KNPLOT		;PUT UP SHIELD
;##	JMP	KNCURS
RM12	RTS
;
;
PLOTIT:		;## SAVE DUPLICATE CODE
	JSR	KNAME	;##
	LDA	KINDEX	;##
	JSR	KNPLOT	;##
	JMP	KNCURS	;##
;
RM1SEE	LDA	#4		;SEE OPT RT
	STA	COLOR1
	LDA	#$88
	STA	COLOR2
	JSR	ROUND
	LDX	CASTLE
	LDA	RETRET,X
	STA	SEKGIN
	BEQ	RM1SE2
	LDA	#LOW WNDRAM
	STA	PADPTR
	LDA	#HIGH WNDRAM
	STA	PADPTR+1
	LDA	#44
	STA	LINLEN
	LDA	TARGSV,X
	STA	KINDEX
	JSR	KING3		;WRITE OUT TARGIT
	LDX	CASTLE
	LDA	#0
	STA	HPOSP2
RM1SE2				;X HAS CASTLE
	LDA	KGKNTS,X
	SEC
	SBC	FLDKNT,X
	STA	TIMP1
	STA	NSEKIN		;# KNIGHTS
	BEQ	RM12
RM1SE3	LDX	TIMP1
	DEX
	JSR	RM1SE4
	DEC	TIMP1
	BNE	RM1SE3
	RTS
;
;X NEEDS WHICH ONE
RM1SE4	LDA	SESHOX,X
	STA	KNITX
	LDA	SESHOY,X
	STA	KNITY
	JSR	GETPL1
	LDA	#HIGH BLANKS
	STA	KNGPTR+1
	LDA	#LOW BLANKS
	STA	KNGPTR
	LDA	#15
	STA	COUNT
	JMP	DRWPLT
;
RM2	LDA	#$22		;THRONE ROOM
	STA	COLOR2
	LDA	KINDEX
	CMP	CASTLE
	BNE	RM22
	INC	KINDEX
	JSR	KMASK
RM22	LDA	#0
	STA	SIZEP2
	STA	SIZEP3
	JSR	DOPRST
	LDA	CASTLE
	BNE	RM21
	JSR	BRITAN
	JMP	THRONE
RM21	LDA	#$28
	STA	COLOR2
	LDA	#4
	STA	COLOR1
	LDA	KINDEX
	STA	SEEWHO
	JSR	CLSHOW
	JSR	SEEGET
	JSR	SEEPLT
	LDX	CASTLE
	LDA	LIEGE,X
	CMP	#$10
	BCC	RM211
	LDA	#$FF
	STA	SETVAS
	JSR	KINGS
	JSR	THR02
	JMP	SEECUR
;
RM211	STA	TIMP1
	JSR	CLWIN		;VASSAL SEE THRONE
	LDA	TIMP1
	ASL	A
	TAX
	LDA	KNGDAT,X
	STA	KNGPTR
	LDA	KNGDAT+1,X
	STA	KNGPTR+1
	LDA	#$0F
	STA	HSCROL
	LDX	#8
	LDY	#0
	STY	SETVAS
RM212	LDA	WLIEGE,Y
	STY	STOREY
	JSR	CALIG
	LDY	STOREY
	INY
	CPY	#5
	BNE	RM212
	JSR	T12		;IN ROOM
DOHARM	LDX	CASTLE		;DO ARMY VAS GETS
	LDA	LIEGE,X
	TAX
	LDA	HOMARM,X
	LSR	A
	STA	NUMSHO
	STA	NUMLO
	LDA	#0
	STA	NUMHI
	LDX	#16
	LDA	#44
	STA	LINLEN
	LDA	NUMPOS,X
	STA	PADPTR
	LDA	NUMPOS+1,X
	STA	PADPTR+1
	JSR	GETDGT
	JMP	DRWDGT
WLIEGE	DB	'Liege'
;
RM3	JSR	NOATCK		;TRES
;CLEARS OUT ART'S ATTACKEES
	LDA	#44
	STA	LINLEN
	LDA	#LOW WNDRAM		;EXPERIENCE
	STA	PADPTR
	LDA	#HIGH WNDRAM
	STA	PADPTR+1
	JSR	ROOM
	LDA	#40
	STA	LINLEN
	LDA	#$C2		;TREASURY ROOM
	STA	COLOR2
	LDA	CASTLE
	BEQ	RM31
	LDA	#$C8
	STA	COLOR2
	LDA	#4
	STA	COLOR1
RM31	LDA	#7
	STA	KNITCT
	LDA	#$FF
	STA	SMASK
	LDA	KINDEX
	STA	SAVKNG
	LDA	#0
	STA	KINDEX
	STA	KNITS
	LDX	CASTLE
	LDA	TAX,X
	STA	TAXSHO
	LDA	ARMBGT,X
	STA	ARMSHO
	JMP	TRNUMS
;
;
CLSHOW	LDA	#0		;CLEAR OUT KSHOWX&Y
	LDX	#31
LOOP05	STA	KSHOWX,X
	DEX
	BPL	LOOP05
	RTS
;
;SUBR CLRP01CLEARS OUT PLAYERS 0 & 1
;
CLRP01	LDA	#0
	TAX
T16	STA	PLAY0,X
	INX
	BNE	T16
	RTS
;
;BLACKOUT!
BLKOUT	LDA	#0
	LDX	#7
BLKOU1	STA	HPOSP0,X
	DEX
	BPL	BLKOU1
	STA	DMACTL
	STA	SDMCTL
	RTS
;
;SUBR OFFTOP MAKES THE CROWN SLIDE
;OFF THE TOP OF THE ROOM
;
OFFTOP	LDA	#32
	STA	COUNT
T50	DEC	CHITE
	JSR	CROWN
	DEC	COUNT
	BNE	T50
	LDA	#[CTOP*2]
	STA	CHITE
	RTS
;
;
;SUBR OFFBOT SLIDES CROWN OUT THE
;BOTTOM OF THE ROOM
;
OFFBOT	LDA	#CRTALL
	STA	COUNT
	DEC	CHITE
T51	JSR	CROWN
	INC	CHITE
	DEC	COUNT
	BNE	T51
	LDA	#[CBOT*2]
	STA	CHITE
	RTS
;
;
;SUBR CROWN POSITIONS AND DRAWS THE
;CROWN WHEN BUILDING A ROOM, MOVING
;IT, AND WHEN GOING OFF THE BOTTOM
CROWN	LDY	#0
	LDA	CHITE		;WHERE TOP OF CROWN GOES
	LSR	A
	CLC
	ADC	#4
	TAX
CROWN0	LDA	CTAB1,Y
	STA	PLAY0,X
	LDA	CTAB2,Y
	STA	PLAY1,X
	INX
	CPX	#CEND		;AT TEXT WINDOW?
	BEQ	CROWN1
	INY
	CPY	#CRTALL		;HEIGHT OF CROWN
	BNE	CROWN0
CROWN1	RTS
;
;
;VERTICAL BLANK ROUTINE
;
VROOM	JSR	PLAFAN		;DOUG'S MUSIC
;
	LDA	NOISFL		;FOR TRIG
	BEQ	VR03
	JSR	TRNOIS
;
VR03	LDA	JOYDLY		;JOYSTICK DEBOUNCE
	BEQ	VR12
	DEC	JOYDLY
;
VR12	LDA	SFLAG		;ALREADY IN MY VBI?
	BPL	VR0
	JMP	XITVBV		;VERT. VBI IN PROGRESS
VR0	ASL	SFLAG
;
	LDA	CONSOL		;FOR LOAD & SAVE
	AND	#4		;OPTION KEY
	BNE	VRSEL3
	STA	CASTLE		;A=0
;IF 'SEE'ING,THEN RETURN TO CAMELOT
	JSR	BLKOUT		;TURN LIGHTS OUT
	LDX	#HIGH XITVBV
	LDY	#LOW XITVBV
	LDA	#7
	JSR	SETVBV
	PLA
	PLA
	PLA
	PLA
	PLA
	PLA
	JMP	SWPZED
;
;SELECT KEY- PAUSE OPTION
VRSEL3	LDA	SELFLG		;WAIT 4 DEBOUNCE?
	BEQ	VRSEL1
VRSEL2	LDA	CONSOL		;DEBOUNCING
	AND	#2
	BEQ	VRSEL2		;WAIT FOR IT TO BE 1(UP)
	JSR	PAUSDL
	LDA	#0
	STA	SELFLG
	JMP	V2R5		;EXIT VBV
;
VRSEL1	LDA	CONSOL
	AND	#2
	BNE	VR101
	LDA	#$FF		;INITIAL PRESS OF KEY
	STA	SELFLG
;
VR101	LDA	TRAPFL		;IN TRAP ROOM?
	BEQ	VR115
	JMP	TRAP
VR115
	LDA	DANGER		;##
	ORA	LANGER		;##
	BNE	VR116		;##
	LDA	#$2C		;##
	STA	PCOLR0
	STA	PCOLR1
	JMP	VR111
;
VR116
	LDA	#$26		;##
	STA	COLSWP		;##
	LDA	DANGER		;##
	BNE	VR113		;##
	LDA	#$2A		;##
	STA	COLSWP		;##
	JMP	VR114		;##
;
VR113	LDA	BURNT		;CHECK IF CROP BURNT
	BEQ	VR114
	JMP	TRAPRM
VR114	LDA	FLCNT
	BNE	VR112
;##	LDA	PCOLR0		;FLASH CROWN
;##	EOR	#$04
	LDA	#$2C		;##
	LDX	PCOLR0		;##
	CPX	#$2C		;##
	BNE	VR117		;##
	LDA	COLSWP		;##
VR117
	STA	PCOLR0
	STA	PCOLR1
;
VR111	LDA	#[FLRATE+1]
	STA	FLCNT
VR112	DEC	FLCNT
;
VR11	LDA	STICK0
	CMP	#$0F
	BNE	VR15
;STICK NOT MOVE, SO MAGNET STUFF
	LDA	CHITE
	CMP	#32
	BCS	MAGNT4
	CMP	#27
	BCC	VR19
	JMP	VR20
MAGNT4	CMP	#160
	BCS	VR19
	AND	#$1F
	CMP	#12
	BNE	VR141		;JMP V2R
	LDA	LASTRG
	BEQ	VR01
	LDA	TRIG0
	STA	LASTRG
	BEQ	VR02
	JMP	V2R
VR01	LDA	TRIG0
	STA	LASTRG
	JMP	V2R
;SEE IF IN CAMELOT,IF SO JSR TRIG
VR02	STA	ATRACT
	LDA	CASTLE
	BNE	VR18
	JSR	TRIG
	LDA	CASTLE		;IN ANOTHER CASTLE?
	BEQ	VR19
	JMP	BUILD
VR19	JMP	V2R
VR18	LDA	ROOMIN
	CMP	#4		;MERLIN
	BNE	VR11
	LDA	ZONE
	CMP	#4		;SEE
	BNE	VR11
	JSR	SWCAST		;BACK TO CAMELOT
	JMP	V2R5
VR141	BCS	MAGNT2
	INC	CHITE
	JMP	VR1		;JSR CROWN,JMP V2R
MAGNT2	DEC	CHITE
	JMP	VR1		;JSR CROWN, JMP V2R
VR15	STA	ATRACT
	CMP	#$E		;UP
	BNE	VR2
	DEC	CHITE		;STICK MOVED UP
	LDA	CHITE
	AND	#$1F
	CMP	#$1F
	BNE	VR16
	LDA	ZONE		;IN NEW ZONE
	CMP	#4
	BNE	VR151
	LDX	CASTLE
	BEQ	VR151
	LDX	ROOMIN
	CPX	#4
	BNE	VR151
	INC	CHITE		;CAN'T MOVE UP IF NOT
	JMP	VR1		;IN CAMELOT
VR151	JSR	FIXTRES
VR16	LDA	CHITE
	LSR	A
	CMP	#CTOP		;CROWN AT TOP OF SCREEN?
	BCS	VR1
	LDA	ROOMIN		;WENT OFF TOP
	CMP	#4
	BNE	V13
	INC	CHITE		;TOP ROOM-DO NOTHING
	JMP	V2R
V13	CLC		;TO NEXT ROOM
	ADC	#1
	STA	ROOMIN
	STA	BFLAG
	CMP	#4		;WAS IN TRES
	BNE	VR133
	LDA	SAVKNG
	STA	KINDEX
VR133	JSR	OFFTOP		;CROWN SLIDE OFF
	JMP	BUILD		;EXITS
VR1	JSR	CROWN		;MOVED UP,NOT OFF TOP
	JMP	V2R
VR2	CMP	#$D		;DOWN
	BEQ	VR20
	JMP	VR4
VR20	INC	CHITE		;WENT DOWN
	LDA	CHITE
	AND	#$1F
	BNE	VR25
	JSR	FIXTRES		;IN ONE ZONE LOWER
VR25	LDA	CHITE
	LSR	A
	CMP	#CBOT
	BCC	VR21
	LDA	ROOMIN		;WENT OFF BOTTOM
	CMP	#1		;BOTTOM ROOM?
	BNE	VR222
;
	LDA	CASTLE
	BEQ	VR22
	DEC	CHITE		;DON'T GO OFF BOTTOM
	JMP	V2R
;
VR22	LDX	TARGIT
	LDA	TRBTOR,X
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	STA	TIMP1
	TXA
	CLC
	ADC	TIMP1
	TAY
	LDA	#$40		;NEUTRL
	STA	KNGSTS,Y
	TXA
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	CLC
	ADC	TRBTOR,X
	TAY
	LDA	#$40
	STA	KNGSTS,Y
	LDA	#$10
	STA	TRBTOR,X
	LDA	#1
	STA	TRBCNT,X
	JSR	VRBYE3
	LDA	#128
	STA	SFLAG
	JMP	SWPBRT		;EXIT CAMELOT, TO BR MAP
;
VR222	SEC			;TO NEXT LOWER ROOM
	SBC	#1
	STA	ROOMIN
	STA	BFLAG
	CMP	#2		;WAS IN TRES
	BNE	VR2222
	LDA	SAVKNG
	STA	KINDEX
VR2222	JSR	OFFBOT		;CROWN OFF
	JMP	BUILD		;EXITS
VR21	JSR	CROWN		;MOVED DOWN, NOT TO
	JMP	V2R		;NEXT ROOM
VR4	CMP	#$B		;LEFT
	BNE	VR6
	LDA	#$FF
	STA	WHWAY
	JMP	VR27
VR6	CMP	#7		;RIGHT
	BNE	TOV2R
	LDA	#1
	STA	WHWAY
;
VR27	LDA	JOYDLY		;LEFT OR RIGHT
	BNE	TOV2R
	LDA	CASTLE
	BEQ	LEFT01
	LDA	ROOMIN
	CMP	#4
	BEQ	TOV2R		;MERLIN,NOT CAM.DO NOTHIN
	CMP	#1
	BEQ	TOV2R		;RT NOT CAM,DO NOTHING
LEFT01	LDA	#30
	STA	JOYDLY
	JSR	FRED2		;INC OR DEC KINDEX
	LDA	ROOMIN
	CMP	#1
	BNE	LEFT03
;
;ROUND TABLE ROOM
	JSR	KNTSEE		;IS KNIGHT THERE?
	CMP	#$FF
	BEQ	TOV2R		;NO KNIGHTS
	LDA	ZONE
	BEQ	LEFT04
	LSR	A
	BCS	LEFT04
;
	LDA	KINDEX		;ZONE 2 OR 4
	BNE	LEFT05
;ARTHUR. COMES BACK,CAN'T BE GWY
	JSR	FRED3		;FRED2,KMASK,KNTSEE,DEY
	BEQ	TOV2R		;ONLY ARTHUR
	LDA	KINDEX
LEFT05	CMP	#11		;GWY
	BNE	LRRT01
	JSR	FRED3		;FRED2,KMASK,KNTSEE,DEY
	BEQ	TOV2R
LRRT01	LDX	KINDEX
	LDA	KNTIN,X
	BEQ	TOV2R
;##	JSR	KNAME		;WRITE OUT KNIGHT'S NAME
;##	LDA	KINDEX
;##	JSR	KNPLOT
;##	JSR	KNCURS
	JSR	PLOTIT	;##
TOV2R	JMP	V2R
;
LEFT04	LDA	KINDEX		;NOT ZONE 2 OR 4
	BNE	LRRT01
	JSR	FRED3		;FRED2,KMASK,KNTSEE,DEY
	BNE	LRRT01
	JMP	V2R		;ONLT ART IN
;
LEFT03	CMP	#2		;THRONE
	BNE	LEFT06
	LDA	CASTLE
	BNE	LEFT09
	LDY	ZONE
	CPY	#2
	BNE	LEFT07
	JSR	ATACSE		;WON'T RETURN KINDEX=0
	CMP	#$FF
	BEQ	TOV2R
LEFT07	LDA	KINDEX
;	CMP	CASTLE	CAMELOT ONLY
	BNE	LEFT08
	JSR	FRED2
LEFT08	LDA	TRIBFL
	BNE	VRNUM
	CPY	#1		;ZONE
	BNE	LEFT02
	LDA	KINDEX
	STA	SAVKNG
	JSR	VASSEE
	LDX	KINDEX
	CPX	SAVKNG
	BEQ	LEFT02
	CMP	#$FF
	BEQ	TOV2R
LEFT02	JSR	THRONE
	JMP	V2R
VRNUM	JSR	DOTRIB
	LDA	#0
	STA	KINDEX
	JMP	V2R
;NOT CAMELOT
LEFT09	LDX	CASTLE
	LDA	LIEGE,X
	CMP	#$10
	BCC	LEFT11		;VASSAL NO LEFT/RT
	LDA	KINDEX
	CMP	CASTLE
	BNE	LEFT10
	JSR	FRED2
LEFT10	LDA	KINDEX
	STA	SEEWHO
	JSR	SEEUPD
	JSR	SEECUR
	JSR	KINGS
	JSR	THR02
LEFT11	JMP	V2R
;
;
LEFT06	CMP	#3		;TRES
	BEQ	VR10
;MERLIN'S ROOM
	JSR	MERFIX
	JMP	V2R
;
VR10	LDA	CASTLE		;TRES
	BNE	V2R
	LDA	ZONE
	CMP	#2
	BEQ	VRTAX
	CMP	#3
	BNE	VRARM3
	LDA	KINDEX
	BPL	VRARM1
	DEC	ARMSHO
	LDA	ARMSHO
	CMP	#$FF
	BEQ	VRARM5
VRARM2	JSR	FIXDGT
VRARM3	LDA	#0
	STA	KINDEX
	JMP	V2R
VRARM1	INC	ARMSHO
	LDA	ARMSHO
	CMP	#129
	BEQ	VRARM4
	JMP	VRARM2
VRTAX	LDA	KINDEX
	BPL	VRTAX1
	DEC	TAXSHO
	LDA	TAXSHO
	CMP	#$FF
	BEQ	VRTAX2
	JMP	VRARM2
VRTAX1	INC	TAXSHO
	LDA	TAXSHO
	CMP	#129
	BEQ	VRTAX3
	JMP	VRARM2
VRARM4	DEC	ARMSHO
	JMP	VRARM3
VRARM5	INC	ARMSHO
	JMP	VRARM3
VRTAX2	INC	TAXSHO
	JMP	VRARM3
VRTAX3	DEC	TAXSHO
	JMP	VRARM3
;KINDEX WILL TELL IF MOVED STICK
;LEFT OR RIGHT: 1=RIGHT,SMASK=LEFT
;AT END OF THIS LITTLE PART, SET
;KINDEX BACK TO 0.
;
;
V2R
	INC	KNITCT
	LDA	KNITCT
	BNE	V2R18
	JSR	KREL
	JSR	KARM
V2R18	LDA	ROOMIN
;
	CMP	#4		;MERLIN'S ROOM
	BNE	V2R3
	LDA	CASTLE
	BNE	V2R4
	LDX	KINDEX
	LDA	LIEGE,X
	BNE	V2R47
	JSR	MERFIX		;IN CASE HE NOW ART VAS
;GLITTER MERLINS FACE
V2R47	LDA	SHOWME		;MERLIN SHOWN?
	BNE	V2R45
	LDA	MERFLG		;IS HE SUPPOSED TO BE?
	BEQ	V2R4		;NO!
	STA	SHOWME		;HE WASN'T, BUT NOW IS
	JSR	FADIN
	JMP	V2R5
V2R45	LDA	MERFLG
	BNE	V2R46
	STA	SHOWME		;HE WAS, AND SHOULDN'T
	JSR	FADOUT
	JMP	V2R5
V2R46	JSR	GLITER		;HE IS AND SHOULD
V2R4	JMP	V2R5
;
V2R3	CMP	#2
	BEQ	V2R19
	JMP	V2R2
V2R19	LDX	CASTLE		;THRONE
	LDA	PRESTG,X		;UPDATE PRESTIGE
	CMP	NUMSHO+2
	BEQ	THUD09
	JSR	DOPRST
THUD09	LDA	CASTLE
	BNE	THUD14
	JMP	THUD04
;
THUD14	LDA	KNITCT		;NOT CAMELOT
	AND	#7		;UPDATE EVERY 8 TIMES
	STA	KNITCT
	BNE	THUD05
	INC	KNITS
	LDA	KNITS
	AND	#$0F
	STA	KNITS
	CMP	CASTLE
	BEQ	THUD10
	STA	SEEWHO
	JSR	SEEUPD
THUD10	LDX	CASTLE
	LDA	LIEGE,X
	CMP	#$10
	BCS	THUD07
	LDX	SETVAS		;IN VASSAL CASTLE
	BEQ	THUD15
;RM211 NEEDS LIEGE,KINDEX IN A
	JSR	RM211		;NOW A VASSAL
	JSR	CLRP23
	LDA	#0
	STA	SETVAS
	STA	NUMSHO
THUD15	LDA	KNITCT		;UPDATE ARMY GET
	AND	#7
	BNE	THUD08
	LDX	CASTLE
	LDA	LIEGE,X
	TAX
	LDA	HOMARM,X
	LSR	A
	CMP	NUMSHO
	BEQ	THUD08
	LDX	#16
	JSR	ERSDGT
	JSR	DOHARM
THUD08	JMP	V2R5
THUD07	LDA	KNITS		;NON-VASSAL
	CMP	KINDEX
	BNE	THUD03
	JSR	SEECUR
	JMP	THUD03
THUD05	LDX	CASTLE
	LDA	LIEGE,X
	CMP	#$10
	BCC	THUD08
	LDA	KNITCT
	CMP	#2
	BNE	THUD03
	LDA	KINDEX		;REDRAW SELECTED KING
	STA	SEEWHO
	JSR	SEEOLD
	JSR	SEEPLT
	LDX	CASTLE		;WHAT CASTLE GIVE
	LDA	TRBTOR,X
	CMP	KINDEX
	BNE	THUD03
	LDA	TRIBUT,X
	CMP	NUMSHO
	BEQ	THUD03
	STA	NUMSHO
	STA	NUMLO
	LDA	#0
	STA	NUMHI
	JSR	ACTDG2
	JSR	MINUSA
	JMP	THUD03
;
THUD04	LDA	TRIBFL		;CAMELOT
	BNE	THUD16
	LDA	KINDEX
	STA	SAVKNG
	JSR	FIXTH2
	LDX	KINDEX
	CPX	SAVKNG
	BEQ	THUD01
	CMP	#$FF
	BNE	THUD02
	JSR	FIXTH1
	JMP	V2R5
THUD02	JSR	THRONE
THUD01	LDA	ZONE
	CMP	#2		;ATTACK, ONLY CAMELOT
	BNE	THUD03
	JSR	FIXTH4		;KINDEX MAY BE ATTACKEE
;
THUD03	LDX	KINDEX		;THRONE RM UPDATE
	LDA	CASTLE
	BNE	THUD17
THUD16	LDX	SAVKNG
THUD17	LDA	TRBTOR,X
	CMP	CASTLE		;FOR ALL NON-VAS CASTLES
	BEQ	THUD11
	LDA	#0
	JMP	THUD12
THUD11
	LDA	TRIBUT,X		;WHAT KINDEX GIVE
THUD12	CMP	NUMSHO+1		;TO CASTLE
	BEQ	V2R15
	STA	NUMSHO+1
	STA	NUMLO
	LDA	#0
	STA	NUMHI
	JSR	GETCO2
	LDA	#44
	STA	LINLEN
	LDX	#16
	JSR	ERSDGT
	JSR	TRBDGT
V2R15	JMP	V2R5
;
V2R2	CMP	#3		;TREASURY
	BEQ	T666
	JMP	T66
T666	LDA	KNITCT
	AND	#$3F		;UPDATE EVERY 64 TIMES
	BNE	TRUPD1
	INC	KNITS
	LDA	KNITS
	CMP	#9		;OTHERS HAVE 9 TO UPDATE
	BCC	T661
	LDA	#$FF
	STA	KNITS
	JMP	TRUPD1
T661	LDY	CASTLE
	BNE	TRUPD3		;CAMELOT HAS 7 UPDATE
	CMP	#7
	BCS	TRUPD1
	CMP	#0
	BEQ	TRUPD3		;DON'T ADD 2 TO 'EXCESS'
	CLC			;(N+2)*2=WHICH TO BE UPDATED
	ADC	#2
TRUPD3	ASL	A
	TAX
	CPX	#16
	BEQ	TRUPE4
	LDA	AMOUNT,X
	STA	PADPTR
	LDA	AMOUNT+1,X
	STA	PADPTR+1
	LDY	CASTLE
	CPX	#2
	BEQ	TRUPD2
	CPX	#4
	BEQ	TRUPD4
	LDA	(PADPTR),Y
	CMP	NUMSHO,X
	BNE	TRUPD5		;NEEDS FIXING
TRUPD6	CPX	#8		;BANK
	BNE	TRUPD1		;OKAY
	LDA	BANK+16,Y
	CMP	NUMSHO+1,X
	BEQ	TRUPD1
TRUPD5	LDA	#40		;NEEDS FIXING
	STA	LINLEN
	JSR	ERSDGT
	JSR	DODGT
TRUPD1	JMP	V2R5		;OKAY
TRUPD2	LDA	TAX,Y
	CMP	TAXSHO
	BEQ	TRUPD1
	STA	TAXSHO
	JMP	TRUPD5
TRUPD4	LDA	ARMBGT,Y
	CMP	ARMSHO
	BEQ	TRUPD1
	STA	ARMSHO
	JMP	TRUPD5
;
TRUPE4	JSR	TRUPEX
;
	LDX	#16
	LDA	CPRODL
	CMP	NUMSHO,X
	BNE	TRUPE1
	LDA	CPRODH
	CMP	NUMSHO+1,X
	BEQ	TRUPD1		;V2R5
TRUPE1	LDA	#44
	STA	LINLEN
	JSR	ERSDGT
	JSR	TRUPE2
	JMP	V2R5
;
T66	LDX	CASTLE
	BNE	T6622
	JMP	T662
T6622	LDA	SEKGIN
	BNE	T663
	LDA	RETRET,X
	BEQ	T664		;DONE
	STA	SEKGIN
	LDA	TARGSV,X
	STA	KINDEX
	JSR	KINGS		;WRITE OUT TARGIT
	LDA	#0
	STA	HPOSP2
;ERRASE KNIGHTS THAT HAVE LEFT
	JMP	T664
T663	LDA	RETRET,X
	BNE	T664		;DONE
	STA	SEKGIN
	LDA	#173
	STA	HPOSP2
	JSR	CLWIN		;NO MORE TARGIT
;DRAW MORE KNIGHTS
T664
	LDX	CASTLE
	LDA	KGKNTS,X
	SEC
	SBC	FLDKNT,X
	STA	SAVA		;NEW #
	CMP	NSEKIN		;OLD #
	BEQ	SELES2		;DONE
	BCS	SEMORE		;NEW > OLD
;NEW < OLD
	LDX	NSEKIN
	TXA
	STX	TIMP1
	SEC
	SBC	SAVA
	STA	DCOUNT
	LDA	SAVA
	STA	NSEKIN		;NEW #
SELESS	LDX	TIMP1
	DEX
	LDA	SESHOX,X
	STA	KNITX
	LDA	SESHOY,X
	STA	KNITY
	JSR	GETPL1
	DEC	TIMP1
	DEC	DCOUNT
	BNE	SELESS
SELES2	JMP	V2R5
SEMORE			;NEW > OLD
	LDX	NSEKIN
	STX	TIMP1
	SEC
	SBC	NSEKIN
	STA	DCOUNT
	LDA	SAVA
	STA	NSEKIN
SEMOR2	LDX	TIMP1
	JSR	RM1SE4
	INC	TIMP1
	DEC	DCOUNT
	BNE	SEMOR2
	JMP	V2R5
;
;
T662	LDA	KINDEX		;RT ROOM, CAMELOT
	CMP	#11		;CAN'T SELECT OR HONOR GWY
	BNE	V2R1		;(IF CHANGED ZONES)
	LDA	ZONE
	BEQ	V2R1
	LSR	A
	BCS	V2R1
	INC	KINDEX
	LDA	#1
	STA	WHWAY
	JSR	KNTSEE
	DEY
	BNE	V2R10
	LDA	#0
	STA	KINDEX		;WHY NOT. 
	STA	HPOSP3		;GET RID OF CURSOR
	JSR	CLWIN		;GET RID OF NAME(GWY)
V2R16	JMP	V2R5
V2R10	LDX	KINDEX
	LDA	KNTIN,X
	BEQ	V2R16
	CPX	#0
	BEQ	V2R16
;##	JSR	KNAME
;##	LDA	KINDEX
;##	JSR	KNPLOT
;##	JSR	KNCURS
	JSR	PLOTIT	;##
;KNIGHT SHIELD UPDATE HERE
V2R1	LDA	KNITCT
	AND	#7		;UPDATE EVERY 8? TIMES ONLY
	BNE	V2R17
	INC	KNITS		;KNIGHT'S SHADOW,ie
	LDA	KNITS		;WHICH ONE TO UPDATE
	AND	#$0F		;LOWER 4 BITS ONLY
	STA	KNITS
	TAX
	BEQ	V2R11
	LDA	KNTIN,X		;SEE IF THERE
	BEQ	V2R11
	JSR	FIXKN		;FIX SHIELD
	LDA	KNITS		;SEE IF NEED CURSOR
	CMP	KINDEX		;UPDATE
	BNE	V2R11
	JSR	KNCURS
	LDX	KINDEX
	CPX	#11
	BEQ	V2R11
	LDA	KNTARM,X		;UPDATE # ON SCREEN
	CMP	NUMSHO
	BEQ	V2R11
	JSR	KNAME5
V2R11	JMP	V2R5
V2R12	CMP	#6
	BNE	V2R11
	LDA	KNITS
	BNE	V2R11
	JSR	TABLE		;REDRAW TABLE
	JMP	V2R5
V2R17	CMP	#2
	BNE	V2R12
	LDX	KINDEX		;REDRAW SELECTED KNIGHT
	BEQ	V2R11		;ARTHUR
	LDA	KNTIN,X		;SEE IF THERE
	BEQ	V2R11
	TXA
	JSR	GKNPTR
V2R13	LDY	#0		;SKIP THE NAME DATA
	LDA	(KNGPTR),Y
	INC	KNGPTR
	BNE	V2R14
	INC	KNGPTR+1
V2R14	CMP	#$FF
	BNE	V2R13
	LDX	KINDEX
	JSR	GETPLT
	LDA	#15
	STA	COUNT
	JSR	DRWPLT
;
;
V2R5	PLA		;DO A JMP XITVBV
	TAY
	PLA
	TAX
	PLA
	LSR	SFLAG		;ENABLE VBI
	RTI

;TRNUMS PRINTS OUT ALL 9 NUMS IN TRES
TRNUMS	LDX	#0
TRNUM1	STX	COUNT
	JSR	DODGT
	LDX	COUNT
	INX
	INX
	CPX	#16
	BNE	TRNUM1
	LDA	#44
	STA	LINLEN
	JSR	TRUPEX		;EXPER.=EXPER/ARMSIZ
;ABOVE GETS THE #S AND DIVIDES
TRUPE2	LDA	CPRODL
	STA	NUMLO
	STA	NUMSHO+16
	LDA	CPRODH
	STA	NUMHI
	STA	NUMSHO+17
	LDA	#LOW [WNDRAM+28]
	STA	PADPTR
	LDA	#HIGH [WNDRAM+28]
	STA	PADPTR+1
	JMP	TRNUM2
;
;DODGT DOES ONE NUMBER. NEEDS WHICH
;VALUE (*2) IN X. DISTROYS Y AND X.
DODGT	LDA	NUMPOS,X
	STA	PADPTR
	LDA	NUMPOS+1,X
	STA	PADPTR+1
	LDA	AMOUNT,X
	STA	RMPTR
	LDA	AMOUNT+1,X
	STA	RMPTR+1
	LDY	CASTLE
	CPX	#2
	BEQ	DODGT2
	CPX	#4
	BNE	DODGT1
DODGT2	LDY	#0		;2 OR 4. THE 'SHO'S
DODGT1	LDA	(RMPTR),Y
	STA	NUMLO
	STA	NUMSHO,X
	CPX	#8		;BANK
	BEQ	TRNUM4
	LDA	#0
	STA	NUMHI
	STA	NUMSHO+1,X
TRNUM2	JSR	GETDGT
	JMP	DRWDGT
TRNUM4	LDA	BANK+16,Y
	STA	NUMHI
	STA	NUMSHO+1,X
	JMP	TRNUM2
;
;DRWDGT NEEDS DDIGITS & PADPTR.
DRWDGT	LDX	#0
	LDY	#0
	STY	FLAG
DRWDG1	LDA	DDIGIT,Y
	BNE	DRWDG2
	LDA	FLAG
	BEQ	DRWDG3
	LDA	#0
DRWDG2	INC	FLAG
	STY	TIMP2
	CLC
	ADC	#$7B
	JSR	CALIG
	LDY	TIMP2
	INY
	CPY	#5
	BNE	DRWDG1
	RTS
DRWDG3	CPY	#4
	BEQ	DRWDG2
	TXA
	CLC
	ADC	#16
	TAX
	INY
	JMP	DRWDG1
;
;GETDGT DISTROYS X&Y. NEEDS NUMHI
;AND NUMLO
GETDGT	LDX	#0
GETDG2	LDY	#$FF
	SEC
GETDG1	INY
	LDA	NUMLO
	SBC	POWER_L,X
	STA	NUMLO
	LDA	NUMHI
	SBC	POWER_H,X
	STA	NUMHI
	BCS	GETDG1
	TYA
	STA	DDIGIT,X
	LDA	NUMLO
	CLC
	ADC	POWER_L,X
	STA	NUMLO
	LDA	NUMHI
	ADC	POWER_H,X
	STA	NUMHI
	INX
	CPX	#5
	BCC	GETDG2
	RTS
;
;ERSDGT NEEDS WHICH AMOUNT (*2) TO
;DISTROY IN X. DISTROYS A & Y.
;NEEDS LINLEN
;SET TOO
ERSDGT	LDA	#32
	STA	COUNT
	LDA	NUMPOS,X
	STA	PADPTR
	LDA	NUMPOS+1,X
	STA	PADPTR+1
	CPX	#0
	BEQ	ERSDG4
	CPX	#6		;DEMAND
	BEQ	ERSDG6
	CPX	#16		;TRIBUTE OR TEXT WINDOW
	BCC	ERSDG3
	LDA	ROOMIN
	CMP	#3
	BEQ	ERSDG2
ERSDG6	INC	PADPTR
	INC	PADPTR
ERSDG4	INC	PADPTR
	JMP	ERSDG2
ERSDG3	CPX	#8		;IN LEFT SIDE
	BCC	ERSDG5
	DEC	PADPTR		;PADPTR NEVER 0,SO
				;NO NEED TO DEC PADPTR+1
	JMP	ERSDG2
ERSDG5	CPX	#4
	BNE	ERSDG2
	LDA	ROOMIN
	CMP	#2
	BNE	ERSDG2
	INC	PADPTR
;	JMP	ERSDG6
;
ERSDG2	LDA	#0
	LDY	#1
ERSDG1	STA	(PADPTR),Y
	INY
	CPY	#12
	BCC	ERSDG1
	LDA	LINLEN
	JSR	INCPTR
	DEC	COUNT
	BNE	ERSDG2
	RTS
;
NUMPOS	DW	EXCPOS,DEMPOS,BUDPOS,BUDPOS+$500
	DW	BNKPOS,GOTPOS,MENPOS,MENPOS+$500
	DW	WNDRAM+28,EXCPOS+1,MENPOS+$500-4
AMOUNT	DW	EXCESS,TAXSHO,ARMSHO,DEMAND
	DW	BANK,TAXREC,ARMSIZ,DEMREC,ARMEXP
POWER_L	DB	LOW 10000,LOW 1000,LOW 100
	DB	LOW 10,LOW 1
POWER_H	DB	HIGH 10000,HIGH 1000
	DB	HIGH 100,HIGH 10,HIGH 1
NUMSHO	DS	3
KSHOWX	DS	16		;ALSO MORE NUMSHO
KSHOWY	DS	16
PSHOWX	DS	16
PSHOWY	DS	16

	ORG	DLADDR
	DB	$70,$70,$70,$4F
	DW	SCRRAM
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F,$F
	DB	$4F,0,[SCRRAM+$1000]/256
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F
	DB	$8F,$5F
	DW	[SCRRAM+WINDOW+44*1]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*2]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*3]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*4]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*5]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*6]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*7]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*8]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*9]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*10]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*11]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*12]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*13]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*14]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*15]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*16]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*17]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*18]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*19]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*20]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*21]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*22]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*23]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*24]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*25]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*26]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*27]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*28]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*29]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*30]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*31]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*32]
	DB	$5F
	DW	[SCRRAM+WINDOW+44*33]
	DB	$41
	DW	DLADDR
;
	ORG	MISSLE
	DB	0,0,0,0
	DB	0,0,0,0
	DB	0,0,0,0
	DB	0,0,0,0
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F,$F
	DB	$F,$F,$F
	DB	0,0,0,0
	DB	0,0,0,0
	DB	0,0,0,0
	DB	0,0,0,0
	DB	0,0,0,0
	DB	0,0,0,0
	DB	0,0,0,0
	DB	0,0,0,0

	LIST	I
	INCLUDE	D2:EQUATE.DAT
	LIST	I
	INCLUDE	D2:CAM20G.SRC
	INCLUDE	D2:CAMVBI.SRC
	INCLUDE	D2:CAMSUB.SRC
	INCLUDE	D2:CAMMOR.SRC
	LIST	I
	INCLUDE	D2:CAMSEE.SRC
	INCLUDE	D2:NUMBERS.SRC
	LIST	I
	INCLUDE	D2:CTRAP.SRC
	LIST	I
	INCLUDE	D2:CAMDAT.SRC
	LIST	I
	INCLUDE	D2:NEWSGEN.SRC
	LIST	I
	INCLUDE	D2:PLAFARE.ASM
	LIST	I
	INCLUDE	D2:MERLIN.P2
	INCLUDE	D2:LEVEL.P2
	ORG	*
	LIST	I
	INCLUDE	D2:DISPLST.SRC
; MERLIN.ASM             JAN 18,1982
;
; PROCESS 1 - DISTINCT MASKS FOR EACH LEVEL
;             BRIGHTER LEVELS HAVE MORE PIXELS TURNED ON
;

RANDOM	=	$D20A
MERLIN	=	GOTPOS+3	; SAME POSITION AS
			; TAXES RECVD IN TREAS ROOM
;
SAVADD	=	*
	ORG	$F0
RPTR	ORG	*+2
FPTR	ORG	*+2
MPTR	ORG	*+2
ZPTR	ORG	*+2
;
	ORG	SAVADD
SAVRND	ORG	*+1
RNDCNT	ORG	*+1
FACCNT	ORG	*+1
MERCNT	ORG	*+1
SCNCNT	ORG	*+1
FADCNT	ORG	*+1
SAVLEN	ORG	*+1
SAVFAD	ORG	*+1
SAVBLD	ORG	*+1
FADIND	ORG	*+1
FADLEV	ORG	*+1
RNDZ	ORG	*+256
;
;
GLITER:	; THIS WILL UPDATE MERLIN'S FACE
	LDA	RANDOM
	AND	#63
	TAX
	LDA	LEVLST,X
;
GLIT:	; PUTS UP FACE, REG A HOLDS LEV
	; USES PERSONALIZED RANDOM TABLES
;
	TAX
	DEX
	LDA	LENTAB,X
	STA	SAVLEN
;
	TXA
	ASL	A
	TAX
	LDA	FACTAB,X
	STA	FPTR
	LDA	FACTAB+1,X
	STA	FPTR+1
;
	LDX	#0
	JSR	GETFAC
;
	LDA	RANDOM
	STA	RNDCNT
;
	LDA	#0
	STA	FACCNT
	STA	SCNCNT
	STA	MERCNT
;
GLIT02:
	LDY	RNDCNT
	LDA	RNDZ,Y
	LDY	FACCNT
	AND	(FPTR),Y
	STA	SAVRND
;
	LDA	(FPTR),Y
	EOR	#$FF
	LDY	MERCNT
	AND	(MPTR),Y
	EOR	SAVRND
	STA	(MPTR),Y
;
	INC	RNDCNT
	INC	FACCNT
	INC	MERCNT
;
	LDA	MERCNT
	AND	#3
	BNE	GLIT02
;
	STA	MERCNT
	INC	SCNCNT
	LDX	SCNCNT
	JSR	GETFAC
	CPX	SAVLEN
	BNE	GLIT02
	RTS
;
;
AVON:	; ERASES FACE
	LDX	#42
AV01:
	JSR	GETFAC
	LDY	#3
	LDA	#0
AVON2	STA	(MPTR),Y
	DEY
	BPL	AVON2
	DEX
	BPL	AV01
	RTS
;
;
FADIN:
	JSR	DIVMAG
	BNE	IN01
	RTS		; MERLIN NOT HOME
;
IN01:
	LDA	#0
	STA	FADCNT
IN02	JSR	INOUT
	INC	FADCNT
;
	LDA	FADLEV
	CMP	#1
	BNE	IN02
	LDA	FADIND
	CMP	SAVFAD
	BNE	IN02
	RTS
;
DIVMAG	LDA	MAGIC
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	STA	SAVFAD
	RTS
;
FADOUT:
	JSR	DIVMAG
	LDA	#105
	STA	FADCNT
OUT02	JSR	INOUT
	DEC	FADCNT
	LDA	FADCNT
	BNE	OUT02
	JSR	AVON
	RTS
;
;REPLACES IN02 & OUT02
INOUT	LDX	FADCNT
	LDA	INLEV,X	; GET LEVEL
	STA	FADLEV
	LDA	INFAD,X	; GET FADE INDEX
	STA	FADIND
	CMP	SAVFAD
	BCC	IN03
	LDA	SAVFAD
	STA	FADIND
IN03:
	JSR	LEVIT
	JMP	LEVIT1
;
LEVIT:
	LDA	FADIND
;BLDRND BUILDS A RANDOM TABLE
; A HOLDS FADE INDEX
	BEQ	LEVIT1
;
;BLDRN0:
	STA	SAVBLD
	ASL	A
	TAY
	LDA	FADTAB,Y
	STA	FPTR
	LDA	FADTAB+1,Y
	STA	FPTR+1
	LDX	#0
BLDRN1:
	LDA	RANDOM
	AND	#7
	TAY
	LDA	(FPTR),Y
	STA	SAVRND
	LDA	RANDOM
	AND	#7
	TAY
	LDA	(FPTR),Y
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	ORA	SAVRND
	STA	RNDZ,X
	INX
	BNE	BLDRN1
;
LEVIT1:
	LDA	FADLEV
	JMP	GLIT
;
;
;
;
FADTAB:
	DW	FADE1
	DW	FADE2
	DW	FADE3
	DW	FADE4
	DW	FADE5
	DW	FADE6
	DW	FADE7
	DW	FADE8
	DW	FADE9
	DW	FADEA
	DW	FADEB
	DW	FADEC
	DW	FADED
	DW	FADEE
	DW	FADEF
;
;
LEVLST:
	DB	7,7
	DB	6,6,6,6
	DB	5,5,5,5,5
	DB	4,4,4,4,4,4,4
	DB	3,3,3,3,3,3,3,3
	DB	2,2,2,2,2,2,2,2,2,2,2,2,2,2,2
	DB	1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
	DB	1,1,1,1,1,1,1
;
;
FACTAB:
	DW	FACE1
	DW	FACE2
	DW	FACE3
	DW	FACE4
	DW	FACE5
	DW	FACE6
	DW	FACE7
;
;
LENTAB:
	DB	43	; 1 MORE THAN LENGTH
	DB	43
	DB	42
	DB	35
	DB	31
	DB	16
	DB	14
;
;
GETFAC
	LDA	FACELO,X
	STA	MPTR
	LDA	FACEHI,X
	STA	MPTR+1
	RTS
;
FACELO:
	DB	MERLIN&255
	DB	[MERLIN+1*40]&255
	DB	[MERLIN+2*40]&255
	DB	[MERLIN+3*40]&255
	DB	[MERLIN+4*40]&255
	DB	[MERLIN+5*40]&255
	DB	[MERLIN+6*40]&255
	DB	[MERLIN+7*40]&255
	DB	[MERLIN+8*40]&255
	DB	[MERLIN+9*40]&255
	DB	[MERLIN+10*40]&255
	DB	[MERLIN+11*40]&255
	DB	[MERLIN+12*40]&255
	DB	[MERLIN+13*40]&255
	DB	[MERLIN+14*40]&255
	DB	[MERLIN+15*40]&255
	DB	[MERLIN+16*40]&255
	DB	[MERLIN+17*40]&255
	DB	[MERLIN+18*40]&255
	DB	[MERLIN+19*40]&255
	DB	[MERLIN+20*40]&255
	DB	[MERLIN+21*40]&255
	DB	[MERLIN+22*40]&255
	DB	[MERLIN+23*40]&255
	DB	[MERLIN+24*40]&255
	DB	[MERLIN+25*40]&255
	DB	[MERLIN+26*40]&255
	DB	[MERLIN+27*40]&255
	DB	[MERLIN+28*40]&255
	DB	[MERLIN+29*40]&255
	DB	[MERLIN+30*40]&255
	DB	[MERLIN+31*40]&255
	DB	[MERLIN+32*40]&255
	DB	[MERLIN+33*40]&255
	DB	[MERLIN+34*40]&255
	DB	[MERLIN+35*40]&255
	DB	[MERLIN+36*40]&255
	DB	[MERLIN+37*40]&255
	DB	[MERLIN+38*40]&255
	DB	[MERLIN+39*40]&255
	DB	[MERLIN+40*40]&255
	DB	[MERLIN+41*40]&255
	DB	[MERLIN+42*40]&255
	DB	[MERLIN+43*40]&255
	DB	[MERLIN+44*40]&255
;
;
FACEHI:
	DB	MERLIN/256
	DB	[MERLIN+1*40]/256
	DB	[MERLIN+2*40]/256
	DB	[MERLIN+3*40]/256
	DB	[MERLIN+4*40]/256
	DB	[MERLIN+5*40]/256
	DB	[MERLIN+6*40]/256
	DB	[MERLIN+7*40]/256
	DB	[MERLIN+8*40]/256
	DB	[MERLIN+9*40]/256
	DB	[MERLIN+10*40]/256
	DB	[MERLIN+11*40]/256
	DB	[MERLIN+12*40]/256
	DB	[MERLIN+13*40]/256
	DB	[MERLIN+14*40]/256
	DB	[MERLIN+15*40]/256
	DB	[MERLIN+16*40]/256
	DB	[MERLIN+17*40]/256
	DB	[MERLIN+18*40]/256
	DB	[MERLIN+19*40]/256
	DB	[MERLIN+20*40]/256
	DB	[MERLIN+21*40]/256
	DB	[MERLIN+22*40]/256
	DB	[MERLIN+23*40]/256
	DB	[MERLIN+24*40]/256
	DB	[MERLIN+25*40]/256
	DB	[MERLIN+26*40]/256
	DB	[MERLIN+27*40]/256
	DB	[MERLIN+28*40]/256
	DB	[MERLIN+29*40]/256
	DB	[MERLIN+30*40]/256
	DB	[MERLIN+31*40]/256
	DB	[MERLIN+32*40]/256
	DB	[MERLIN+33*40]/256
	DB	[MERLIN+34*40]/256
	DB	[MERLIN+35*40]/256
	DB	[MERLIN+36*40]/256
	DB	[MERLIN+37*40]/256
	DB	[MERLIN+38*40]/256
	DB	[MERLIN+39*40]/256
	DB	[MERLIN+40*40]/256
	DB	[MERLIN+41*40]/256
	DB	[MERLIN+42*40]/256
	DB	[MERLIN+43*40]/256
	DB	[MERLIN+44*40]/256
;
;
INFAD:
	DB	1; **** 1
	DB	2
	DB	1; **** 3
	DB	3
	DB	2
	DB	1; **** 6
	DB	4
	DB	3
	DB	2
	DB	1; **** 10
	DB	5
	DB	4
	DB	3
	DB	2
	DB	1; **** 15
	DB	6
	DB	5
	DB	4
	DB	3
	DB	2
	DB	1; **** 21
	DB	7
	DB	6
	DB	5
	DB	4
	DB	3
	DB	2
	DB	1; **** 28
	DB	8
	DB	7
	DB	6
	DB	5
	DB	4
	DB	3
	DB	2; **** 35
	DB	9
	DB	8
	DB	7
	DB	6
	DB	5
	DB	4
	DB	3; **** 42
	DB	10
	DB	9
	DB	8
	DB	7
	DB	6
	DB	5
	DB	4; **** 49
	DB	11
	DB	10
	DB	9
	DB	8
	DB	7
	DB	6
	DB	5; **** 56
	DB	12
	DB	11
	DB	10
	DB	9
	DB	8
	DB	7
	DB	6; **** 63
	DB	13
	DB	12
	DB	11
	DB	10
	DB	9
	DB	8
	DB	7; **** 70
	DB	14
	DB	13
	DB	12
	DB	11
	DB	10
	DB	9
	DB	8; **** 77
	DB	15
	DB	14
	DB	13
	DB	12
	DB	11
	DB	10
	DB	9; **** 84
	DB	15
	DB	14
	DB	13
	DB	12
	DB	11
	DB	10; **** 90
	DB	15
	DB	14
	DB	13
	DB	12
	DB	11; **** 95
	DB	15
	DB	14
	DB	13
	DB	12; **** 99
	DB	15
	DB	14
	DB	13; **** 102
	DB	15
	DB	14; **** 104
	DB	15; **** 105


;
;
INLEV:
	DB	7; **** 1
	DB	7
	DB	6; **** 3
	DB	7
	DB	6
	DB	5; **** 6
	DB	7
	DB	6
	DB	5
	DB	4; **** 10
	DB	7
	DB	6
	DB	5
	DB	4
	DB	3; **** 15
	DB	7
	DB	6
	DB	5
	DB	4
	DB	3
	DB	2; **** 21
	DB	7
	DB	6
	DB	5
	DB	4
	DB	3
	DB	2
	DB	1; **** 28
	DB	7
	DB	6
	DB	5
	DB	4
	DB	3
	DB	2
	DB	1; **** 35
	DB	7
	DB	6
	DB	5
	DB	4
	DB	3
	DB	2
	DB	1; **** 42
	DB	7
	DB	6
	DB	5
	DB	4
	DB	3
	DB	2
	DB	1; **** 49
	DB	7
	DB	6
	DB	5
	DB	4
	DB	3
	DB	2
	DB	1; **** 56
	DB	7
	DB	6
	DB	5
	DB	4
	DB	3
	DB	2
	DB	1; **** 63
	DB	7
	DB	6
	DB	5
	DB	4
	DB	3
	DB	2
	DB	1; **** 70
	DB	7
	DB	6
	DB	5
	DB	4
	DB	3
	DB	2
	DB	1; **** 77
	DB	7
	DB	6
	DB	5
	DB	4
	DB	3
	DB	2
	DB	1; **** 84
	DB	6
	DB	5
	DB	4
	DB	3
	DB	2
	DB	1; **** 90
	DB	5
	DB	4
	DB	3
	DB	2
	DB	1; **** 95
	DB	4
	DB	3
	DB	2
	DB	1; **** 99
	DB	3
	DB	2
	DB	1; **** 102
	DB	2
	DB	1; **** 104
	DB	1; **** 105
;
;
FADE1:
	DB	$0,$0,$0,$0,$1,$2,$4,$8
;
FADE2:
	DB	$0,$0,$1,$2,$4,$8,$1,$2
;
FADE3:
	DB	$1,$2,$4,$8,$1,$2,$4,$8
;
FADE4:
	DB	$1,$2,$4,$8,$4,$8,$5,$A
;
FADE5:
	DB	$1,$2,$4,$8,$3,$5,$9,$C
;
FADE6:
	DB	$3,$5,$9,$6,$A,$C,$4,$8
;
FADE7:
	DB	$3,$5,$9,$6,$A,$C,$5,$A
;
FADE8:
	DB	$3,$5,$9,$6,$C,$A,$B,$D
;
FADE9:
	DB	$5,$9,$A,$6,$7,$B,$D,$E
;
FADEA:
	DB	$5,$A,$7,$B,$D,$E,$B,$D
;
FADEB:
	DB	$7,$B,$D,$E,$7,$B,$D,$E
;
FADEC:
	DB	$7,$B,$D,$E,$B,$D,$F,$F
;
FADED:
	DB	$7,$B,$D,$E,$F,$F,$F,$F
;
FADEE:
	DB	$B,$D,$F,$F,$F,$F,$F,$F
;
FADEF:
	DB	$B,$F,$F,$F,$F,$F,$F,$F
;
;


;********************************
;
; FACE DATA FOR MERLIN
;
FACE1:
          DB 1,  128,16, 0
          DB 3,  16, 0,  128
          DB 8,  0,  0,  0
          DB 16, 0,  0,  0
          DB 0,  8,  64, 32
          DB 0,  4,  0,  0
          DB 48, 0,  0,  0
          DB 0,  0,  0,  0
          DB 64, 0,  0,  16
          DB 96, 0,  0,  16
          DB 32, 0,  0,  16
          DB 32, 0,  0,  16
          DB 112,0,  0,  16
          DB 48, 0,  0,  0
          DB 49, 192,0,  1
          DB 96, 0,  16, 0
          DB 112,0,  98, 113
          DB 56, 0,  2,  161
          DB 0,  0,  4,  33
          DB 0,  0,  8,  0
          DB 8,  32, 0,  0
          DB 112,0,  1,  0
          DB 4,  15, 0,  2
          DB 65, 8,  0,  2
          DB 0,  0,  2,  0
          DB 65, 0,  0,  32
          DB 64, 32, 0,  0
          DB 0,  32, 64, 64
          DB 32, 0,  64, 0
          DB 16, 0,  0,  128
          DB 32, 0,  128,0
          DB 16, 16, 1,  0
          DB 8,  0,  194,0
          DB 4,  0,  4,  0
          DB 2,  1,  4,  0
          DB 0,  59, 4,  0
          DB 7,  0,  8,  0
          DB 3,  128,8,  0
          DB 2,  224,128,0
          DB 1,  240,128,0
          DB 0,  0,  64, 0
          DB 0,  132,128,0
          DB 0,  105,0,  0
;
;
FACE2:
          DB 0,  96, 1,  0
          DB 0,  128,0,  0
          DB 6,  0,  0,  0
          DB 12, 64, 0,  64
          DB 28, 0,  0,  0
          DB 25, 0,  0,  32
          DB 0,  0,  0,  0
          DB 52, 0,  0,  0
          DB 52, 0,  0,  32
          DB 24, 0,  0,  0
          DB 88, 0,  0,  0
          DB 88, 0,  0,  0
          DB 8,  0,  0,  0
          DB 73, 0,  6,  16
          DB 74, 48, 14, 0
          DB 11, 224,43, 81
          DB 10, 0,  145,128
          DB 6,  1,  133,0
          DB 0,  0,  0,  0
          DB 0,  0,  16, 0
          DB 0,  0,  0,  0
          DB 0,  0,  128,0
          DB 112,192,8,  0
          DB 0,  129,24, 32
          DB 64, 128,5,  32
          DB 2,  0,  0,  0
          DB 32, 0,  0,  0
          DB 112,0,  0,  0
          DB 16, 32, 32, 128
          DB 0,  32, 32, 0
          DB 24, 0,  1,  0
          DB 8,  96, 2,  0
          DB 4,  16, 0,  0
          DB 3,  40, 0,  0
          DB 1,  128,0,  0
          DB 0,  0,  24, 0
          DB 0,  0,  0,  0
          DB 0,  0,  0,  0
          DB 1,  0,  16, 0
          DB 0,  0,  96, 0
          DB 0,  244,128,0
          DB 0,  104,0,  0
          DB 0,  16, 0,  0
;
;
FACE3:
          DB 0,  0,  0,  0
          DB 0,  64, 16, 0
          DB 1,  240,0,  192
          DB 3,  192,32, 192
          DB 7,  192,0,  192
          DB 7,  128,0,  192
          DB 15, 2,  0,  96
          DB 14, 0,  0,  96
          DB 14, 0,  64, 32
          DB 6,  0,  0,  48
          DB 7,  0,  0,  48
          DB 7,  0,  2,  48
          DB 7,  0,  14, 48
          DB 6,  128,15, 48
          DB 4,  0,  29, 240
          DB 0,  16, 64, 32
          DB 15, 31, 192,0
          DB 3,  31, 224,0
          DB 3,  135,251,0
          DB 0,  192,224,0
          DB 0,  0,  64, 0
          DB 0,  16, 0,  0
          DB 0,  0,  32, 0
          DB 56, 204,70, 64
          DB 32, 14, 32, 0
          DB 36, 14, 112,192
          DB 1,  206,112,64
          DB 0,  14, 16, 0
          DB 8,  78, 0,  0
          DB 13, 206,1,  0
          DB 13, 202,35, 0
          DB 15, 3,  6,  0
          DB 7,  73, 12, 0
          DB 1,  130,8,  0
          DB 0,  112,248,0
          DB 0,  0,  224,0
          DB 0,  0,  64, 0
          DB 0,  0,  64, 0
          DB 0,  48, 64, 0
          DB 0,  24, 128,0
          DB 0,  31, 0,  0
          DB 0,  31, 0,  0
;
;
FACE4:
          DB 0,  0,  12, 0
          DB 0,  32, 1,  0
          DB 0,  192,25, 0
          DB 1,  176,1,  128
          DB 0,  64, 1,  128
          DB 0,  152,1,  128
          DB 0,  1,  2,  128
          DB 1,  0,  3,  128
          DB 1,  0,  15, 128
          DB 1,  128,15, 0
          DB 0,  128,31, 0
          DB 0,  128,29, 0
          DB 0,  128,17, 128
          DB 0,  96, 17, 0
          DB 0,  4,  32, 224
          DB 4,  7,  132,128
          DB 0,  224,12, 0
          DB 0,  224,24, 0
          DB 0,  120,192,0
          DB 0,  32, 64, 0
          DB 0,  16, 0,  0
          DB 0,  1,  0,  0
          DB 0,  0,  1,  0
          DB 0,  2,  0,  0
          DB 31, 4,  72, 192
          DB 0,  4,  8,  0
          DB 18, 0,  15, 128
          DB 9,  192,40, 128
          DB 1,  128,29, 0
          DB 7,  0,  22, 0
          DB 3,  4,  28, 0
          DB 2,  132,184,0
          DB 0,  134,56, 0
          DB 0,  68, 112,0
;
;
FACE5:
          DB 0,  0,  2,  0
          DB 0,  0,  14, 0
          DB 0,  0,  6,  0
          DB 0,  0,  30, 0
          DB 0,  48, 34, 0
          DB 0,  96, 70, 0
          DB 0,  212,13, 0
          DB 0,  192,60, 0
          DB 0,  208,48, 64
          DB 0,  120,48, 192
          DB 0,  88, 32, 192
          DB 0,  120,32, 192
          DB 0,  80, 32, 64
          DB 0,  28, 32, 192
          DB 0,  2,  64, 0
          DB 0,  0,  0,  0
          DB 0,  0,  0,  0
          DB 0,  0,  0,  0
          DB 0,  128,48, 0
          DB 0,  31, 128,0
          DB 0,  12, 128,0
          DB 0,  14, 0,  0
          DB 0,  0,  16, 0
          DB 0,  0,  32, 0
          DB 0,  0,  16, 0
          DB 24, 0,  7,  0
          DB 12, 0,  0,  0
          DB 6,  0,  5,  0
          DB 6,  0,  2,  0
          DB 0,  0,  8,  0
;
;
FACE6:
          DB 0,  0,  0,  0
          DB 0,  0,  0,  0
          DB 0,  0,  0,  0
          DB 0,  0,  0,  0
          DB 0,  0,  28, 0
          DB 0,  0,  56, 0
          DB 0,  40, 240,0
          DB 0,  56, 64, 0
          DB 0,  40, 64, 0
          DB 0,  4,  64, 0
          DB 0,  36, 64, 0
          DB 0,  4,  192,0
          DB 0,  47, 192,0
          DB 0,  2,  64, 0
          DB 0,  1,  128,0
;
;
FACE7:
          DB 0,  0,  0,  0
          DB 0,  0,  0,  0
          DB 0,  0,  0,  0
          DB 0,  0,  0,  0
          DB 0,  0,  0,  0
          DB 0,  0,  0,  0
          DB 0,  0,  0,  0
          DB 0,  7,  128,0
          DB 0,  7,  128,0
          DB 0,  3,  128,0
          DB 0,  3,  128,0
          DB 0,  3,  0,  0
          DB 0,  0,  0,  0
          DB 0,  1,  128,0

