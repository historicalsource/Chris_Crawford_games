; PASDL                 MAR 31, 1983
;
PASDL:
	JMP	PASD99
SAVE1:	DB	0
SAVE2:	DB	0
SAVE3:	DB	0
SAVE4:	DB	0
SAVE5:	DB	0
SAVE9:	DB	1,2,3,4,5,6,7,8,9
;
PDL:
	DB	$70,$70,$70,$70,$70
	DB	$70,$70,$70,$70,$70
	DB	$70,$70,$30
	DB	$47	; LMS
	DW	PTEXT
	DB	$41	; JMP AND WAIT FOR VERT BLANK
	DW	PDL
;
PTEXT:
	DB	0,0,0,0
	DB	'intermission'
	DB	0,0,0,0,0,0,0,0,0,0
;
; *** IF THE MESSAGE ON THE SCREEN
; *** IS GARBLED, IT IS BECAUSE THE
; *** DATA TO PUT ON THE SCREEN MAY
; *** BE ON THE 4K BOUNDARY
;
;
PASD99:
	LDA	DLISTH
	STA	SAVE1
	LDA	DLISTL
	STA	SAVE2
;
	LDA	CHBAS
	STA	SAVE3
	LDA	GPRIOR
	STA	SAVE4
;
	JSR	SAVCOL
	JSR	COLORS
	LDA	#PDL/256
	STA	DLISTH
	LDA	#PDL&255
	STA	DLISTL
;
	LDA	#$E0
	STA	CHBAS
	LDA	#$04
	STA	PRIOR
;
	LDA	#$0F
	STA	COLOR0
	STA	COLOR1
	STA	COLOR2
	STA	COLOR3
;
PASD00:
	LDA	CONSOL
	CMP	#5
	BNE	PASD00
;
	LDX	#32
	JSR	WAYT
PASD01:
	LDA	CONSOL
	CMP	#7
	BNE	PASD01
;
	JSR	COLORS
	LDA	SAVE1
	STA	DLISTH
	LDA	SAVE2
	STA	DLISTL
;
	LDA	SAVE3
	STA	CHBAS
	LDA	SAVE4
	STA	PRIOR
;
	JSR	RESCOL
	RTS
;
;
WAYT:
	LDY	#255
WAYT0:
	ROR	SAVE9
	ROL	SAVE9
	DEY
	BNE	WAYT0
	DEX
	BNE	WAYT
	RTS
;
;
SAVCOL:
	LDX	#8
SAVC00:
	LDA	PCOLR0,X
	STA	SAVE9,X
	DEX
	BPL	SAVC00
	RTS
;
;
RESCOL:
	LDX	#8
RESC00:
	LDA	SAVE9,X
	STA	PCOLR0,X
	DEX
	BPL	RESC00
	RTS
;
;
COLORS:
	LDA	#0
	LDX	#8
COLORZ:
	STA	PCOLR0,X
	DEX
	BPL	COLORZ
	RTS
;
;


;
; Crockford's Music Interpreter
;
; Modified for Excalibur 11/11/82
;
; Entry points:
;    INTFAN -- must be called when loaded, or to silence
;    STRFAN -- must be called to start fanfare
;    PLAFAN -- must be called every VBLANK
;
; Assumes that there exists a page zero word called STREAM.
;
AUDF: =   $D200
AUDC: =   $D201
AUDCTL: = $D208
;
;
STRFAN:
     PROC
     LDA  #$FF
     STA  MI_STATE
     LDA  #LOW :FANFARE
     STA  STREAM
     LDA  #HIGH :FANFARE
     STA  STREAM+1
     LDA  #0
     STA  MI_STATE
     RTS
;
:FANFARE:
	DB	$7d,$4,$50,$3,$15,$1a,$10
	DB	$7b,$51,$15,$1a,$10
	DB	$7a,$a2,$13,$1a,$20
	DB	$1
	DB	$b,$48
	DB	$59,$7a,$2,$17,$30
	DB	$b,$3c
	DB	$4a,$5b,$30
	DB	$53,$17,$20
	DB	$19,$f5,$1,$18
	DB	$5b,$2d,$18,$30
	DB	$1a,$3c,$15
	DB	$4,$80
     EPROC
;
BELL:
     PROC
     LDA  #$FF
     STA  MI_STATE
     LDA  #LOW :BELLS
     STA  STREAM
     LDA  #HIGH :BELLS
     STA  STREAM+1
     LDA  #0
     STA  MI_STATE
     RTS
;
:BELLS:
	DB	$7d,$4,$56,$d,$16,$40,$80
	DB	$7b,$a2,$14,$40,$80
	DB	$7a,$f3,$15,$f8,$10
	DB	$2
	DB	$52,$5,$60

	DB	$4,$80

     EPROC
;
;
;**BELLA:
;**     PROC
;**     LDA  #$FF
;**     STA  MI_STATE
;**     LDA  #LOW :BELLAS
;**     STA  STREAM
;**     LDA  #HIGH :BELLAS
;**     STA  STREAM+1
;**     LDA  #0
;**     STA  MI_STATE
;**     RTS
;**;
;**:BELLAS:
;**;##	DB	$7d,$4,$56,$d,$16,$40,$80
;**;##	DB	$7b,$a2,$14,$40,$80
;**	DB	$7a,$f3,$15,$f8,$10
;**	DB	$2
;**	DB	$52,$5,$60
;**
;**	DB	$4,$80
;**
;**     EPROC
;
;

FDIVIDE:
	;FRACTIONAL DIVIDE. THE DIVISOR IS
	;BIGGER THAN THE DIVIDEND. IF NOT,
	;RETURNS $FF
	;INPUTS: DIVDEN=DIVIDEND AND DIVSOR=
	;DIVISOR
	;OUTPUTS RESULT
	;PRESERVES X AND Y REGISTERS
	LDA	#$80
	STA	FDMASK
	LDA	#0
	STA	RESULT
FDIV02	LDA	DIVDEN
	CMP	DIVSOR		;IF DIVDED>=DIVSOR THEN
	BCC	FDIV01
	LDA	RESULT		;RESULT GETS MASKED BIT
	CLC
	ADC	FDMASK
	STA	RESULT
	LDA	DIVDEN		;& DIVDEN=DIVDEN-SHIFTED
	SEC				;DIVSOR
	SBC	DIVSOR
	STA	DIVDEN		;FI
	BEQ	FDIV03
FDIV01	LSR	DIVSOR		;SHIFT DIVISOR RT
	LSR	FDMASK		;SHIFT MASKED BIT
	BCC	FDIV02
	LDA	DIVDEN
	BEQ	FDIV03
	INC	RESULT
FDIV03	RTS
;
DIVDEN	DB	0
DIVSOR	DB	0
FDMASK	DB	0
;
;

; LOGIC.ASM            OCT 21, 1982
;
; THIS IS THE ATIFICIAL INTELLIGENCE
; OF THE GAME.  IT ALWAYS RUNS,
; INVISIBLE TO THE USER.
;
; IT CONTROLS THE HUMAN INTERFACE
; THROUGH THE VBI ROUINES THAT
; SUPPORT TE THREE GAME ENVIRONMENTS
;
; IT'S OPERATION IS TOTALLY SEPERATE
; FROM THE VBI ROUTINES HOWEVER
;
; IT PROCESSES EACH GAME PERIOD,
; HERETOFORE CALLED WEEKS, IN
; ABOUT 13 SECONDS OF REAL TIME.
;
; 32 GAME WEEKS ARE A GAME YEAR
; AFTER 20 GAME YEARS, OR 2.67
; REAL TIME HOURS, ARTHUR HAS
; A SLIGHT CHANCE OF DYING.  THE
; CHANCE INCREASES IN PROBABILITY
; EVERY GAME WEEK.  ARTHUR WILL
; NEVER MAKE IT TO 31 GAME YEARS
; OLD BEFORE DYING OF NATURAL
; CAUSES (ABOUT 3.5 TO 4 REAL HOURS)
;
; CROP GENERATION IS DONE IN TWO
; BYTE ARITHMETIC.  INCREMENTS IN
; THE HIGH BYTE ARE REFLECTED ON
; SCREEN.  AT THE NORMAL MAINTENANCE
; LEVEL (16), IT TAKES 2 HOURS
; 41 MIN. TO REACH FULL
; PROPERITY IF NO TAXES
; ARE WITHELD FROM THE PEOPLE.
; IF 1/2 THE EXCESS GROWTH IS
; WITHELD, FULL PROSPERITY IS
; REACHED IN ABOUT 2 HRS.
;
;


SETVBV	=	$E45C
XITVBV	=	$E462
GPRIOR	=	$26F
PRIOR	=	$D01B
CHBAS	=	$2F4
CONSOL	=	$D01F
PCOLR0	=	$02C0
COLOR0	=	$02C4
COLOR1	=	$02C5
COLOR2	=	$02C6
COLOR3	=	$02C7
COLOR4	=	$02C8
HPOSM0	=	$D004
HPOSM1	=	$D005
HPOSM2	=	$D006
HPOSM3	=	$D007
HPOSP0	=	$D000
HPOSP1	=	$D001
HPOSP2	=	$D002
HPOSP3	=	$D003
DLISTL	=	$0230
DLISTH	=	$0231
RANDOM	=	$D20A
RTCLKL	=	$0014
;
DIELST	=	$5E00
DIETXT	=	$6000
MAXMAG	=	$A0
MINMAG	=	$41
;
;
;
RESULT	ORG	*+1
MASK	ORG	*+1
FRAC	ORG	*+1
STRCNT	ORG	*+1
DVEND	ORG	*+4
DVSOR	ORG	*+2
MCAND	ORG	*+2
MLIER	ORG	*+2
HIPROD	ORG	*+3
STEP	ORG	*+2
BGTSAV	ORG	*+16
BGTAVE	ORG	*+1
NETWTH	ORG	*+16
STATUS	ORG	*+1
OLDTAX	ORG	*+16
ACTIT	ORG	*+1
ACNETL	ORG	*+1
ACNETH	ORG	*+1
BESTID	ORG	*+1
BESTVL	ORG	*+1
DBSTVL	ORG	*+1
DBSTID	ORG	*+1
SAVED1	ORG	*+1
SAVED2	ORG	*+1
SAVED3	ORG	*+1
SAVED4	ORG	*+1
SAVED5	ORG	*+1
SAVED6	ORG	*+1
WEEKSV	ORG	*+1
;
;
GOTOIT:
MAIN:
	LDA	#0
	STA	RTCLKL
	STA	RTCLKL-1
;
MAIN00:
	JSR	LANGIT	;## VASS ATTACK FLASH CRN
	JSR	PATCH	; TIRED OF BAD ACTCRP
	JSR	VASTRB	; NO TRIBUTE TO VASSALS
	JSR	MIRROR	; MIRROR ART'S FEELINGS
	JSR	WIN	; HAS ARTHUR WON ?
	JSR	HARVST	; CROPS
	JSR	TITHNG	; VASSAL'S
	JSR	RECORD	; REC TITHE PAYMENTS
	JSR	TAXES 	; COLLECT
	JSR	PAYOFF	; TRIBUTE, AFTER TAXES
	JSR	BANKIT	; DEPOSIT
	JSR	GROWTH	; CROP GROWTH
	JSR	BUDGET	; PAY ARMY BUDGET
	JSR	TYRANY	; SET TITHE AMOUNTS
	JSR	ARTTYR	; GET AVE TYRANY OF ART
	JSR	PREEC	; PRE ECONOMIC PROCESSING
	JSR	ECONMY	; MAKE ECON. POLICY
	JSR	POSTEC	; POST ECON PROCESSING
	JSR	DPLMAT	; DIPLOMACY - CAMPAIGN
	JSR	CHNGIT	; CHANGE KING'S HEART
	JSR	KNTAI 	; PROCESS KNIGHT REL.S
	JSR	KTRANS	; TRANSLATE REL. TO 2D
	JSR	CAMDEC	; SET UP CAMPAIGNS
	JSR	TESTIT	; IS IT TIME FOR ONE?
	JSR	VASSAL	; VASSAL DESCISION
	JSR	FORGET	; FORGET PAST PILLAGES
	JSR	KNTCNT	; COUNT ARTHUR'S KNIGHTS
	JSR	CRPNWS	; NEWS ABOUT INDEPENDENCE
	JSR	MESTRV	; MESSNGR CALLS FOR HELP
;
MAIN04:
MAIN10:
	LDA	PRESTG	; AS ARTHUR IS SUCCESSFUL
	CMP	RANDOM	; THEN SLOW DOWN MERLIN'S
	BCS	MAIN11	; REPLENISHING RATE.
	INC	MAGIC	; INC MERLIN'S MAGIC
	LDA	MAGIC 	; BUT STOP AT MAXMAG
	CLC
	ADC	#[$FF-MAXMAG]
	BNE	MAIN11
	DEC	MAGIC
;
MAIN11:
	LDX	#1	; MERLIN IS IN IF MAGIC
	LDA	MAGIC	; IS > MINMAG LEVEL
	CMP	#MINMAG	; ELSE HE'S OUT RESTING
	BCS	MAIN12
	LDX	#0
MAIN12:
	STX	MERFLG
;
	LDA	CRPSTG		; HAS ARTHUR DEFENDED
	BNE	MAIN20		; HIS KINGDOM'S HONOR ?
	JMP	REVOLT		; IF NOT, HE IS DEAD.
MAIN20:
;
;
WEEKND:
	LDA	RTCLKL-1	; INSURE 37.5 SECS
	CMP	#$03
	BEQ	WEEK01
	BCC	WEEKND
	JMP	WEEK02
;
WEEK01:
	LDA	RTCLKL
	CMP	#$40
	BEQ	WEEK02
	BCC	WEEK01
;
WEEK02:
	INC	WEEKLO
	BNE	WEEK11
	INC	WEEKHI
;
WEEK11:
	LDA	BUTT	;##
	STA	BUTT1	;##
	LDA	#$FF	;##
	JSR	MAILIT	;##
	LDA	WEEKLO	;##
	JSR	MAILIT	;##
	LDA	WEEKHI	;##
	JSR	MAILIT	;##
	JSR	POST50	;## SKIPS NEWS IF NEEDED
;
WEEK03:
	LDX	ARRIVE	; INTRODUCE NEW KNIGHTS
;## 	LDA	DATEHI,X
;## 	CMP	WEEKHI
;## 	BNE	WEEK10
	CPX	#8
	BEQ	WEEK10
	LDA	DATELO,X
	CMP	WEEKLO
	BNE	WEEK10
;
	LDA	KNTFIX,X
	ORA	#$10	; POST MESSAGE THAT KNIGHT
	STA	MAILN1	; HAS ARRIVED
	LDA	#$00
	STA	MAILVB
	LDA	#2
	STA	MAILCN
	JSR	POST
;
	LDX	ARRIVE
	LDA	KNTFIX,X
	TAX
	LDA	#1	; MAKE NON ZERO TO INTRODUCE
	STA	KNTIN,X
	INC	ARRIVE
	JSR	HONINC
;
WEEK10:
	LDA	WEEKHI
	CMP	#$02	; USE $0280 FOR 8-12 HOUR RANGE
	BEQ	WEEK04	; WITH ONLY ONE INC OF KILL
	BCS	WEEK05
	JMP	MAIN
;
WEEK04:
	LDA	WEEKLO
	CMP	#$D0
	BCS	WEEK05
	JMP	MAIN
;
WEEK05:
	INC	KILLLO	; PROBABILITY OF DYING
	BNE	WEEK06	; INCREASES EACH WEEK
	INC	KILLHI
;
WEEK06:
	INC	KILLLO	; EXPERIMENTS SHOW INC
	BNE	WEEK09	; TWICE FOR RANGE OF
	INC	KILLHI	; 9 HRS - 12
;
WEEK09:
	LDA	RANDOM
	CMP	KILLHI
	BCC	WEEK07
	JMP	MAIN
;
WEEK07:
	LDA	RANDOM
	CMP	KILLLO
	BCC	WEEK08
	JMP	MAIN
;
WEEK08:		; ARTHUR HAS DIED OF AGE
	JSR	FAROUT
	JSR	MAKLST
;
	LDA	#STR01/256
	STA	STRPTR+1
	LDA	#STR01&$FF
	STA	STRPTR
	JSR	WRTLN1
;
	LDA	#STR02/256
	STA	STRPTR+1
	LDA	#STR02&$FF
	STA	STRPTR
	JSR	WRTLN2
;
	LDA	#STR03/256
	STA	STRPTR+1
	LDA	#STR03&$FF
	STA	STRPTR
	JSR	WRTLN3
;
ENDIT:
	LDA	#$0F
	STA	COLOR1
;
	LDA	#0
	STA	RTCLKL
	STA	RTCLKL-1
;
END00:
	LDA	RTCLKL-1
	CMP	#2
	BCC	END00
	JMP	SWPEND
;
;
REVOLT:			; REVOLT IN CAMELOT
	JSR	FAROUT
	JSR	MAKLST
;
	LDA	#STRV1/256
	STA	STRPTR+1
	LDA	#STRV1&$FF
	STA	STRPTR
	JSR	WRTLN1
;
	LDA	#STRV2/256
	STA	STRPTR+1
	LDA	#STRV2&$FF
	STA	STRPTR
	JSR	WRTLN2
;
	LDA	#STRV3/256
	STA	STRPTR+1
	LDA	#STRV3&$FF
	STA	STRPTR
	JSR	WRTLN3
;
	JMP	ENDIT
;
;
FAROUT:
	LDX	#XITVBV/256	; TURN OFF VBI
	LDY	#XITVBV&$FF
	LDA	#7
	JSR	SETVBV
;
	LDA	#0
	STA	COLOR0
	STA	COLOR1
	STA	COLOR2
	STA	COLOR3
	STA	COLOR4
	STA	HPOSM0
	STA	HPOSM1
	STA	HPOSM2
	STA	HPOSM3
	STA	HPOSP0
	STA	HPOSP1
	STA	HPOSP2
	STA	HPOSP3
	RTS
;
;
;
LANGIT:
	LDA	#0		;##
	STA	LANGER		;##
	LDY	#$0F		;##
LANG01:
	LDA	LIEGE,Y		;##
	CMP	#$00		;##
	BNE	LANG90		;##
;
	LDA	DANGER,Y	;##
	BEQ	LANG90		;##
	LDA	#1		;##
	STA	LANGER		;##
;
LANG90:
	DEY			;##
	BNE	LANG01		;##
	RTS		;##
;
;
;
MIRROR:
	LDX	#$0F
MIRR00:
	JSR	MULX16
	TAY
	LDA	LNGTRM,Y
	STA	LNGTRM,X
	DEX
	BNE	MIRR00
	RTS
;
;
;
;## DATEHI:	DB	$00	; ARRIVAL TIMES FOR KNIGHTS
;## 	DB	$00
;## 	DB	$00
;## 	DB	$00
;## 	DB	$00
;## 	DB	$00
;## 	DB	$00
;## 	DB	$00
;## 	DB	$FF	; END OF LIST
;
;
DATELO:		; ARRIVAL TIMES FOR KNIGHTS
	DB	$24	;
	DB	$30	;
	DB	$40	;
	DB	$50	;
	DB	$68	;
	DB	$80	;
	DB	$A0	;
	DB	$C0	;
	DB	$FF	; END OF LIST
;
;
KNTFIX:	DB	15	; GAWAIN  (GET KNIGHT INDEX)
	DB	4	; LANCELOT
	DB	13	; PARZIVAL / DYNADAN
	DB	7	; GALAHAD
	DB	8	; MORDRED
	DB	12	; BEDIVERE
	DB	9	; TRISTAN
	DB	5	; DAGONET
;
;
;
WIN:				; IF ALL KINGS ARE VASSALS,
				; THEN ARTHUR HAS WON.
				; POST MESSAGE.
				; GAME WILL END WHEN USER READS
				; THE MESSAGE
	LDX	#$0F
WIN00:
	LDA	LIEGE,X
	CMP	#$10
	BCS	WIN80
	DEX
	BNE	WIN00
;
	LDA	#$00		; KING ARTHUR
	STA	MAILN1
	LDA	#$08		; IS KING OF ALL BRITAIN
	STA	MAILVB
	LDA	#$02
	STA	MAILCN
	JSR	POST
;
WIN80:
	RTS
;
;
;
MESTRV:				; COUNT DOWN TIMERS FOR
	LDX	#$0F		; SENDING HELP MESSAGE
MEST00:
	LDA	CAMPGN,X
	BEQ	MEST50
	LDA	DANGER,X
	BEQ	MEST50
	LDA	GEORGE,X
	BEQ	MEST50
	DEC GEORGE,X
MEST50:
	DEX
	BPL	MEST00
	RTS
;
;
;
KNTCNT:
	LDX	#$0F		; COUNT HOW MANY KNIGHTS
	LDA	#0
	STA	KCNT		; ARTHUR HAS LEFT
KNTCN0:
	LDA	KNTIN,X
	BEQ	KNTCN1
	INC	KCNT
KNTCN1:
	DEX
	BPL	KNTCN0
;
	LDA	KNTIN+11	; DISCOUNT GWENYVIERE
	BEQ	KNTCN2
	DEC	KCNT
;
KNTCN2:
	LDA	KCNT
	STA	KGKNTS
	SEC
	SBC	FLDKNT
	BCS	KNTCN3
	LDA	#0
;
KNTCN3:
	STA	HOMKNT
	RTS
;
KCNT:	DB	0
;
;
HONINC:
	INC	TOTHON		; WHEN A KNIGHT
	BNE	HONIN3		; ARRIVES, INCREMENT
	ROR	TOTHON		; THE HONOR IN THE
;				; SYSTEM BY ONE TOO
	LDX	#$0F
HONIN1:
	CPX	#11		; SKIP GWENY
	BEQ	HONIN2
	LSR	KNTHON,X
	BNE	HONIN2
	INC	KNTHON,X
HONIN2:
	DEX
	BNE	HONIN1
HONIN3:
	RTS
;
;
;
CRPNWS:
	LDX	#$0F
CRPN00:
	STX	CRPX
;
	LDY	#10		; KING X IS WEAKENING
	LDA	CRPSTG,X
	CMP	#16
	BEQ	CRPN01
;
	LDY	#11		; KING X IS FALTERING
	LDA	CRPSTG,X
	CMP	#11
	BEQ	CRPN01
;
	LDY	#12		; KING X IS DESPERATE
	LDA	CRPSTG,X
	CMP	#05
	BEQ	CRPN01
;
	LDY	#13		; KING X IS READY TO ABDICATE
	LDA	CRPSTG,X
	CMP	#02
	BNE	CRPN02
;
CRPN01:
	DEC	CRPSTG,X
	LDA	LIEGE,X
	CMP	#$10
	BCC	CRPN02
;
	STX	MAILN1
	STY	MAILVB
	LDA	#2
	STA	MAILCN
	JSR	POST
;
CRPN02:
	LDX	CRPX
	DEX
	BNE	CRPN00
	RTS
;
CRPX:	DB	0

;
;
;
POST:
	LDA	BUTT
	STA	BUTT1
;
	LDA	MAILN1
	JSR	MAILKN
	INC	BUTT1
	DEC	MAILCN
;
	LDA	MAILVB
	JSR	MAIL
	INC	BUTT1
	DEC	MAILCN
	BEQ	POST50
;
	LDA	MAILN2
	JSR	MAILKN
	INC	BUTT1
	DEC	MAILCN
;
POST50:
	LDA	BUTT
	SEC
	SBC	HEAD
	CMP	#$C0
	BCC	POST70
	CMP	#$C5
	BCS	POST55
	LDA	WEEKLO
	CMP	WEEKSV
	BEQ	POST70
	STA	WEEKSV
	JSR	BELL
	JMP	POST70
;
POST55:
	CMP	#$F0
	BCC	POST70
;
	LDA	WEEKLO
	CMP	WEEKSV
	BEQ	POST56
	STA	WEEKSV
	JSR	STRFAN		; SKIP OVER OLDEST NEWS
POST56:
;##	LDA	HEAD
;##	STA	HEAD1
	LDX	HEAD	;## SKIP OVER THE
	STX	HEAD1	;## WEEKS AGO MESSAGE
	LDA	QUEUE,X	;##
	CMP	#$FF	;##
	BNE	POST58	;##
	INC	HEAD1	;##
	INC	HEAD1	;##
	JMP	POST60	;##
;
POST58:
	INC	HEAD1
	LDY	HEAD1
	LDX	QUEUE,Y
	INC	HEAD1
	LDA	SKPTAB,X
	BEQ	POST60
	INC	HEAD1
;
POST60:
	LDA	HEAD1		; VIRTUAL VBI MAY HAVE
	SEC			; HAPPENED IN THE LAST 50
	SBC	HEAD		; MICROSECONDS, AND HE MAY
	CMP	#4		; READ LOTS OF NEWS.  CHECK
	BCS	POST70		; & MAKE SURE
	LDA	HEAD1
	STA	HEAD		; VVBI MUST HIT RIGHT HERE
				; TO CAUSE FLAW, CHANCE < SLIGHT
;
POST70:
	LDA	BUTT1
	STA	BUTT
	RTS
;
;
SKPTAB:			; MESSAGE LENGTHS
	DB	0	; 0 = SINGLE NOUN
	DB	1	; 1 = DOUBLE NOUN
	DB	1
	DB	1
	DB	1
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0

;
;
MAILKN:
	AND	#$1F
	CMP	#$10		; IS HE A KING ?
	BCS	MAIL
	TAX			; CHECK FOR VASSAL TITLE
	LDY	LIEGE,X
	CPY	#$10
	BCS	MAIL
	LDY	MAILVB		; IF VASSALIZING MESS,
	CPY	#$04		; THEN TITLE = KING
	BEQ	MAIL
	AND	#$0F
	ORA	#$20
MAIL:
	LDX	BUTT1
	STA	QUEUE,X
	RTS
;
;
MAILIT:
	LDX	BUTT1
	STA	QUEUE,X
	INC	BUTT1
	RTS
;
;
WRTLN1:
	LDA	#[DIETXT+87]/256
	STA	PADPTR+1
	LDA	#[DIETXT+87]&$FF
	STA	PADPTR
	JMP	WRITE
;
WRTLN2:
	LDA	#[DIETXT+[34*40]+12]/256
	STA	PADPTR+1
	LDA	#[DIETXT+[34*40]+12]&$FF
	STA	PADPTR
	JMP	WRITE
;
WRTLN3:
	LDA	#[DIETXT+[66*40]+12]/256
	STA	PADPTR+1
	LDA	#[DIETXT+[66*40]+12]&$FF
	STA	PADPTR
;
WRITE:
	LDA	#40
	STA	LINLEN
	LDA	#0
	STA	STRCNT
	LDX	#5
WRITE3:
	LDY	STRCNT
	INC	STRCNT
	LDA	(STRPTR),Y
	CMP	#$FF
	BNE	WRITE1
	RTS
;
WRITE1:
	CMP	#' '
	BNE	WRITE2
	INX
	INX
	INX
	INX
	INX
	INX
	JMP	WRITE3
;
WRITE2:
	JSR	CALIG
	JMP	WRITE3
;
;
STR01:	DB	'Arthur has',$FF
STR02:	DB	'died of',$FF
STR03:	DB	'old age',$FF
STRV1:	DB	'Camelot revolts',$FF
STRV2:	DB	'Arthur has',$FF
STRV3:	DB	'been ousted',$FF
;
;
CLRTXT:
;## 	LDA	#$00
;## 	LDX	#$00
;## CLR01:
;## 	STA	[DIETXT],X
;## 	STA	[DIETXT+256*01],X
;## 	STA	[DIETXT+256*02],X
;## 	STA	[DIETXT+256*03],X
;## 	STA	[DIETXT+256*04],X
;## 	STA	[DIETXT+256*05],X
;## 	STA	[DIETXT+256*06],X
;## 	STA	[DIETXT+256*07],X
;## 	STA	[DIETXT+256*08],X
;## 	STA	[DIETXT+256*09],X
;## 	STA	[DIETXT+256*10],X
;## 	STA	[DIETXT+256*11],X
;## 	STA	[DIETXT+256*12],X
;## 	STA	[DIETXT+256*13],X
;## 	STA	[DIETXT+256*14],X
;## 	STA	[DIETXT+256*15],X
;## 	STA	[DIETXT+256*16],X
;## 	STA	[DIETXT+256*17],X
;## 	STA	[DIETXT+256*18],X
;## 	STA	[DIETXT+256*19],X
;## 	STA	[DIETXT+256*20],X
;## 	STA	[DIETXT+256*21],X
;## 	STA	[DIETXT+256*22],X
;## 	STA	[DIETXT+256*23],X
;## 	STA	[DIETXT+256*24],X
;## 	STA	[DIETXT+256*25],X
;## 	STA	[DIETXT+256*26],X
;## 	STA	[DIETXT+256*27],X
;## 	STA	[DIETXT+256*28],X
;## 	STA	[DIETXT+256*29],X
;## 	STA	[DIETXT+256*30],X
;## 	STA	[DIETXT+256*31],X
;## 	STA	[DIETXT+256*32],X
;## 	INX
;## 	BNE	CLR01
;## 	RTS

	LDY	#33
	LDA	#[DIETXT/256]
	STA	CLRN99+2
CLRT00:
	JSR	CLRNXT
	LDA	CLRN99+2
	CLC
	ADC	#1
	STA	CLRN99+2
	DEY
	BNE	CLRT00
	RTS
;
;
CLRNXT:
	LDA	#0
	TAX
CLRN99:
	STA	[DIETXT],X
	INX
	BNE	CLRN99
	RTS
;
;
MAKLST:
	LDA	#DIELST/256
	STA	STRPTR+1
	LDA	#DIELST&$FF
	STA	STRPTR
;
	LDY	#0
	LDX	#0
	LDA	#$70
	STA	(STRPTR),Y
	INY
	STA	(STRPTR),Y
	INY
	STA	(STRPTR),Y
	INY
;
	LDA	#$4F
	STA	(STRPTR),Y
	INY
	LDA	#DIETXT&$FF
	STA	(STRPTR),Y
	INY
	LDA	#DIETXT/256
	STA	(STRPTR),Y
	INY
	INX
;
	LDA	#$0F
MAK00:
	STA	(STRPTR),Y
	INY
	INX
	CPX	#100
	BNE	MAK00
;
	;	LDA	#$4F
	;	STA	(STRPTR),Y
	;	INY
	;	LDA	#[DIETXT+[100*40]]&$FF
	;	STA	(STRPTR),Y
	;	INY
	;	LDA	#[DIETXT+[100*40]]/256
	;	STA	(STRPTR),Y
	;	INY
	;	INX
;
	;	LDA	#$0F
MAK01:
	;	STA	(STRPTR),Y
	;	INY
	;	INX
	;	CPX	#192
	;	BNE	MAK01
;
	LDA	#$41
	STA	(STRPTR),Y
	INY
	LDA	#DIELST&$FF
	STA	(STRPTR),Y
	INY
	LDA	#DIELST/256
	STA	(STRPTR),Y
;
	LDA	#DIELST/256
	STA	DLISTH
	LDA	#DIELST&$FF
	STA	DLISTL
;
	JSR	CLRTXT
	LDA	#40
	STA	LINLEN
	RTS
;
;

; ECON.ASM                JUNE 83
;
;
VASTRB:				; NO TRIBUTE PAID TO
	STY	VASTY		; VASSALS
	LDX	#$0F
VASTR0:
	STX	VASTX
	LDY	TRBTOR,X
	CPY	#$10
	BCS	VASTR9
	LDA	LIEGE,Y
	CMP	#$10
	BCS	VASTR9
;
	LDA	#0
	STA	TRIBUT,X
	STA	TRBCNT,X
;
	LDA	TRBTOR,X
	JSR	UNDOIT
;
	LDA	#$10
	STA	TRBTOR,X
;
VASTR9:
	LDX	VASTX
	DEX
	BPL	VASTR0
	LDY	VASTY
	RTS
;
VASTX:	DB	0
VASTY:	DB	0
;
;
;
PATCH:
	LDX	#$0F		; MAKE SURE THAT NO ONE
PATCH0:				; BLEW IT
	LDA	ACTCRP,X
	CMP	#32		; ACTCRP CAN'T BE < 32
	BCS	PATCH1
	LDA	#32
	STA	ACTCRP,X
PATCH1:
	DEX
	BPL	PATCH0
;
	LDX	#$0F
PATCH2:
	LDA	CRPSTG,X	; CRPSTG CAN'T BE > $80
	CMP	#$80
	BCC	PATCH3
	LDA	#0
	STA	CRPSTG,X
PATCH3:
	DEX
	BPL	PATCH2
;
	LDA	#0		; ## WHO IS NUMBER 1?
	STA	NUMONE		; ## biased against Art
	LDA	PRESTG
	STA	PRESHI
	LDX	#$0F
;
PATCH4:
	LDA	PRESTG,X
	CMP	PRESHI
	BCC	PATCH5
	STA	PRESHI
	STX	NUMONE
	
;
PATCH5:
	DEX
	BPL	PATCH4
	RTS
;
;
HARVST:
	; THIS WILL HARVEST CROPS AND
	; MULTIPLYING MAINTENANCE LEVEL
	; THUS DETERMINING EXCESS WEALTH
;
	LDX	#$0F
HARV00:
	STX	HARX
	LDA	ACTCRP,X
	LDY	MAINT,X
	STY	FRAC
	JSR	NEWFRC		; PERFORMS FRAC. MULT.
;
	LDX	HARX
	STA	EXCESS,X
	LDA	#0
	STA	NETWTH,X	; CLEAR ACCUM.S
	LDX	HARX
	DEX
	BPL	HARV00
	RTS
;
HARX:	DB	0
;
;
FRCT1B:
	; A    = 1 BYTE TO BE REDUCED
	; FRAC = FRACTION TO USE
	; RETURNS RESULT IN A
;
	STX	FRCX
	STY	FRCY
;
	LDY	FRAC
	CPY	#$FF
	BNE	FRCT01
	LDY	FRCY
	RTS
;
FRCT01:
	STA	SAVA
	LDA	#$80
	STA	MASK
	LDA	#0
	STA	RESULT
;
FRCT03:
	LSR	SAVA
	LDA	MASK
	BIT	FRAC
	BEQ	FRCT02
	LDA	SAVA
	CLC
	ADC	RESULT
	STA	RESULT
FRCT02:
	LSR	MASK
	BCC	FRCT03
	LDA	RESULT
	LDX	FRCX
	LDY	FRCY
	RTS
;
FRCX:	DB	0
FRCY:	DB	0
;
;
;
NEWFRC:
	STX	FRCX
	STY	FRCY
;
	LDY	FRAC
	CPY	#$FF
	BNE	NEWF00
	LDY	FRCY
	RTS
;
NEWF00:
	STA	SAVA
	LDA	#$80
	STA	MASK
	LDA	#0
	STA	RESULT
	STA	NFCNT
;
NEWF02:
	LDA	MASK
	BIT	FRAC
	BEQ	NEWF06
;
	LDY	NFCNT
	LDA	NEWTAB,Y
	CLC
	ADC	SAVA
	STA	SHIFTA
;
NEWF04:
	LSR	SHIFTA
	DEY
	BPL	NEWF04
;
	LDA	SHIFTA
	CLC
	ADC	RESULT
	STA	RESULT
;
NEWF06:
	INC	NFCNT
	CLC
	LSR	MASK
	BCC	NEWF02
;
	LDA	RESULT
	LDX	FRCX
	LDY	FRCY
	RTS
;
SHIFTA:	DB	0
NFCNT:	DB	0
NEWTAB:	DB	$00,$02,$06,$0C,$14,$1E,$2A,$40,$58
;
;
;
TAXES:
	; THIS WILL SUBTRACT KINGS TAXES
	; FROM EXCESS & ADD IT TO BANK
;
	LDX	#$0F
TAX02:
	STX	TAXX
	LDA	EXCESS,X
	CMP	TAX,X
	BCC	TAX00
	SEC
	SBC	TAX,X
	STA	EXCESS,X
	LDA	TAX,X
	JMP	TAX01
;
TAX00:
	LDA	EXCESS,X
	PHA
	LDA	#0
	STA	EXCESS,X
	PLA
;
TAX01:
	STA	TAXREC,X
	CLC
	ADC	NETWTH,X
	BCC	TAX03
	CLC
	ADC	#$01
	JSR	ADDBNK
	LDA	#$FF
;
TAX03:
	LDX	TAXX
	STA	NETWTH,X
;
	LDX	TAXX
	DEX
	BPL	TAX02
	RTS
;
TAXX:	DB	0
;
;
;
BANKIT:
	LDX	#$0F		; DEPOSIT INCOME IN BANK
BANK00:
	STX	BANKX
	LDA	NETWTH,X
	JSR	ADDBNK
	LDX	BANKX
	DEX
	BPL	BANK00
	RTS
;
BANKX:	DB	0
;
;
;
ADDBNK:
	CLC
	ADC	BANK,X
	STA	BANK,X
	LDA	BANK+16,X
	ADC	#0
	STA	BANK+16,X
	RTS
;
;
GROWTH:
	; FRACTIONAL CROPS ARE ADDED UP
	; ACTUAL CROPS INCREMENTED AT ROLL OVER
;
	LDX	#$0F
GROWT0:
	STX	GROWX
	JSR	GROW
	LDX	GROWX
	DEX
	BPL	GROWT0
	RTS
;
GROWX:	DB	0
;
GROW:
	LDA	EXCESS,X
	CLC
	ADC	ACCUM,X
	STA	ACCUM,X
	BCS	GROW00
	RTS
;
GROW00:
	LDA	ACTCRP,X
	BMI	GROW01
	INC	ACTCRP,X	; BIG MAP WILL REFLECT
	INC	ACTCRP,X	; CHANGE AUTOMATICALLY
	RTS
;
GROW01:				; WHEN FULL,DECREASE MAINT
	LDA	MAINT,X
	CMP	#$FF
	BEQ	GROW02
	INC	MAINT,X		; (INCREASE LEFTOVERS)
GROW02:	RTS
;
;
PAUSE:
	CLC			; PAUSE FOR UP TO 4 SECS
	ADC	RTCLKL
PAUSE0:
	CMP	RTCLKL
	BNE	PAUSE0
	RTS
;
;    
TITHNG:
		; THIS PAYS OFF TITHING REQUESTED
	LDY	#$0F
TITHZZ:
	STY	TITY
	JSR	TITHIT
	LDY	TITY
	DEY
	BPL	TITHZZ
	RTS
;
TITY:	DB	0
;
TITHIT:
	LDA	LIEGE,Y
	CMP	#$10
	BCC	TITH00
	RTS
;
TITH00:
	TAX
	LDA	EXCESS,Y
	CMP	TITBGT,Y
	BCC	TITH02
	LDA	TITBGT,Y
;
TITH02:
	STA	TITGAV,Y
	JMP	PAY02
;
;
PAYOFF:
		; THIS PAYS OFF TRIBUTE REQUESTED
	LDY	#$0F
PAYZZ:
	STY	PAYY
	JSR	PAYIT
	LDY	PAYY
	DEY
	BPL	PAYZZ
	RTS
;
PAYY:	DB	0
;
PAYIT:
	LDA	TRBTOR,Y
	CMP	#$10
	BCC	PAY00
	RTS
;
PAY00:
	LDA	TRBCNT,Y
	BNE	PAY01
	RTS
;
PAY01:
	LDA	TRBTOR,Y
	TAX
	LDA	EXCESS,Y
	CMP	TRIBUT,Y
	BCC	PAY02
;
	LDA	TRIBUT,Y
PAY02:
	STA	SAVA
	CLC
	ADC	NETWTH,X
	BCC	PAY03
	CLC
	ADC	#$01
	JSR	ADDBNK
	LDA	#$FF
;
PAY03:
	STA	NETWTH,X
	LDA	EXCESS,Y
	SEC
	SBC	SAVA
	STA	EXCESS,Y
	RTS
;
;
RECORD:
	LDX	#$0F
REC00:
	LDA	NETWTH,X
	STA	DEMREC,X
	LDA	#$00
	STA	DEMAND,X
	DEX
	BPL	REC00
;
	LDX	#$0F
REC01:
	LDY	LIEGE,X
	CPY	#$10
	BCS	REC02
	LDA	TITBGT,X
	CLC
	ADC	DEMAND,Y
	STA	DEMAND,Y
;
REC02:
	DEX
	BPL	REC01
	RTS
;
;
BUDGET:
		; THIS TAKES ARMY BUDGET FROM BANK
		; (IF THERE IS ENOUGH), AND 
		; TURNS IT INTO MEN AND CHECKS
		; FOR LOSS OF EXPERIENCE
		; CURRENT RATIO OF MEN TO COIN IS
		; ONE TO ONE
;
	STY	BUDY
	LDX	#$0F
BUDG00:
	STX	BUDX
	JSR	SAVARM
	JSR	PAYARM
	JSR	REDMAA
	JSR	INCMAA
	JSR	ADDEXP
	LDX	BUDX
	DEX
	BPL	BUDG00
	LDY	BUDY
	RTS
;
BUDX:	DB	0
BUDY:	DB	0
;
SAVARM:
	LDA	BANK+16,X
	BNE	SAVAR0
	LDA	BANK,X
	CMP	ARMBGT,X
	BCS	SAVAR0
	STA	BGTSAV,X
	RTS
;
SAVAR0:
	LDA	ARMBGT,X
	STA	BGTSAV,X
	RTS
;
;
PAYARM:
	LDA	BANK,X		; SUBTRACT BUDGET
	SEC
	SBC	BGTSAV,X
	STA	BANK,X
	LDA	BANK+16,X
	SBC	#$00
	STA	BANK+16,X
	RTS
;
;
REDMAA:
			; X HAS INDEX OF KING
			; BGTSAV,X HAS REDUCED SIZE
;
	STX	UPDX
	STY	UPDY
;
	LDA	BGTSAV,X
	CMP	ARMSIZ,X
	BEQ	REDOUT
	BCC	REDMA0
REDOUT:	RTS
;
REDMA0:
	LDA	ARMSIZ,X	; THE ARMY IS SMALLER
	STA	DVSOR
	LDA	#$00
	STA	DVSOR+1
	LDA	ARMEXP+16,X
	STA	DVEND+1
	LDA	ARMEXP,X
	STA	DVEND+0
	TXA
	PHA
	JSR	UDIV		; HOW MUCH EXP PRE MAN ?
	PLA
	TAX
;
	LDA	ARMSIZ,X	; HOW MANY MEN LOST ?
	SEC
	SBC	ARMBGT,X
	STA	MLIER+0
	LDA	#0
	STA	MLIER+1
;
	LDA	DVEND+0
	STA	MCAND+0
	LDA	DVEND+1
	STA	MCAND+1
	TXA
	PHA
	JSR	UMULT		; HOW MUCH TOT EXP LOST ?
	PLA
	TAX
;
	LDA	ARMEXP,X	; SUBTRACT EXP.
	SEC
	SBC	MLIER+0
	STA	ARMEXP,X
	LDA	ARMEXP+16,X
	SBC	MLIER+1
	BCS	REDMA1
	LDA	#$00
	STA	ARMEXP,X
REDMA1:
	STA	ARMEXP+16,X
;
	LDA	BGTSAV,X	; DECREASE SIZE OF ARMY
	STA	ARMSIZ,X
	JMP	UPDMAA
;
;
INCMAA:
			; X HAS INDEX OF ARMY TO INCREASE
			; BGTSAV,X HAS NEW SIZE
;
	STX	UPDX
	STY	UPDY
;
	LDA	BGTSAV,X
	CMP	ARMSIZ,X
	BEQ	UPDMAA
	BCS	INCMA0
INCOUT:	RTS
;
INCMA0:
	LDA	#32
	STA	FRAC		; 1/8 GROWTH PER WEEK
	LDA	BGTSAV,X	; ARMY IS BIGGER
	SEC
	SBC	ARMSIZ,X
	JSR	FRCT1B
	CLC
	ADC	ARMSIZ,X
	STA	ARMSIZ,X
	INC	ARMSIZ,X
;
UPDMAA:
	LDA	ARMSIZ,X
	SEC
	SBC	FLDARM,X
	BCS	UPDOUT
;
	LDA	ARMSIZ,X
	STA	FLDARM,X
	LDA	#0
;
UPDOUT:
	STA	HOMARM,X
	LDX	UPDX
	LDY	UPDY
	RTS
;
UPDX:	DB	0
UPDY:	DB	0
;
;
ADDEXP:
	LDA	ARMSIZ,X
	CLC			; ARMY IS MORE EXPERIENCED
	ADC	ARMEXP,X
	STA	ARMEXP,X
	LDA	ARMEXP+16,X
	ADC	#0
	STA	ARMEXP+16,X
	BCC	ADDE01
;
	LDA	#$FF		; DON'T ALLOW ROLL OVER
	STA	ARMEXP,X
	STA	ARMEXP+16,X
ADDE01:	RTS
;
;
TYRANY:		; DECIDING TITHING FOR VASSALS
	STY	TYRY
	LDX	#$0F
TYRN00:
	STX	TYRX
	JSR	TYRNIT
	LDX	TYRX
	DEX
	BPL	TYRN00
	LDY	TYRY
	RTS
;
TYRX:	DB	0
TYRY:	DB	0
;
TYRNIT:
	LDA	LIEGE,X	; DO NOT PROCESS
	BNE	TYRN01		; ARTHUR'S VASSALS
	RTS
;
TYRN01:
	CMP	#$10
	BCC	TYRN02
	RTS
;
TYRN02:
				; CHANGE VALUES IN TYRANT(16)
				; DEPENDENT ON HOW GREEDY THEY R
				; BUT PRESERVE ACCUM FOR NXT PART
;
	TAY
	LDA	TYRANT,Y
	STA	FRAC
	LDA	NETWTH,X
	CLC
	ADC	TITBGT,X
	CLC
	ADC	EXCESS,X
	STA	SAVA
	JSR	FRCT1B
	STA	TITBGT,X
	RTS
;
;
;
PREEC:		; PRE-ECONOMIC PROCESSING
		; WE HAVE FOUND THAT BANKS GET
		; TOO LARGE.  NORMAL ADJUSTMENTS
		; DON'T DO THE JOB, SO WE FEED THE
		; WEALTH BANK TO THE PEOPLE.
		; IT IS DONE OUTSIDE OF ECONMY
		; AND DOESN'T ALLOW ECONMY TO SEE
		; SEE IT.  (SEE POSTEC ALSO)
;
	LDX	#$0F
PREE0:
	LDA	LIEGE,X	; DON'T DO ART'S VASSALS
	BEQ	PREE1
;
	LDA	BNKRAT,X
	CLC
	ADC	TAX,X
	STA	TAX,X
;
	LDA	BNKRAT,X
	CLC
	ADC	TAXREC,X
	STA	RATBNK,X
;
	LDA	#0
	STA	BNKRAT,X
;
PREE1:
	DEX
	BNE	PREE0		; DON'T DO ARTHUR !!
	RTS
;
;
;
ECONMY:		; DECIDE TAXES AND BUDGE5
		; FOR NEXT WEEK
		; ASSUMES THAT TRIBUTE MUST COME FROM
		; WEEKLY CROP REVENUES AFTER MAINTANENCE
		; CAN NOT HAVE NEG. CASH FLOW FROM
		; THE BANK FOR TRIBUTE, ONLY FOR THE
		; ARMY BUDGET
;
	JSR	GETAVE		; AVE ARMY BUDGET
;
	LDX	#1
ECON01:
	STX	ECONX
	LDA	LIEGE,X		; DO NOT PROCESS
	BNE	ECON04		; ARTHUR'S VASSALS
	JMP	ECON05
;
ECON04:
;**	LDA	#0
;**	STA	AMBAVE
;**	STA	COWAVE
	JSR	AMBWT		; WEIGHT FOR AMBITION
;**	JSR	COWWT		; WEIGHT FOR COWARDICE
	LDX	ECONX
;
;**	LDA	BGTAVE		; ADD ON AMBITION WEIGHT
;**	CLC
;**	ADC	AMBAVE
;**	BCC	ECON21
;**	LDA	#$FF
;**	JMP	ECON22
;
ECON21:
;**	CLC			; ADD ON COWARDICE WEIGHT
;**	ADC	COWAVE
;**	BCC	ECON22
;**	LDA	#$FF
;
ECON22:
;**	STA	ECOAVE		; IF = THEN DO NOTHING
	LDX	ECONX
	CMP	ARMBGT,X
	BNE	ECON25
	JMP	ECON05
;
ECON25:
	BCS	ECON23		; BUDGET BIG OR SMALL
;
	LDX	ECONX
	LDA	ARMBGT,X	; MY BUDGET IS TOO BIG
	SEC
	SBC	ECOAVE
	STA	SAVA
;
	LDX	ECONX
	LDA	MONGER,X	; SUBTRACT DIFF FROM 
	SEC			; MONGER TO COLLECT LESS TAX
	SBC	SAVA
	CMP	#$40		; ALWAYS COLLECT >= 1/4
	BCS	ECON24
	LDA	#$40
	JMP	ECON24
;
ECON23:				; MY BUDGET IS TOO SMALL
	LDX	ECONX
	SEC			; FIND OUT HOW MUCH UNDER AVE.
	SBC	ARMBGT,X	; AND THEN ADD THIS TO
	CLC			; MONGER FRACTION TO COLLECT
	ADC	MONGER,X	; MORE TAXES
	CMP	#$C0
	BCC	ECON24		; ALWAYS COLLECT <= 3/4
	LDA	#$C0
ECON24:
	LDX	ECONX
	STA	MONGER,X
;
	STA	FRAC		; CALCULATE WHAT TAX
	LDA	NETWTH,X	; YOU WOULD LIKE
	CLC
	ADC	EXCESS,X
	BCC	ECON26
	LDA	#$FF
	JMP	ECON28
;
ECON26:
	CLC
	LDX	ECONX
	ADC	TRIBUT,X
	BCC	ECON28
	LDA	#$FF
ECON28:
	JSR	FRCT1B
	STA	SAVA
;
	LDX	ECONX
	LDA	RATBNK,X	; BUT DON'T GO OVER
	CMP	OLDTAX,X	; WHAT IS ACTUALLY
	BEQ	ECON15		; THERE, ELSE NEG CASH
	STA	SAVA		; FLOW FOREVER
	JMP	ECON16
;
ECON15:
	LDX	ECONX
	LDA	TAX,X		; SET TAX AMOUNTS
ECON16:
	LDX	ECONX
	STA	OLDTAX,X
	LDA	SAVA
	STA	TAX,X
	CMP	#6
	BCS	ECON10
	LDA	#6
	STA	TAX,X
;
ECON10:
	JSR	FIGBNK
	CMP	#4		; 16 THEN INC IT SLOWLY
	BCC	ECON02
ECON07:
	LDX	ECONX
	LDA	#$FF	; ** TEST CODE ***
	SEC
	SBC	SAVRAT,X
	LSR	A
	LSR	A
	LSR	A
	CLC
	ADC	SAVRAT,X
	STA	SAVRAT,X
	INC	SAVRAT,X
	LDA	SAVRAT,X
	BNE	ECON06
	LDA	#$FF
	STA	SAVRAT,X
	JMP	ECON06		; ** DEBOUNCE BUDGET ***
;
ECON02:
	LDX	ECONX
	LDA	#4		; SUBTRACT THE RATIO FROM
	SEC			; 16 AND MULTIPLY BY 8
	SBC	DVEND+0		; THEN SUBTR FROM 255
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	EOR	#$FF		; THE EQUATION IS:
	STA	SAVRAT,X	; 256-((16-(BANK/ARMY))*8)
;
ECON06:
	STA	FRAC
	LDX	ECONX
	LDA	TAX,X
	JSR	FRCT1B
	STA	SAVA		; THE BUDGET CAN ONLY
	LDX	ECONX
	CMP	ARMBGT,X	; GO DOWN IF THE TAX
	BCS	ECON13		; RATE WENT DOWN
	LDA	TAX,X
	CMP	OLDTAX,X
	BCS	ECON05
	LDA	SAVA
;
ECON13:
	LDX	ECONX
	STA	ARMBGT,X
	CMP	#129
	BCC	ECON30
	LDA	#128
	STA	ARMBGT,X
	JMP	ECON05
;
ECON30:
	CMP	#4
	BCS	ECON05
	LDA	#4
	LDX	ECONX
	STA	ARMBGT,X
;
ECON05:
	JSR	FIGBNK
;
	LDX	ECONX
	INX
	CPX	#16
	BEQ	ECON08
	JMP	ECON01
;
ECON08:
	RTS
;
ECONX:	DB	0
ECOAVE:	DB	0
;
;
;
FIGBNK:
	LDX	ECONX
	LDA	ARMSIZ,X	; GET RATIO OF BANK
	STA	DVSOR+0		; SAVINGS TO ARMY SIZE
	LDA	#0
	STA	DVSOR+1
	LDA	BANK,X
	STA	DVEND+0
	LDA	BANK+16,X
	STA	DVEND+1
	JSR	UDIV
	LDX	ECONX
;
	LDA	DVEND+0		; IF THE RATIO IS OVER
	STA	BNKRAT,X
	RTS
;
;
;
POSTEC:		; POST ECONOMIC PROCESSING
		; WE HAVE FOUND THAT BANKS GET
		; TOO LARGE.  NORMAL ADJUSTMENTS
		; DON'T DO THE JOB, SO WE FEED THE
		; WEALTH BANK TO THE PEOPLE.
		; IT IS DONE OUTSIDE OF ECONMY
		; AND DOESN'T ALLOW ECONMY TO SEE
		; SEE IT.  (SEE PREEC ALSO)
;
	LDX	#$0F
POSTE0:
	LDA	BNKRAT,X
	SEC
	SBC	#5
	BCS	POSTE1
	LDA	#0
POSTE1:
	STA	BNKRAT,X
	DEX
	BNE	POSTE0		; DON'T DO ARTHUR !!
;
	LDX	#$0F
POSTE2:
	LDA	LIEGE,X	; DON'T DO ARTHUR'S
	BEQ	POSTE4		; VASSALS
;
	LDA	TAX,X
	CMP	BNKRAT,X
	BCS	POSTE3
	STA	BNKRAT,X
;
POSTE3:
	SEC
	SBC	BNKRAT,X
	STA	TAX,X
;
POSTE4:
	DEX
	BNE	POSTE2		; DON'T DO ARTHUR !!!
	RTS
;
;
;
CHNGIT:
	LDX	#$0F
CHNG00:
	LDA	CHGKNG,X
	BEQ	CHNG01
;
	SEC
	SBC	#$02
	STA	CHGKNG,X
	BCS	CHNG01
;
	LDA	#0
	STA	CHGKNG,X
;
CHNG01:
	DEX
	BPL	CHNG00
;
	LDX	#$0F
CHNG02:
	STX	CHNGX
	LDA	TRBCNT,X
	BEQ	CHNG03
;
	DEC	TRBCNT,X
	BNE	CHNG03
;
	LDA	#0
	STA	TRIBUT,X
	LDY	TRBTOR,X
	LDA	#$10
	STA	TRBTOR,X
	JSR	MAKNUE
;
CHNG03:
	LDX	CHNGX
	DEX
	BNE	CHNG02
	RTS
;
CHNGX:	DB	0
;
;
GETAVE:
	LDY	#0
	STY	BGTSAV
	STY	BGTAVE
;
	LDX	#$0F
GETAV0:
	LDA	LIEGE,X
	CMP	#$10
	BCC	GETAV2
	INY
	LDA	ARMBGT,X
	CLC
	ADC	BGTAVE
	STA	BGTAVE
;
	LDA	BGTSAV
	ADC	#0
	STA	BGTSAV
;
GETAV2:	DEX
	BPL	GETAV0
;
	LDA	BGTAVE
	STA	DVEND+0
	LDA	BGTSAV
	STA	DVEND+1
	STY	DVSOR+0
	LDA	#0
	STA	DVSOR+1
	JSR	UDIV
	LDA	DVEND+0
	STA	BGTAVE
	RTS
;
GETA:	DB	0
;
;
;
AMBWT:
				; CREATE ECOAVE WEIGTHED BY AMBITION ONLY
	LDX	ECONX
	LDA	AMBITN,X
	CLC
	ADC	CRPSTG,X
	STA	FRAC
	LDA	#$20
	JSR	FRCT1B
	STA	AMBSAV
;
	LDA	BGTAVE
	SEC
	SBC	#$10
	BCS	AMBWT1
	LDA	#$00
;
AMBWT1:
	CMP	#$08
	BCS	AMBWT3
	LDA	#$08
;
AMBWT3:
	STA	ECOAVE
	CLC
	ADC	AMBSAV
	BCC	AMBWT2
	LDA	#$FF
;
AMBWT2:
	STA	ECOAVE
	LDA	ECONX		; REL TO ARTHUR
	ASL	A		; ADD ON HOW THEY FEEL
	ASL	A		; TIMES 1/8 ARTHUR'S BUDGET
	ASL	A		; SO IF THEY HATE ARTHUR AND
	ASL	A		; ARTY GETS BIG, SO WILL THEY
	TAX
	LDA	LNGTRM,X
;
	LDX	ECONX	; ARTHUR CAN SOFTEN
	CLC			; THEIR HEART
	ADC	CHGKNG,X
	BCC	AMBWT6
	LDA	#$FF
	JMP	AMBWT4
;
AMBWT6:
	LDX	TRBTOR
	CPX	ECONX
	BNE	AMBWT4
	CLC
	ADC	TRIBUT
	BCC	AMBWT4
	LDA	#$FF
;
AMBWT4:
	EOR	#$FF		; TAKE INVERSE FOR MULTIPL
	STA	FRAC
	LDA	ARMBGT
	LSR	A
	LSR	A
	LSR	A
	JSR	FRCT1B
	CLC
	ADC	ECOAVE
	BCC	AMBWT5
	LDA	#$FF
;
AMBWT5:
	STA	ECOAVE
	LDX	ECONX
	RTS
;
AMBSAV:	DB	0
;
;
;----------------------------------
;**	LDX	#0
;**	STX	BGTSAV
;**	STX	AMBAVE
;
;**	LDA	ECONX
;**	ASL	A
;**	ASL	A
;**	ASL	A
;**	ASL	A
;**	ORA	#$0F
;**	STA	AMBX
;
;**	LDY	#$0F
; AMBWT0:
;**	STY	AMBY
;
;**	LDX	AMBX
;**	LDA	LNGTRM,X
;**	EOR	#$FF
;**	STA	FRAC
;**	LDY	AMBY
;**	LDA	ARMBGT,Y
;**	JSR	FRCTIT
;**	CLC			; MULTIPLY BY TWO FOR SCALE
;**	ASL	A		; ABSOLUTE LOVE = 0  &
;**	BCC	AMBWT4		; ABSOLUTE HATE + LOW
;**	LDA	#$FF		; AMBITION = LOW VALUE
;
; AMBWT4:
;**	CLC
;**	ADC	AMBAVE
;**	STA	AMBAVE
;
;**	LDA	BGTSAV
;**	ADC	#0
;**	STA	BGTSAV
;
;**	DEC	AMBX
;**	LDY	AMBY
;**	DEY
;**	BPL	AMBWT0
;
;**	LDX	#4
; AMBWT1:
;**	CLC
;**	ROR	BGTSAV
;**	ROR	AMBAVE
;**	DEX
;**	BNE	AMBWT1
;
;**	LDX	ECONX
;**	LDA	AMBITN,X
;**	CLC
;**	ADC	#$00
;**	BCC	AMBWT2
;**	LDA	#$FF
; AMBWT2:
;**	STA	FRAC
;**	LDA	AMBAVE
;**	JSR	FRCTIT
;**	STA	AMBAVE
;**	BEQ	AMBWT3
;
;**	DEC	AMBAVE
;**	LDX	ECONX
;**	LDA	AMBITN,X
;**	BMI	AMBWT3
;**	DEC	AMBAVE
; AMBWT3:
;**	RTS
;
;** AMBX:	DB	0
;** AMBY:	DB	0
;** AMBAVE:	DB	0
;
;
;** COWWT:
;**	LDX	#0
;**	STX	BGTSAV
;**	STX	COWAVE
;
;**	LDA	ECONX
;**	AND	#$0F
;**	ORA	#$F0
;**	STA	COWX
;
;**	LDY	#$0F
; COWWT0:
;**	STY	COWY
;
;**	LDX	COWX
;**	LDA	LNGTRM,X
;**	EOR	#$FF
;**	STA	FRAC
;**	LDA	ARMBGT,Y
;**	JSR	FRCTIT
;
;**	CLC
;**	ADC	COWAVE
;**	STA	COWAVE
;
;**	LDA	BGTSAV
;**	ADC	#0
;**	STA	BGTSAV
;
;**	LDA	COWX
;**	SEC
;**	SBC	#$10
;**	STA	COWX
;
;**	LDY	COWY
;**	DEY
;**	BPL	COWWT0
;
;**	LDX	#4
; COWWT1:
;**	CLC
;**	ROR	BGTSAV
;**	ROR	COWAVE
;**	DEX
;**	BNE	COWWT1
;
;**	LDX	ECONX
;**	LDA	COWARD,X
;**	SEC
;**	SBC	#$20
;**	BCS	COWWT2
;**	LDA	#$00
; COWWT2:
;**	STA	FRAC
;**	LDA	COWAVE
;**	JSR	FRCTIT
;**	STA	COWAVE
;**	RTS
;
;** COWX:	DB	0
;** COWY:	DB	0
;** COWAVE:	DB	0
;
;
;
FRCTIT:				; ROUND UP ON SMALL VALS
	STX	FRCTX
	STA	FRCTA		; WHEN FRAC. MULTIPLIED
	CMP	#$10
	BCS	FRCTT1
	TAX
	LDA	FRCTAB,X
	CLC
	ADC	FRAC
	STA	FRAC
	BCC	FRCTT1
	LDA	#$FF
	STA	FRAC
;
FRCTT1:
	LDA	FRCTA
	JSR	FRCT1B
	LDX	FRCTX
	RTS
;
FRCTA:	DB	0
FRCTX:	DB	0
;
FRCTAB:
	DB	$FF
	DB	$F4
	DB	$F0
	DB	$E8
	DB	$DC
	DB	$D0
	DB	$B8
	DB	$98
	DB	$74
	DB	$40
	DB	$28
	DB	$20
	DB	$18
	DB	$10
	DB	$0C
	DB	$08
	DB	$04
;
;
;
UDIV:
		; DIVIDES A 16 BIT NUMBERS
		; ENTRY: DVEND = DIVIDEND (LO,HI)
		;        DVSOR = DIVISOR (LO, HI)
		; EXIT:  DVEND = QUOTIENT
		;        DVEND+2 = REMAINDER
		; THIS ROUTINE WAS TAKEN FROM
		; PAGE 245 OF LEVANTHOL
		; NO REGISTERS WERE PRESERVED
;
	STX	UDX
	STY	UDY
;
	LDA	#0
	STA	DVEND+3
	STA	DVEND+2
;
	LDA	DVSOR	; TEST FOR DIV BY ZERO
	ORA	DVSOR+1
	BNE	OKUDIV
	SEC		; SET ERROR FLAG
	RTS
;
OKUDIV:	LDX	#16
DIVLP:	ROL	DVEND	; SHIFT THE CARRY
	ROL	DVEND+1
	ROL	DVEND+2
	ROL	DVEND+3
;
CHKLT:	SEC
	LDA	DVEND+2
	SBC	DVSOR
	TAY		; SAVE LOW BYTE
	LDA	DVEND+3	;
	SBC	DVSOR+1	;SUBTRACT HI BYTES
	BCC	DECCNT	;IF DIV<DVSOR, BRANCH
	STY	DVEND+2	;ELSE DIV=DIV-DVSR
	STA	DVEND+3
;
DECCNT:	DEX
	BNE	DIVLP
;
	ROL	DVEND
	ROL	DVEND+1
;
	LDX	UDX
	LDY	UDY
	CLC		; CLEAR ERROR FLAG
	RTS
;
UDX:	DB	0
UDY:	DB	0
;
;
;
UMULT:
		; MULTIPLIES 16 BIT NUMBERS
		; ENTRY : MCAND = MULTIPLICAND (LO,HI)
		;         MLIER = MULTIPLIER (LO,HI)
		; EXIT  : MLIER = PRODUCT (HI,LO)
		; THIS ROUTINE TAKE FROM PAGE 238
		; OF LEVANTHOL
		; NO REGISTERS ARE PRESERVED
;
	STX	UMX
	STY	UMY
;
	LDA	#0
	STA	HIPROD
	STA	HIPROD+1
	LDX	#17	; # OF BITS IN MULTIPLIER +1
			; LAST LOOP TO PUSH LAST CARRY
	CLC		; CLEAR CARRY 1ST TIME IN LOOP
MULLP:
	ROR	HIPROD+1	; IF NEXT BIT=1 THEN,
	ROR	HIPROD		; HPRD = HPRD + MCAND
	ROR	MLIER+1
	ROR	MLIER
	BCC	DCCNT		; BRANCH IF NXT BIT=0
;
	CLC
	LDA	MCAND
	ADC	HIPROD
	STA	HIPROD
	LDA	HIPROD+1
	ADC	MCAND+1
	STA	HIPROD+1	; CARRY = OVERFOLW
;
DCCNT:
	DEX
	BNE	MULLP
;
	LDX	UMX
	LDY	UMY
	RTS
;
UMX:	DB	0
UMY:	DB	0
;
;
;
; LOGSUB.ASM               MAR 9 83
;
; CONTAINS SUBROUTINES NECESSARY TO
; THE INTELLIGENCE OF THE PROGRAM
;
MAKNUE:
		; X & Y ARE NUETRALS
	LDA	#$40
	JMP	MAKEIT
;
;
MAKENE:
		; X & Y ARE ENEMIES
	LDA	#$80
;
MAKEIT:
	STA	STATUS
	STX	SX4
	STY	SY4
	JSR	DOX2Y
	JSR	PRE4N
	JSR	DOY2X
	JMP	PRE4N
;
SX4	DB	0
SY4	DB	0
SA4	DB	0
;
;
MAKTRB:
		; X MADE TRIBUTARY TO Y
		; Y MADE NUETRAL TO X
		; A HAS TRIBUTE AMOUNT
		; IF X IS A VASSAL, THEN OUT !
		; TRBTOR SET UP
	STX	SX4
	STY	SY4
	STA	SA4
;
	LDA	TRBCNT,X
	BNE	MAKTR1
;
	LDA	LIEGE,X		; IF VASSL, NO CHANGE !
	CMP	#$10
	BCS	MAKTR0
MAKTR1:
	LDA	SA4
	JMP	PRE4N
;
MAKTR0:
	LDA	#8
	STA	TRBCNT,X
;
	LDA	SA4
	BEQ	MAKTR1
	STA	TRIBUT,X	; SET UP TRIBUT ECON.
	LDA	SY4
	STA	TRBTOR,X
;
	LDA	#$20		; X IS MADE TRIBUTEE
	JSR	PRE4
	JSR	DOX2Y
;
	LDA	#$40		; Y IS MADE TRIBUTOR
	JSR	PRE4
	JSR	DOY2X
;
	LDA	SY4
	BNE	MAKTR2
;
	LDA	SX4		; POST MAIL THAT A
	STA	MAILN1		; KING OFFERS TRIBUTE
	LDA	#14		; TO ARTHUR
	STA	MAILVB
	LDA	#2
	STA	MAILCN
	JSR	POST
;
MAKTR2:
	LDA	SA4
	JMP	PRE4N
;
;
PRE4:
	STA	STATUS
PRE4N:
	LDX	SX4
	LDY	SY4
	RTS
;
;
MAKVAS:
		; X IS MADE A VASSAL TO Y
		; Y IS MADE NUETRAL TO X
		; A HAS TITHE AMOUNT
		; TRIBUTE BY X IS UNDONE
		; LIEGE IS SET UP
		; MAIL IS POSTED
;
	CPX	#0		; ARTHUR CAN NOT VASSALIZE
	BNE	MAKVA6
	RTS
;
MAKVA6:
	STX	SX5
	STY	SY5
	STA	SXX
;
	LDA	LIEGE,Y		; CAN NOT VASSALIZE TO
	CMP	#$10		; A VASSAL - USE HIS LIEGE
	BCS	MAKVA5
	STA	SY5
	TAY
;
MAKVA5:
	LDA	LIEGE,X		; CANT RE-VASSALIZE
	CMP	#$10
	BCS	MAKVA3
	JSR	UNDOIT
;
MAKVA3:
	LDX	SX5
	LDA	SXX
	STA	TITBGT,X
;
	LDA	SY5
	STA	LIEGE,X	; SET UP ECON
;
	LDA	TRBCNT,X
	BEQ	MAKVA0
	LDA	#0		; UNDO TRIBUTE STATUS
	STA	TRIBUT,X	; IF ANY
	STA	TRBCNT,X
;
	LDA	TRBTOR,X
	CMP	#$10
	BCS	MAKVA0
	JSR	UNDOIT
	LDA	#$10		;
	STA	TRBTOR,X
;
MAKVA0:
	LDA	#40		; A VASSAL HAS LOW AMBITION
	LDX	SX5
	STA	AMBITN,X
;
	LDA	#$10		; X IS VASSL TO Y
	JSR	PRE5
	JSR	DOX2Y
;
	LDA	#$40		; Y IS NUETRL TO X
	JSR	PRE5
	JSR	DOY2X
;
	LDX	#$0F
MAKVA1:
	STX	SXX
	LDA	LIEGE,X
	CMP	SX5
	BNE	MAKVA2
;
	LDX	SXX
	LDY	SX5
	JSR	MAKNUE		; UNDO OLD LIEGE
	LDX	SXX
	LDY	SY5
	LDA	TITBGT,X
	JSR	MAKBAS		; SET UP NEW LIEGE
;
MAKVA2:
	LDX	SXX
	DEX
	BNE	MAKVA1
;
	;## 	LDX	SX5		; TRANSFER PRESTIGE FROM
	;## 	LDY	SY5		; VASSAL TO LIEGE
	JSR	PRE5N
	LDA	PRESTG,X
	CLC
	ADC	PRESTG,Y
	STA	PRESTG,Y
	BCC	MAKVA4
	LDA	#$FF
	STA	PRESTG,Y
MAKVA4:
	LDA	#0
	STA	PRESTG,X
	STA	CRPSTG,X
;
	LDA	SX5		; POST 1ST NAME
	STA	MAILN1
	LDA	#$04		; VASSAL MESSAGE
	STA	MAILVB
	LDA	SY5		; POST 2ND NAME
	STA	MAILN2
	LDA	#3
	STA	MAILCN
	JSR	POST
;
	LDY	SX5		; VASSALS CAN NOT CAMPAGN
	JSR	CAMST1		; SO STOP IF ON ONE
;
	JMP	PRE5N
;
SX5	DB	0
SY5	DB	0
SXX	DB	0
ZZZA	DB	0
ZZZB	DB	0
;
;
UNDOIT:
	STX	UNDX
	STY	UNDY
;
	STA	ZZZB
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	STA	ZZZA
	TXA
	CLC
	ADC	ZZZA
	TAY
	LDA	#$40
	STA	KNGSTS,Y
;
	JSR	MULX16
	CLC
	ADC	ZZZB
	TAY
	LDA	#$40
	STA	KNGSTS,Y
;
	LDX	UNDX
	LDY	UNDY
	RTS
;
UNDX:	DB	0
UNDY:	DB	0
;
;
;
MAKBAS:
		; REDUNDANT COPY TO AVOID
		; RECURSIVE CODE
;
		; X IS MADE A VASSAL TO Y
		; Y IS MADE NUETRAL TO X
		; A HAS TITHE AMOUNT
		; TRIBUTE BY X IS UNDONE
		; LIEGE IS SET UP
;
	STX	SX6
	STY	SY6
	STA	TITBGT,X
;
	TYA
	STA	LIEGE,X	; SET UP ECON
;
MAKBA0:
	LDA	#$10		; X IS VASSAL TO Y
	JSR	PRE6
	JSR	DOX2Y
;
	LDA	#$40		; Y IS NUETRAL TO X
	JSR	PRE6
	JSR	DOY2X
;
	JMP	PRE6N
;
SX6	DB	0
SY6	DB	0
;
;
PRE5:
	STA	STATUS
PRE5N:
	LDX	SX5
	LDY	SY5
	RTS
;
;
PRE6:
	STA	STATUS
PRE6N:
	LDX	SX6
	LDY	SY6
	RTS
;
;
DOY2X:
	STX	SX9
	STY	SY9
	JSR	MULX16
	CLC
	ADC	SY9
	JMP	DOSTAT
;
;
DOX2Y
	STX	SX9
	STY	SY9
	JSR	MULY16
	CLC
	ADC	SX9
;
DOSTAT:
	TAX
	LDA	KNGSTS,X
	AND	#$0F
	ORA	STATUS
	STA	KNGSTS,X
	LDX	SX9
	LDY	SY9
	RTS
;
SX9	DB	0
SY9	DB	0
;
;
MULX16:
	TXA
	JMP	MULBTH
;
MULY16:
	TYA
MULBTH:
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	RTS
;
;
CAMDEC:
	LDY	#$0F
CAMDZZ:	LDA	RETRET,Y	; CAN NOT CAMPAIGN
	BNE	CAMDYY		; UNLESS FULLY RETREATED
	STY	CAMY
	JSR	CAMDXX
	LDY	CAMY
CAMDYY:	DEY
	BNE	CAMDZZ		; ARTHUR DECIDES HIMSELF
	RTS
;
CAMY:	DB	0
;
CAMDXX:
		; CAMPGN IS FLAG TO TRY, SET BY
		; DIPLOMACY AI ROUTINE
		; CARRY SET MEANS GREEN LIGHT
		; Y IS INDEX OF CAMPAIGNER
		; TARGIT,Y IS WHO TO HIT
		; IF TARGIT,Y > $0F THEN NO GO
		; SETS DANGER FLAG FOR TARGIT
		; SETS AGRSSR FLAG FOR TARGIT
		; DOES NOT ALLOW DUAL CAMPAIGN
		; MAKES ENEMY STATUS
		; SETS UP DIST IN ADVNCE COUNTER
		; SETS UP DIST IN RETRET COUNTER
		; POSTS MAIL
		; SETS BRNCNT,Y TO ZERO, CROP COUNTER
;
	LDA	CAMPGN,Y	; DESIROUS ?
	BNE	CAMDE0
	CLC
	RTS
;
CAMDE0:
	LDX	TARGIT,Y	; CHECK FOR LEGAL VALUE
	STX	SAVX
	STY	SAVY
	CPX	#$10
	BCS	CAMDE3
;
CAMDE1:
	LDA	DANGER,X	; DO NOT ALLOW 2 AGRSSR
	BEQ	CAMDE2		; PER DEFENDER; 1 ON 1
CAMDE3:
	LDA	#0
	LDY	SAVY
	STA	CAMPGN,Y
	CLC
	RTS
;
CAMDE2:
	LDX	SAVX
	LDY	SAVY
;
	LDA	#0		; DEFENDER CAN NOT
	STA	TRIBUT,X	; PAY TRIBUTE TO
	STA	TRBCNT,X	; ANYONE WHILE UNDER
	LDY	TRBTOR,X	; ATTACK
	CPY	#$10
	BCS	CAMDE5
;
	LDA	#$10
	STA	TRBTOR,X
	JSR	MAKNUE
;
CAMDE5:
	LDY	SAVY		; IF ATTACKING THE KING
	LDX	TRBTOR,Y	; THAT YOU ARE PAYING
	CPX	SAVX		; TRIBUTE, THEN STOP
	BEQ	CAMDE7		; PAYING IT.
;
CAMDE6:
	LDX	SAVX
	LDY	SAVY
	LDA	LIEGE,X		; IF ATTACKING A
	CMP	#$10		; VASSAL WHOSE LIEGE IS
	BCS	CAMDE8		; YOUR TRIBTOR, THEN
	CMP	TRBTOR,Y	; STOP PAYING TRIBUTE
	BNE	CAMDE8
	TAX
;
CAMDE7:
	LDA	#0
	STA	TRIBUT,Y
	STA	TRBCNT,Y
	LDA	#$10
	STA	TRBTOR,Y
	JSR	MAKNUE
;
CAMDE8:
	LDX	SAVX
	LDY	SAVY
;
	LDA	#1
	STA	DANGER,X
	TYA
	STA	AGRSSR,X
	JSR	MAKENE
;
	LDX	SAVX
	LDY	SAVY
	LDA	#0
	STA	BRNCNT,Y
;
	JSR	MULY16		; GET DISTANCE BETWEEN
	CLC			; KINGS AND PUT INTO TRAVEL
	ADC	SAVX		; COUNTERS
	TAX
	LDA	DIST,X
	STA	ADVNCE,Y
	STA	RETRET,Y
;
	TAX
	LDA	FLDFRC,X
	STA	HAIRY,Y		; GET FIELD ARMY %
	STA	FRAC
	LDA	ARMSIZ,Y
	JSR	FRCT1B
	LDY	SAVY
	STA	FLDARM,Y
	LDA	ARMSIZ,Y
	SEC
	SBC	FLDARM,Y
	STA	HOMARM,Y
;
	LDA	KGKNTS,Y	; GET SAME % OF KNIGHTS
	JSR	FRCT1B
	LDX	SAVY
	STA	FLDKNT,X
	CMP	KGKNTS,X
	BNE	CAMDE9
	DEC	FLDKNT,X
;
CAMDE9:
	LDA	KGKNTS,X
	SEC
	SBC	FLDKNT,X
	STA	HOMKNT,X
;
				; POST MESSAGE THAT
				; KING Y CAMPAIGNS ON X
	LDA	SAVY
	STA	MAILN1
	LDA	#$03		; CAMPAIGN VERB
	STA	MAILVB
	LDA	SAVX
	STA	MAILN2
	LDA	#3
	STA	MAILCN
	JSR	POST
;
	LDX	SAVX		; IS THE KING BEING 
	LDA	CAMPGN,X	; ATTACKED ON A CAMPGN?
	BEQ	CAMDE4		; 
	LDA	RETRET,X	; IS HE STLL OUT THERE?
	BEQ	CAMDE4
	SEC			; RETRET - ADVANCE IS HOW FAR
	SBC	ADVNCE,X	; MESSAGE HAS TO TRAVEL
	LSR	A		; TRAVEL 2 * FASTER
	STA	GEORGE,X
	CPY	#0
	BNE	CAMDE4
	LSR	A		; ART'S MESS GO 4 * FASTER
	STA	GEORGE
;
CAMDE4:
	LDX	SAVX
	LDY	SAVY
	SEC
	RTS
;
;
TESTIT:
	LDY	#$0F
TESTZZ:
	STY	SAVY
	JSR	TESTYY
	LDY	SAVY
	DEY
	BNE	TESTZZ		; Y .NE. 0 BECASE ARTHUR
	RTS			; STARTS HIS OWN CAMPAIGNS
;
TESTYY:
	LDA	ADVNCE,Y	; NOT ON A CAMPAIGN ?
	CMP	#$FF		; $FF MEANS NOT ON ONE
	BNE	TEST01
;
	LDA	RETRET,Y	; COMING BACK FROM ONE?
	BEQ	TEST00
	LDX	SAVY
	DEC	RETRET,X	; 1 STEP CLOSER
	BNE	TEST00		; DID HE JUST ARRIVE ?
;
	LDA	PILCAR,Y	; IF SO, COLLECT THE
	CLC			; PILAGE INTO THE BANK
	ADC	BANK,Y
	STA	BANK,Y
	LDA	PILCAR+16,Y
	ADC	BANK+16,Y
	STA	BANK+16,Y
;
	LDA	LIEGE,Y
	CMP	#$10
	BCC	TEST06
	TYA			; POST MAIL THAT
	STA	MAILN1		; CAMPAIGN IS OVER
				; AS A SUCESS
	LDY	SAVY
	LDA	PILCAR,Y	; BECAUSE THE PILLAGE
	ORA	PILCAR+16,Y	; RETAINED. ( <>0 )
	BEQ	TEST05
;
	LDA	#$06
	STA	MAILVB
	LDA	TARGSV,Y
	STA	MAILN2
	LDA	#3
	JMP	TEST07

TEST05:
	LDA	#05		; OR AS A FAILURE ( = 0 )
	STA	MAILVB
	LDA	#2
;
TEST07:
	STA	MAILCN
	JSR	POST
TEST06:
;
	LDY	SAVY
	LDA	#0		; THEN CLEAR PILLAGE COUNTER
	STA	PILCAR,Y	; AND FIELD ARMIES
	STA	PILCAR+16,Y
	STA	FLDARM,Y
	STA	FLDKNT,Y
	STA	CAMPGN,Y	; CAMPAIGN IS OVER !!!
;
	LDA	KGKNTS,Y	; RESTORE HOME TO FULL
	STA	HOMKNT,Y
	LDA	ARMSIZ,Y
	STA	HOMARM,Y
;
TEST00:	RTS
;
TEST01:
	LDY	SAVY
	LDA	ADVNCE,Y	; HAS HE REACHED IT?
	BNE	TEST02
	JMP	BURNIT		; ZERO MEANS HE IS THERE
;
TEST02:
	LDX	SAVY
	DEC	ADVNCE,X	; THEN TAKE 1 STEP
	JSR	ADVCHK		; SAFE TO GO ON ?
	LDY	SAVY
	RTS
;
;
CAMST2:
	LDA	RETRET,Y
	SEC
	SBC	ADVNCE,Y
	STA	RETRET,Y
	BCS	CAMST1
	LDA	#0
	STA	RETRET,Y
;
CAMST1:
	STX	CAMSTX
	STY	CAMSTY
	LDX	TARGIT,Y
	CPX	#$10
	BCS	CAMST5
;
CAMSTP:
	JSR	CAMST4
;
	LDA	LIEGE,Y
	CMP	#$10
	BCC	CAMST9
	TYA			; POST MESSAGE THAT
	STA	MAILN1		; KING Y RETREATS
	LDA	#$07
	STA	MAILVB
	LDA	#2
	STA	MAILCN
	JSR	POST
;
CAMST9:
	LDY	CAMSTY
	RTS
;
;
;
CAMST3:
	STX	CAMSTX
	STY	CAMSTY
	LDX	TARGIT,Y	; STOP CAMPAIGN
	CPX	#$10		; WITH NO NEWS
	BCC	CAMST4
;
CAMST5:
	LDA	#$FF
	STA	ADVNCE,Y
	LDX	CAMSTX
	LDY	CAMSTY
	RTS
;
CAMST4:
	STY	CAMSTY
	LDA	#0
	STA	DANGER,X
	STA	BURNT,X
;
	LDA	#$13
	STA	AGRSSR,X
	STA	TARGIT,Y
;
	LDA	#$FF
	STA	ADVNCE,Y
	LDY	CAMSTY
	RTS
;
CAMSTY:	DB	0
CAMSTX:	DB	0
;
;
;
BURNIT:
		; Y BURNS 2 CROPS OF X
		; CROPS BURNT IN LISTED ORDER
		; DEFENDER DECIDES TO FIGHT
		; IF DEFNDER WINS, CAMPAGN IS OVER
		; BURNT FLAG SET FOR TRAP ROOM
		; AGRSSR MAY DECIDE TO STOP
;
	LDA	BRNCNT,Y	; CAN ONLY BURN 16
	CMP	#$10		; CROPS PER CAMPAIGN
	BCC	BURN09
	JMP	CAMST1
;
BURN09:
	LDX	TARGIT,Y
	STX	SAVX
	STY	SAVY
;
	LDA	BRNCNT,Y	; HE MUST BURN AT LEAST
	BEQ	BURN08		; 1 CROP FOR HAVING
				; MARCHED ALL THAT WAY
;
	STX	DEFNDR
	STY	ATACKR
	JSR	BATSIM
;
	LDX	SAVX		; IF ATACKR WILL NOT WIN,
	LDY	SAVY		; THEN DON'T BURN THE CROP
	LDA	WINNER		; & GO HOME.
	CMP	ATACKR
	BEQ	BURN08
	JSR	CAMSTP
	LDX	SAVX
	LDY	SAVY
	RTS
;
BURN08:
	LDA	BRNCNT,Y
	CLC
	ADC	#1
	STA	BRNCNT,Y
;
	LDA	ACTCRP,X
	CMP	#33
	BCS	BURN06
	LDX	#0
	JMP	BURN07
;
BURN06:
	DEC	ACTCRP,X	; DELETE 2 CROPS
	DEC	ACTCRP,X
	DEC	OUTCRP,X
	DEC	OUTCRP,X
;
	JSR	MULX16		; BURN THE CROP
	CLC
	ADC	BRNCNT,Y
	STA	SAVA
	TAX
;
	LDA	CRPTYP,X
	CMP	#$88
	BEQ	BURN01
	DEC	CRPTYP,X
BURN01:
	SEC
	SBC	#$88
	TAX
;
BURN07:
	LDA	PILAGE,X
	CLC
	ADC	PILCAR,Y
	STA	PILCAR,Y
	LDA	PILCAR+16,Y
	ADC	#0
	STA	PILCAR+16,Y
;
	TXA
	STA	SAVA
	LDX	SAVX
	JSR	MULX16
	CLC
	ADC	SAVY
	TAX
	ASL	SAVA
	LDA	SAVA
	CLC
	ADC	#1
	ADC	HISTRY,X
	STA	HISTRY,X
	BCC	BURN05
	LDA	#$FF
	STA	HISTRY,X
;
BURN05:
	LDX	SAVX
	LDA	VBIENV
	CMP	#1		; IN CAMELOT?
	BEQ	BURN02
	CMP	#8		; IN VASSAL CASTLE?
	BEQ	BURN03
	JMP	BURN04
;
PILAGE:	DB	1,8,16,24
;
BURN02:
	CPX	#0
	BNE	BURN04
	LDA	#1		; TELL VBI IT WAS BURNT
	STA	BURNT
	RTS
;
BURN03:
	CPX	CASTLE
	BNE	BURN04
	LDA	#1
	STA	BURNT,X
	RTS
;
BURN04:
DEFDEC:
	LDX	SAVX
	LDY	SAVY
;
DEFDE0:
	LDX	SAVX		; IF NO ONE IS HOME,
	LDA	HOMARM,X	; THEN CONCEDE
	BEQ	DEFDEZ
;
	LSR	PEASNT
	LDA	VICLOS
	CLC
	ADC	PEASNT
	BCC	DEFDEV
	LDA	#$FF
DEFDEV:
	SEC
	SBC	LOSLOS
	BCS	DEFDEW
	LDA	#0
DEFDEW:
	CMP	#3
	BCS	DEFDE1
;
DEFDEZ:
	LDX	SAVX
	STX	TURKEY
	STX	DEFNDR
	LDY	SAVY
	STY	WINNER
	STY	ATACKR
;
	LDA	PEASNT
	STA	LOSSES
	LDA	ATACKR
	STA	INDEX
	JSR	FIGLOS
;
	LDY	ATACKR
	LDA	FLDARM,Y
	SEC
	SBC	LOSSES
	BCS	DEFDEY
	LDA	#0
DEFDEY:
	STA	FLDARM,Y
;
	LDA	ARMSIZ,Y
	SEC
	SBC	LOSSES
	BCS	DEFDEX
	LDA	#0
DEFDEX:
	STA	ARMSIZ,Y
;
	LDX	DEFNDR
	LDA	CRPSTG,X
	BEQ	DEF4
	DEC	CRPSTG,X
	JMP	DEFDE2
;
DEFDE1:
	JSR	BATTLE		; SIMULATE BATTLE GAME
;
DEF4:
	LDX	TURKEY		; GET TURKEY'S INDEX
	LDA	LIEGE,X		; TRANSFER PRESTGE FROM
	CMP	#$10		; TURKEY TO WINNER
	BCS	DEF0		; REMEMBER THAT VASSALS
	TAX			; CAN NOT HAVE PRESTIGE, SO
	LDA	PRESTG,X	; IF VASSALS ARE 
	LSR	A		; INVOLVED, GO INDIRECT TO
	JMP	DEF1		; LIEGE.  TAKE 1/4 OF
				; PRESTIGE. IF TURKEY IS VASSAL,
DEF0:				; TAKE 1/8 OF LIEGE'S
	LDA	PRESTG,X	; PRESTIGE
DEF1:	LSR	A
	LSR	A
	STA	SAVA
	LDA	PRESTG,X
	SEC
	SBC	SAVA
	STA	PRESTG,X
;
	LDX	WINNER
	LDA	LIEGE,X
	CMP	#$10
	BCS	DEF2
	TAX
DEF2:	LDA	SAVA
	CLC
	ADC	PRESTG,X
	STA	PRESTG,X
;

	LDX	SAVX
	LDY	SAVY
	LDA	WINNER
	CMP	ATACKR
	BEQ	DEFDE2
;
	LDA	PILCAR,Y	; ATACKER LOST !
	CLC			; GIVE PILAGE TO DEFENDER
	ADC	BANK,X		; AND STOP CAMPAIGN
	STA	BANK,X
	LDA	PILCAR+16,Y
	ADC	BANK+16,X
	STA	BANK+16,X
;
	LDA	#0
	STA	PILCAR,Y
	STA	PILCAR+16,Y
;
	LDA	LIEGE,Y
	CMP	#$10
	BCC	DEF3
	TXA			; POST MESSAGE THAT
	STA	MAILN1		; KING DEFNDR
	LDA	#$01		; REPULSES
	STA	MAILVB		; KING ATACKR
	LDA	SAVY
	STA	MAILN2
	LDA	#3
	STA	MAILCN
	JSR	POST
DEF3:
	LDY	SAVY
	JSR	CAMST3		; NO TURN BACK MESSAGE
	LDY	SAVY
	RTS
;
DEFDE2:
	LDA	BRNCNT,Y	; DID I BURN THE
	CMP	#$0F		; LAST CROP ?
	BEQ	CMPAR1		; IF SO, STOP CAMPAGN
;
	LDX	DEFNDR
	LDA	LIEGE,X
	CMP	#$10
	BCS	DEFDE6
	LDA	#1
	STA	REVAS,X
	JSR	BADLEG
;
DEFDE6:
	LDX	SAVX
	LDY	SAVY
	LDA	DANGER,Y	; AM I IN DANGER
	BNE	DEFDE3		; AT HOME BASE ?
	RTS
;
DEFDE3:
	LDA	GEORGE,Y	; DID MESSENGER ARRIVE
	BEQ	DEFDE5		; WITH NEWS OF DANGER ?
	RTS
;
DEFDE5:
	LDA	AGRSSR,Y	; IF IN DANGER, CAN
	TAX			; I GET BACK IN TIME ?
	LDA	ADVNCE,X
	SEC			; GIVE 1 WEEK LEE WAY
	SBC	#1		; TO GIVE PLENTY OF TIME
	CMP	RETRET,Y
	BCS	DEFDE4
	RTS
;
DEFDE4:
	JMP	ADVCH1
;
;
CMPARM:
	LDA	ACTCRP,Y	; IF I DON'T HAVE TIME
	LSR	A		; TO STICK AROUND, THEN
	LSR	A		; ADD 1/8 OF CROPS (PEASANTS)
	LSR	A		; PLUS MAA AT HOME TO
	CLC			; SEE IF BIG ENOUGH
	ADC	ARMSIZ,Y
	SEC
	SBC	FLDARM,Y
	SEC
	SBC	FLDARM,X
	BCC	CMPAR0
	RTS			; HOME IS BIG ENOUGH
;
CMPAR0:
	EOR	#$FF		; DECIDE TO TURN BACK?
	CLC			; TAKE 16*DIFF IN ARMSIZE
	ADC	#1		; ADD 64 SO MIN PROBAB.
	ASL	A		; IS 1/4
	ASL	A
	ASL	A
	ASL	A
	CLC			; IF AGRESSOR	HAS 4 MORE MAA
	ADC	#64		; THE 50% CHANCE OF RETURN
	BCS	CMPAR1		; IF AGRESSOR HAS >= 12
	CMP	RANDOM		; THEN MUST RETURN HOME
	BCS	CMPAR1
	RTS
;
CMPAR1:
	JMP	CAMST2		; STOP THE CAMPAIGN
;
;
;
BADLEG:
	LDX	DEFNDR		; GET INDEX OF VASSAL -
	TXA			; LIEGE RELATIONSHIP
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	CLC
	ADC	LIEGE,X
	TAY
;
	LDA	LNGTRM,Y	; DECREASES VASSAL -
	SEC			; LIEGE RELATIONSHIP
	SBC	#2
	BCS	BADL00
	LDA	#0
BADL00:
	STA	LNGTRM,Y
	RTS
;
;
;
ADVCHK:
	LDY	SAVY
	LDA	TARGIT,Y	; IF YOUR TARGIT HAS
	TAX			; BECOME YOUR VASSAL, THEN
	LDA	LIEGE,X		; TURN AROUND AND
	STA	SAVA		; GO HOME !
	CPY	SAVA
	BNE	ADVCH2
	JMP	CAMST2
;
ADVCH2:
	LDA	DANGER,Y	; IS CAMPNR IN DANGER?
	BNE	ADVCH0
	RTS
;
ADVCH0:
	LDA	GEORGE,Y	; DID MESSENGER ARRIVE
	BEQ	ADVCH3		; WITH NEWS OF DANGER ?
	RTS
;
ADVCH3:
	LDA	AGRSSR,Y	; WHO IS HIS AGRSSR?
	TAX
;
	LDA	ADVNCE,Y	; ENOUGH TIME TO
	CLC			; GET BACK ?
	ADC	RETRET,Y
	CLC
	ADC	#2
	CMP	ADVNCE,X
	BCS	ADVCH1
	RTS
;
ADVCH1:
	JSR	CMPARM
	LDY	SAVY
	RTS
;
;
BATTLE:
;  ********************************
;  **                            **
;  **  IT SHOULD DO EVERY-       **
;  **  THING THE BATTLE GAME     **
;  **  DOES EXCEPT THE TRANSFER  **
;  **  OF PRESTIGE.              **
;  **                            **
;  ********************************
;
	LDA	#0
	STA	VICKNT
	STA	LOSKNT
;
	LDX	SAVX
	LDY	SAVY
	STX	DEFNDR
	STY	ATACKR
	JSR	BATSIM
	LDX	WINNER
	LDY	TURKEY
;
	LDA	WINNER
	CMP	ATACKR
	BEQ	BATT05
	JMP	BATT80
;
BATT05:
	LDA	VICLOS		; DETERMINE HOW MANY
	CMP	#2		; FIELD KNIGHTS DIE
	BCC	BATT15
;
	LDX	WINNER
	LDA	FLDARM,X
	JSR	VICCLC
;
BATT15:
	LDA	LOSLOS		; DETERMINE HOW MANY
	CMP	#2		; HOME KNIGHTS DIE
	BCC	BATT25
;
	LDY	TURKEY
	LDA	HOMARM,Y
	JSR	LOSCLC
;
BATT25:
	LDA	VICLOS		; PEASANTS TAKE THEIR TOLL
	CLC
	ADC	PEASNT
	STA	VICLOS
;
	LDA	VICLOS
	STA	LOSSES
	LDX	WINNER
	LDA	FLDARM,X	; REDUCE FIELD MAA
	SEC
	SBC	VICLOS
	BCS	BATT72
	LDA	FLDARM,X
	STA	LOSSES
	LDA	#0
BATT72:	STA	FLDARM,X	; PEASANTS TAKE THIER
;
	STX	INDEX		; CALC LOSS OF EXPERIENC
	JSR	FIGLOS
;
	LDA	LOSLOS
	STA	LIEGSV
	LDY	TURKEY
	LDA	HOMARM,Y	; REDUCE HOME MAA
	SEC
	SBC	LOSLOS
	BCS	BATT73
;
	LDA	HOMARM,Y
	JSR	SUBLGE	; SUBTRACT FROM LIEGE
;
	LDX	LIEGE,Y
	CPX	#$10
	BCS	BATT77
;
	LDA	HOMARM,X
	SEC
	SBC	BLIEGE
	STA	HOMARM,X
;
	LDA	ARMSIZ,X
	SEC
	SBC	BLIEGE
	STA	ARMSIZ,X;
;
	STX	INDEX		; CALC LOSS OF EXPERIENCE
	LDA	BLIEGE		; FOR LIEGE
	STA	LOSSES
	JSR	FIGLOS
;
BATT77:	LDA	#0
BATT73:
	LDY	TURKEY
	STA	HOMARM,Y
;
	STY	INDEX		; CALC LOSS OF EXPERIENCE
	LDA	LIEGSV		; FOR LOSER
	STA	LOSSES
	JSR	FIGLOS
;
	LDX	WINNER
	LDA	FLDKNT,X	; REDUCE FIELD KNIGHTS
	SEC
	SBC	VICKNT
	BCS	BATT74
	LDA	#0
BATT74:	STA	FLDKNT,X
;
	LDY	TURKEY
	LDA	HOMKNT,Y	; REDUCE HOME KNIGHTS
	SEC
	SBC	LOSKNT
	BCS	BATT75
	LDA	#0
BATT75:	STA	HOMKNT,Y
;
	LDA	CRPSTG,Y	; DEFENDER LOST SO
	BEQ	BATT78		; HE LOSES CRPSTG
	SEC
	SBC	#1
	STA	CRPSTG,Y
BATT78:
	JMP	BATT90
;
; ****************************
BATT80:
	LDA	LOSLOS		; DETERMINE HOW MANY
	CMP	#2		; FIELD KNIGHTS DIE
	BCC	BATT55
;
	LDY	TURKEY
	LDA	FLDARM,Y
	JSR	LOSCLC
;
BATT55:
	LDA	VICLOS		; DETERMINE HOW MANY
	CMP	#2		; HOME KNIGHTS DIE
	BCC	BATT65
;
	LDX	WINNER
	LDA	HOMARM,X
	JSR	VICCLC
;
BATT65:
	LDA	LOSLOS		; PEASANTS TAKE THEIR TOLL
	CLC
	ADC	PEASNT
	STA	LOSLOS
;
	LDA	LOSLOS
	STA	LOSSES
	LDY	TURKEY
	LDA	FLDARM,Y	; REDUCE FIELD MAA
	SEC
	SBC	LOSLOS
	BCS	BATT82
	LDA	FLDARM,Y
	STA	LOSSES
	LDA	#0
;
BATT82:	STA	FLDARM,Y
	STY	INDEX
	JSR	FIGLOS		; CALC LOSS OF EXPERIENC
;
	LDA	VICLOS
	STA	LIEGSV
	LDX	WINNER
	LDA	HOMARM,X	; REDUCE HOME MAA
	SEC
	SBC	VICLOS
	BCS	BATT86
;
	LDA	HOMARM,X
	JSR	SUBLGE	; SUBTRACT FROM LGE
;
	LDY	LIEGE,X
	CPY	#$10
	BCS	BATT87
;
	LDA	HOMARM,Y
	SEC
	SBC	BLIEGE
	STA	HOMARM,Y
;
	LDA	ARMSIZ,Y
	SEC
	SBC	BLIEGE
	STA	ARMSIZ,Y
;
	STY	INDEX		; CALC LOSS OF EXPERIENCE
	LDA	BLIEGE		; FOR LIEGE
	STA	LOSSES
	JSR	FIGLOS
;
BATT87:	LDA	#0
BATT86:
	LDX	WINNER
	STA	HOMARM,X
	STX	INDEX		; CALC LOSS OF EXPERIENCE
	LDA	LIEGSV
	STA	LOSSES
	JSR	FIGLOS
;
	LDY	TURKEY
	LDA	FLDKNT,Y	; REDUCE FIELD KNIGHTS
	SEC
	SBC	LOSKNT
	BCS	BATT88
	LDA	#0
BATT88:	STA	FLDKNT,Y
;
	LDX	WINNER
	LDA	HOMKNT,X	; REDUCE HOME KNIGHTS
	SEC
	SBC	VICKNT
	BCS	BATT89
	LDA	#0
BATT89:	STA	HOMKNT,X
;
; *********************
BATT90:
	LDX	WINNER		; REDUCE OVERALL MAA
	LDA	ARMSIZ,X
	SEC
	SBC	VICLOS
	BCS	BATT70
	LDA	#0
BATT70:	STA	ARMSIZ,X
;
	LDA	KGKNTS,X	; REDUCE OVERALL KNIGHT
	SEC
	SBC	VICKNT
	BCS	BATT91
	LDA	#0
BATT91:	STA	KGKNTS,X
;
	LDY	TURKEY		; REDUCE OVERALL MAA
	LDA	ARMSIZ,Y
	SEC
	SBC	LOSLOS
	BCS	BATT71
	LDA	#0
BATT71:	STA	ARMSIZ,Y
;
	LDA	KGKNTS,Y	; REDUCE OVERALL KNIGHT
	SEC
	SBC	LOSKNT
	BCS	BATT92
	LDA	#0
BATT92:	STA	KGKNTS,Y
;
		; ********************************
		; ARTHUR'S HOME KNIGHTS DO NOT DIE
		; MAY BE CHANGED LATER
;
	LDA	TURKEY		; IS HE ARTHUR ?
	BEQ	BATT95
	CMP	ATACKR		; IS HE THE ATTACKER ?
	BEQ	BATT94
	TAY
	LDA	RETRET,Y	; IS THE KING ON CAMP?
	BNE	BATT95
BATT94:
	LDA	LOSKNT
	CMP	#2		; DID HE LOSE MAX # OF KNTES
	BNE	BATT95
	LDA	LOSLOS
	CMP	RANDOM
	BCC	BATT95
;
	LDA	WINNER		; POST MESSAGE THAT
	STA	MAILN1		; KING WAS DEFEATED
	LDA	#2
	STA	MAILVB
	LDA	TURKEY
	STA	MAILN2
	LDA	#3
	STA	MAILCN
	JSR	POST
;
	LDX	TURKEY		; THE KING DIED !
	LDY	WINNER		; MAKE HIM A VASSAL
	LDA	#2
	JSR	MAKVAS
;
BATT95: 
	LDA	WINNER		; IS HE ARTHUR ?
	BEQ	BATT99
	CMP	ATACKR		; IS HE THE ATTACKER ?
	BEQ	BATT98
	TAY
	LDA	RETRET,Y	; IS THE KING ON CAMP?
	BNE	BATT99
BATT98:
	LDA	VICKNT
	CMP	#2		; DID HE LOSE MAX # OF KNTES
	BNE	BATT99
	LDA	VICLOS
	CMP	RANDOM
	BCC	BATT99
;
	LDA	TURKEY		; POST MESSAGE THAT
	STA	MAILN1		; KING WAS DEFEATED
	LDA	#2
	STA	MAILVB
	LDA	WINNER
	STA	MAILN2
	LDA	#3
	STA	MAILCN
	JSR	POST
;
	LDX	WINNER		; THE KING DIED !
	LDY	TURKEY		; MAKE HIM A VASSAL
	LDA	#2
	JSR	MAKVAS
;
BATT99:
	LDX	SAVX
	LDY	SAVY
	RTS
;
VICKNT:	DB	0
LOSKNT:	DB	0
BLIEGE:	DB	0
LOSSES:	DB	0
LIEGSV:	DB	0
;
;
;
SUBLGE:
	STA	LIEGSV
	EOR	#$FF	; SUBTRACT FROM LIEGE
	CLC
	ADC	#$01
	STA	BLIEGE
	RTS
;
;
;
VICCLC:
	LSR	A
	PHA
	LSR	A
	CMP	VICLOS
	BCS	VICC10
	LDA	RANDOM
	CMP	#$C0
	BCC	VICC10
	INC	VICKNT
	DEC	VICLOS
;
VICC10:	PLA
	CMP	VICLOS
	BCS	VICC15
	LDA	RANDOM
	CMP	#$E0
	BCC	VICC15
	INC	VICKNT
	DEC	VICLOS
;
VICC15:
	RTS
;
;
;
LOSCLC:
	LSR	A
	PHA
	LSR	A
	CMP	LOSLOS
	BCS	LOSC50
	LDA	RANDOM
	CMP	#$C0
	BCC	LOSC50
	INC	LOSKNT
	DEC	LOSLOS
;
LOSC50:	PLA
	CMP	LOSLOS
	BCS	LOSC55
	LDA	RANDOM
	CMP	#$E0
	BCC	LOSC55
	INC	LOSKNT
	DEC	LOSLOS
;
LOSC55:
	RTS
;
;
;
FIGLOS:				; Y REG TELLS WHOM
	LDY	INDEX
	JSR	FIGIT		; FIGURE EXP/MAN
	LDA	EXPTML
	STA	MULTPR
	LDA	LOSSES
	STA	DIVISR
	JSR	MULTPY
;
	LDY	INDEX
	LDA	ARMEXP,Y
	SEC
	SBC	PRODLO
	STA	ARMEXP,Y
	LDA	ARMEXP+16,Y
	SBC	PRODHI
	BCS	FIGL00
	LDA	#$00
	STA	ARMEXP,Y
FIGL00:
	STA	ARMEXP+16,Y
	RTS
;
INDEX:	DB	0
;
;
;
FORGET:
	LDX	#0
FORGE0:
	LDA	HISTRY,X
	BEQ	FORGE1
	DEC	HISTRY,X
FORGE1:
	INX
	BNE	FORGE0
	RTS
;
;
ARTTYR:
	LDX	#$0F
	LDY	#0
	STY	ACTIT
	STY	ACNETL
	STY	TYRFLG
;
ARTTY0:
	LDA	LIEGE,X
	BNE	ARTTY1
;
	INC	TYRFLG
	LDA	TITBGT,X
	CLC
	ADC	ACTIT
	STA	ACTIT
	BCC	ARTTY5
	LDA	#$FF
	STA	ACTIT
;
ARTTY5:
	LDA	NETWTH,X
	LSR	A
	CLC
	ADC	ACNETL
	STA	ACNETL
	BCS	ARTTY3
;
ARTTY1:
	DEX
	BNE	ARTTY0
;
	LDA	TYRFLG
	BEQ	ARTTY9
;
	LSR	ACTIT
	LDA	ACTIT
	CLC
	ADC	ACNETL
	STA	ACNETL
	BCC	ARTTY4
ARTTY3:
	LDA	#$FF
	STA	ACNETL
;
ARTTY4:
	LDA	ACTIT
	STA	DVEND
	LDA	ACNETL
	STA	DVSOR
	JSR	FDIVIDE
	LDA	RESULT
	STA	TYRANT
ARTTY9:
	RTS
;
TYRFLG:	DB	0
;
;
;


;KNIGHT AI ROUTINES
;JULY 24, 1983
;
KNTAI:
	LDA	#0
	STA	TRSONL
	STA	TRSONH
	STA	TRSCNT
;
LOOP04	LDY	#$F
LOOP03	STY	JKNT
	LDA	KNTIN,Y
	BEQ	X23	;alive & here?
	CPY	ADLTRY
	BNE	X25
	LDA	KTABX+11	;knight sticks to Gwynevere
	STA	KTABX,Y
	LDA	KTABY+11
	STA	KTABY,Y
X23	JMP	NXTKNT
X25	LDA	KNTCOL,Y
	BPL	X23	;on campaign?
	INC	TRSCNT
	LDA	KTABX,Y
	STA	TEMPX
	LDA	KTABY,Y
	STA	TEMPY
	LDA	#$FF
	STA	STRSLO
	STA	STRSHI
	LDA	#0	; THIS IS BASED ON TAKING A
	STA	DIR	; STEP IN 1 OF N DIRECTIONS
LOOP01	LDX	DIR	; & SEEING WHICH 1 HAS
	LDA	TEMPX	; THE LESS STRESS.
	CLC		; DIR 0 = STAY IN SAME PLACE
	ADC	DIRXTB,X	; DIR 1 = +(O,1)
	JSR	CHKLIM
	STA	TEMPX
	LDA	TEMPY
	CLC
	ADC	DIRYTB,X
	JSR	CHKLIM
	STA	TEMPY
;
	LDA	#0
	STA	SUMLO
	STA	SUMHI
	LDX	#$F
LOOP02	STX	IKNT
	CPX	JKNT
	BNE	X15
	JMP	X16
X15	LDA	KNTIN,X
	BEQ	X26
	LDA	KNTCOL,X
	BMI	X24
X26	JMP	X16
X24	LDA	TEMPX	; GET TRIAL DIST IN X
	SEC
	SBC	KTABX,X
	JSR	ABSVAL
	STA	ABSDX
;
	LDA	TEMPY	; GET TRIAL DIST IN Y
	SEC
	SBC	KTABY,X
	JSR	ABSVAL
	STA	ABSDY
	STA	DIVISR
	STA	QUOTNT
	JSR	MULTPY	; GET Y DIST SQUARED
;
	LDA	PRODLO
	STA	ACCLO
	LDA	PRODHI
	STA	ACCHI
	LDA	ABSDX
	STA	DIVISR
	STA	QUOTNT
	JSR	MULTPY	; GET X DIST SQUARED
;
	LDA	PRODLO
	CLC
	ADC	ACCLO
	STA	ACCLO
	LDA	PRODHI
	ADC	ACCHI
	STA	ACCHI	; GET SUM OF SQUARES &
	JSR	SQRT	; TAKE SQUARE ROOT TO GET ACT. DIST
;
	LDX	IKNT
	LDA	OPNLDR,X
	STA	FUDGE
	LDA	JKNT	; CALCULATE REL. INDEX
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	ADC	IKNT
	TAX
	AND	#$F
	BNE	XX2
	LDA	RELHON,Y
	STA	DIVISR
	LDA	HONFAC,Y
	STA	QUOTNT
	JSR	MULTPY
	LDA	PRODHI
	CLC
	ADC	FUDGE
	BCC	X27
	LDA	#$FF
X27	STA	FUDGE
XX2	LDA	KNTKNT,X
	SEC
	SBC	FUDGE
	BCS	X35
	LDA	#0
X35:
;
	SEC
	SBC	SQRTA
	PHA
	BEQ	X28
	LDY	DIR
	BNE	X28
	LDA	KNTKNT,X
	BCS	X31
	LDY	RANDOM
	CPY	#$40
	BCS	X28
	ADC	#1
	BPL	X32
X31	LDY	RANDOM
	CPY	#$40
	BCS	X28
	SEC
	SBC	#1
	BPL	X32
	LDA	#0
X32	STA	KNTKNT,X
X28	LDY	JKNT
	PLA
	JSR	ABSVAL
;
	CLC
	ADC	SUMLO
	STA	SUMLO
	LDA	SUMHI
	ADC	#0
	BCC	X01
	LDA	#$FF
	STA	SUMLO
;
X01	STA	SUMHI
X16	LDX	IKNT
	DEX
	BMI	X02
	JMP	LOOP02
;
X02	LDA	STRSHI	; COMPARING FOR LOWEST STRESS
	CMP	SUMHI
	BCC	X03
	BNE	X04
	LDA	STRSLO
	CMP	SUMLO
	BCS	X04
;
X03	INC	DIR	; GO IN A NEW DIRECTION
	LDX	DIR
	CPX	#5
	BEQ	X05
	JMP	LOOP01
;
X04	LDA	SUMHI	; LOWEST STRESS SO FAR
	STA	STRSHI
	LDA	SUMLO
	STA	STRSLO
	LDX	JKNT
	LDA	TEMPX
	STA	KTABX,X
	LDA	TEMPY
	STA	KTABY,X
	JMP	X03
;
X05	LDY	JKNT	; if any knight gets too close to
	CPY	#11	;Gwynevere, he has committed adultery
	BEQ	CALTRS
	LDX	#11
	LDA	KNTIN,X
	BEQ	CALTRS
	LDA	KTABX,Y
	SEC
	SBC	KTABX,X
	JSR	ABSVAL
	CMP	#3
	BCS	CALTRS
	LDA	KTABY,Y
	SEC
	SBC	KTABY,X
	JSR	ABSVAL
	CMP	#3
	BCS	CALTRS
;
;Guenevere has committed adultery
;
	STY	TEMP1
	STY	ADLTRY
	LDA	#$F
	STA	IKNT
LOOP12	ASL	A
	ASL	A
	ASL	A
	ASL	A
	ORA	#11
	TAX
	AND	#$F0
	ORA	TEMP1
	TAY
	LDA	#$7F
	STA	KNTKNT,X
	STA	KNTKNT,Y
X22	DEC	IKNT
	BEQ	CALTRS
	LDA	IKNT
	CMP	#11
	BEQ	X22
	JMP	LOOP12
;
;compute treason sums
;
CALTRS	LDX	JKNT
	LDA	KTABX,X
	SEC
	SBC	#$80
	JSR	ABSVAL
	STA	DIVISR
	STA	QUOTNT
	JSR	MULTPY
	LDA	PRODLO
	STA	ACCLO
	LDA	PRODHI
	STA	ACCHI
	LDA	KTABY,X
	SEC
	SBC	#$80
	JSR	ABSVAL
	STA	QUOTNT
	STA	DIVISR
	JSR	MULTPY
	LDA	PRODLO
	CLC
	ADC	ACCLO
	STA	ACCLO
	LDA	PRODHI
	ADC	ACCHI
	STA	ACCHI
	JSR	SQRT
	LDA	SQRTA
	CLC
	ADC	TRSONL
	STA	TRSONL
	LDA	TRSONH
	ADC	#0
	STA	TRSONH
;
;
NXTKNT	LDY	JKNT
	DEY
	BEQ	X06
	JMP	LOOP03
X06	LDA	TRSONL
	STA	PRODLO
	LDA	TRSONH
	STA	PRODHI
	LDA	TRSCNT
	BEQ	X29
	STA	DIVISR
	JSR	DIVIDE
	LDA	PRODLO	;this should be the quotient, right?
	CMP	#$30	;revolt threshold
	BCC	X29
	LDA	#0
	STA	CRPSTG	;revolt!
;
X29	RTS
;
TRSCNT	DB	0
FUDGE	DB	0
HONFAC	DB	0,$C0,$A0,$90,$FF,$50,$40,$20
	DB	$D0,$B0,$80,0,$70,$30,$F0,$E0
OPNLDR	DB	0,4,4,8,8,4,0,0
	DB	$20,$10,0,$20,4,$10,0,$18
;
CHKLIM	CMP	#64
	BCS	X13
	LDA	#64
X13	CMP	#192
	BCC	X14
	LDA	#191
X14	RTS
;
DIRXTB	DB	0,0,1,$FF,$FF
DIRYTB	DB	0,1,$FF,$FF,1
;
MULTPY	LDA	#0
	STA	PRODLO
	STA	PRODHI
	STA	TEMP1
LOOP05	LSR	DIVISR
	BCC	X07
	LDA	PRODLO
	CLC
	ADC	QUOTNT
	STA	PRODLO
	LDA	PRODHI
	ADC	TEMP1
	STA	PRODHI
X07	LDA	DIVISR
	BEQ	X08
	ASL	QUOTNT
	ROL	TEMP1
	BCC	LOOP05
X08	RTS
;
;extracts square root of ACCLO,ACCHI
;puts result in SQRTA
;
SQRT	LDX	#$F
LOOP06	ASL	ACCLO
	ROL	ACCHI
	BCS	X09
	DEX
	BPL	LOOP06
	LDA	#0
	STA	SQRTA
	RTS
X09	ROR	ACCHI
	ROR	ACCLO
	TXA
	LSR	A
	CLC
	ADC	#1
	STA	NBITS
X20	INX
	CPX	#$10
	BEQ	X19
	LSR	ACCHI
	ROR	ACCLO
	JMP	X20
X19	LDX	NBITS
	LDA	BITTAB,X
	STA	SQRTA
LOOP07	STA	DIVISR
	STA	QUOTNT
	JSR	MULTPY
	LDA	PRODHI
	CMP	ACCHI
	BCC	X10
	BNE	X11
	LDA	PRODLO
	CMP	ACCLO
	BCC	X10
	BEQ	X12
X11	LDA	BITTAB,X	;too big
	EOR	SQRTA
	STA	SQRTA
X10	LDA	BITTAB-1,X	;too small
	ORA	SQRTA

	STA	SQRTA
	DEX
	BEQ	X12
	JMP	LOOP07
X12	RTS
;
BITTAB	DB	0,1,2,4,8,16,32,64,128
;
ABSVAL	BPL	X18
	EOR	#$FF
	CLC
	ADC	#1
X18	RTS
;
;
KTRANS:
	LDX	#$0F	; TRANSLATE VALUES IN
KTRAN0:			; KTABX & KTABY TO SCREEN
	LDA	KTABX,X	; COORDINATES BY (N-64)*2
	SEC
	SBC	#64
	BCS	KTRAN1
	LDA	#$00
;
KTRAN1:
	CLC
	ASL	A
	BCC	KTRAN2
	LDA	#$FF
;
KTRAN2:
	STA	SKTABX,X
	LDA	KTABY,X
	SEC
	SBC	#64
	BCS	KTRAN3
	LDA	#$00
;
KTRAN3:
	CLC
	ASL	A
	BCC	KTRAN4
	LDA	#$FF
;
KTRAN4:
	STA	SKTABY,X
	DEX
	BPL	KTRAN0
	RTS
;
;
STRSLO	ORG	*+1
STRSHI	ORG	*+1
DIR	ORG	*+1
IKNT	ORG	*+1
JKNT	ORG	*+1
ABSDX	ORG	*+1
ABSDY	ORG	*+1
TRSONL	ORG	*+1
TRSONH	ORG	*+1
DIST:
DIST00: DB 99, 24, 23, 21, 17, 15, 14, 10, 10, 07, 10, 07, 04, 03, 03, 04
DIST01: DB 24, 99, 03, 03, 07, 09, 10, 14, 14, 17, 14, 19, 22, 24, 21, 26
DIST02: DB 23, 03, 99, 03, 07, 10, 10, 13, 14, 17, 13, 20, 22, 24, 21, 25
DIST03: DB 21, 03, 03, 99, 05, 07, 07, 11, 12, 15, 12, 17, 19, 22, 18, 24
DIST04: DB 17, 07, 07, 05, 99, 04, 03, 07, 08, 11, 07, 14, 15, 18, 14, 19
DIST05: DB 15, 09, 10, 07, 04, 99, 02, 05, 05, 08, 06, 10, 13, 15, 12, 18
DIST06: DB 14, 10, 10, 07, 03, 02, 99, 04, 05, 08, 05, 10, 12, 15, 11, 17
DIST07: DB 10, 14, 13, 11, 07, 05, 04, 99, 03, 04, 02, 08, 09, 11, 07, 13
DIST08: DB 10, 14, 14, 12, 08, 05, 05, 03, 99, 04, 05, 05, 08, 10, 08, 14
DIST09: DB 07, 17, 17, 15, 11, 08, 08, 04, 04, 99, 05, 04, 05, 07, 05, 10
DIST10: DB 10, 14, 13, 12, 07, 06, 05, 02, 05, 05, 99, 08, 09, 11, 07, 12
DIST11: DB 07, 19, 20, 17, 14, 10, 10, 08, 05, 04, 08, 99, 04, 06, 07, 11
DIST12: DB 04, 22, 22, 19, 15, 13, 12, 09, 08, 05, 09, 04, 99, 03, 04, 08
DIST13: DB 03, 24, 24, 22, 18, 15, 15, 11, 10, 07, 11, 06, 03, 99, 05, 06
DIST14: DB 03, 21, 21, 18, 14, 12, 11, 07, 08, 05, 07, 07, 04, 05, 99, 05
DIST15: DB 04, 26, 25, 24, 19, 18, 17, 13, 14, 10, 12, 11, 08, 06, 05, 99
;
;
;
FLDFRC:
	DB	$FF,$FF,$F0,$E8
	DB	$E0,$D8,$D0,$C8
	DB	$C0,$B8,$B0,$AC
	DB	$A8,$A4,$A0,$9A
	DB	$94,$8E,$88,$80
	DB	$78,$70,$68,$60
	DB	$58,$50,$48,$40
	DB	$3C,$38,$34,$30
;
;
;
FRCDST:
	DB	$80,$80,$80,$80
	DB	$7C,$78,$74,$70
	DB	$6C,$68,$64,$60
	DB	$5C,$58,$54,$50
	DB	$4C,$48,$44,$40
	DB	$3C,$38,$34,$30
	DB	$2C,$28,$24,$20
	DB	$1E,$1C,$1A,$18
DIVIDE	LDY	#8
LOOP35	ASL	PRODLO
	ROL	PRODHI
	BCC	Y47
	LDA	PRODHI
	SBC	DIVISR
	JMP	Y49
Y47	LDA	PRODHI
	SEC
	SBC	DIVISR
	BCC	Y50
Y49	STA	PRODHI
	INC	PRODLO
Y50	DEY
	BNE	LOOP35
	RTS
;
;

; DIPLOMAT.ASM       APRIL 14, 1983
;
; PERFORMS DIPLOMACY DESICIONS OF:
;
;    When should i vassalize ?
;    To whom should i vassalize?
;    Whom do i pay tribute ?
;    How much tribute should i pay ?
;    Whom should i attack, if anyone?
;    Should i do a defensive attack ?
;     ( beating up a bully's garrison);
;
VASSAL:
	LDX	#$0F
VASS00:
	STX	VASX
	LDA	LIEGE,X		; IF ARTHUR IS IN A
	BNE	VASS16		; VASSAL'S CASTLE,
	CPX	CASTLE		; THEN DO NOT ALLOW
	BNE	VASS16		; THAT VASSAL TO 
	LDA	VBIENV		; REVASSALIZE
	CMP	#8
	BEQ	VASS01
;
VASS16:
	LDA	REVAS,X
	BNE	VASS12
	LDA	CRPSTG,X	; DOES HE TURN A VASSAL
	BNE	VASS01
VASS12:
	JSR	VASS09
VASS01:
	LDX	VASX
	DEX
	BNE	VASS00
	RTS
;
VASX:	DB	0
;
;
VASS09:
	LDA	REVAS,X
	BNE	VASS02
	LDA	LIEGE,X		; IS HE A VASSL ALREADY
	CMP	#$10
	BCS	VASS02		; IF YES, SKIP HIM
	RTS
;
VASS02:
	LDA	#0
	STA	CRPSTG,X
;
	LDA	#$10
	STA	BESTID
	LDA	#0
	STA	BESTVL
	STA	SY3
	STX	SX3
;
	LDY	#$0F		; WHOM DOES HE VASSAL TO ?
VASS03:
	CPY	SX3		; NOT TO HIMSELF !!
	BNE	VASS05
;
VASS04:
	DEY
	BPL	VASS03
;
	LDX	SX3
	LDA	REVAS,X
	BEQ	VASS14		; IF REVASSALIZE TO THE
	LDA	LIEGE,X		; SAME LIEGE, THEN
	CMP	BESTID		; MAKE NO CHANGES
	BEQ	VASS15
;
VASS14:
	LDY	BESTID		; FOUND LIEGE
	LDX	SX3		; SET UP RELATIONSHIP
	LDA	#2		; MINIMAL DEFAULT TITHING
	JSR	MAKVAS
;
VASS15:
	LDY	SX3		; VASSAL'S CAN'T CAMPAIGN
	LDA	CAMPGN,Y
	BEQ	VASS10
	JSR	CAMST1
;
VASS10:
	LDX	SX3		; TRY NEXT KING FOR VASSAL
	LDA	#0
	STA	REVAS,X
	RTS
;
;
;
VASS05:
	LDA	LIEGE,Y		; DON'T VASS TO A VASS
	CMP	#$10
	BCC	VASS04
;
	STY	SY3
;
	LDA	#0		; CLEAR UPPER BYTE OF
	STA	SAVED2		; MATH ACCUMULATOR
;
	LDA	PRESTG,Y	; V = PRESTG(B)
	STA	SAVED1
;
	LDA	#$40		; V=V+ 1/4 CRPSTG(B)
	STA	FRAC
	LDA	CRPSTG,Y
	JSR	FRCT1B
	JSR	ADDIT
;
;**	LDY	SY3		; ;**V=V + 3/4 ARMSIZ(B)
;**	LDA	#$C0
	LDX	SX3		; V=V + ARMSIZ(B)*FRCDST(A,B)
	JSR	MULX16
	CLC
	ADC	SY3
	TAX
	LDY	DIST,X
	LDA	FRCDST,Y
	STA	FRAC
	LDY	SY3
	LDA	ARMSIZ,Y
	JSR	FRCT1B
	JSR	ADDIT
;
	LDY	SY3		; V=V - TYRANT(B)
	LDA	TYRANT,Y
	LSR	A
	LSR	A
	JSR	SUBIT
;
	LDX	SX3		; ;**V=V - DIST(A,B)*6
	JSR	MULX16
	CLC
	ADC	SY3
	TAX
	LDA	LNGTRM,X
	STA	MLIER
;
	LDA	BESTID		; IF CONSIDERING ARTHUR,
	BNE	VASS11		; BE SURE TO CHANGE THE
	LDY	SX3		; KING'S HEART IF UNDER
	LDA	CHGKNG,Y	; THAT SPELL OF MERLIN
	CLC
	ADC	MLIER
	STA	MLIER
	BCC	VASS11
	LDA	#$FF
	STA	MLIER
;
VASS11:
;**	LDA	DIST,X
;**	ASL	A
;**	STA	DSTA
;**	ASL	A
;**	CLC
;**	ADC	DSTA
;**	JSR	SUBIT
;
	LDA	SAVED2		; MAKE IT A 1 BYTE VALUE
	BEQ	VASS07
	BMI	VASS06
	LDA	#$FF
	STA	SAVED1
	JMP	VASS07
;
VASS06:
	LDA	#$00
	STA	SAVED1
;
VASS07:
	LDA	SAVED1
	STA	MCAND
	JSR	STRMLT
;
	LDA	HIPROD+1
	CMP	BESTVL
	BCS	VASS08
	JMP	VASS04
;
VASS08:
	STA	BESTVL
	LDY	SY3
	STY	BESTID
	JMP	VASS04
;
SX3:	DB	0
SY3:	DB	0
SA3:	DB	0
DSTA:	DB	0
;
;
;
DPLMAT:
	LDA	WEEKHI
	BNE	DPLM00
	LDA	WEEKLO
	CMP	#20
	BCC	DPLM01
;
DPLM00:
	JSR	SKYVAS		; BLUE SKY VASSALIZATION
	JSR	CLRVAL		; PREPARE TERMS
	JSR	MAKTA
	JSR	MAKTB
	JSR	MAKJST		; JUSTIFIED VALUES
	JSR	MAKLNG		; FEELING TO ONE ANOTHER
	JSR	ZERTRB		; ZERO OUT TRIBUTE
	JSR	ATKVAL		; CREATE ATTACK VALUES
	JSR	TRBDEC		; DECIDE TRIBUTE ON THIS
	JSR	ATKVAL		; RECREATE ATTACK VALUES
	JSR	DEFVAL		; MAKE DEFENSIVE ATTACK
	JSR	GETBST		; SORT THREW TO HIGHEST
	JSR	ACTION		; BEGIN CAMPAIGNS
DPLM01:
	RTS
;
;
SX1	DB	0
SY1	DB	0
SA1	DB	0
SX2	DB	0
SY2	DB	0
SA2	DB	0
;
;
ZERTRB:				; ZERO OUT TRIBUTE SO THAT
	;**	LDX	#$0F		; 1ST ATKDES VALS SHOW
ZERTR0:				; WHO IS MOST DANGEROUS
	;**	STX	SXZER		; AND REDECIDE TO PAY
	;**	LDA	TRBTOR,X	; TRBT TO MOST DANG
	;**	CMP	#$10		; RATHER THAN 2ND MOST
	;**	BCS	ZERTR1
;
	;**	LDY	TRBTOR,X
	;**	LDA	#$00
	;**	STA	TRIBUT,X
	;**	LDA	#$10
	;**	STA	TRBTOR,X
	;**	JSR	MAKNUE
;
ZERTR1:
	;**	LDX	SXZER
	;**	DEX
	;**	BNE	ZERTR0
	RTS
;
SXZER	DB	0
;
;
;
CLRVAL:
	LDX	#0
	TXA
CLRVA0:
	STA	TA,X
	STA	TB,X
	STA	ATKDES,X
	STA	DEFDES,X
	INX
	BNE	CLRVA0
	RTS
;
;
MAKTA:
	LDX	#$00
MAKTA1:
	JSR	MAKIND
;
MAKTA2:
	LDY	#$0F		; DID HE HIT MY ENEMIES ?
	LDA	#$00
	STA	MCAND		; USE 3/8 ENEMY HSTORY
	STA	MCAND+1
MAKTA3:
	STY	SY1
	LDA	SAVED3
	CLC
	ADC	SY1
	TAX
	LDA	KNGSTS,X
	AND	#$80
	BEQ	MAKTA4
;
	LDA	SAVED4
	CLC
	ADC	SY1
	TAX
	LDA	HISTRY,X
	CLC
	ADC	MCAND
	STA	MCAND
	LDA	MCAND+1
	ADC	#0
	STA	MCAND+1
;
MAKTA4:
	LDY	SY1
	DEY
	BPL	MAKTA3
;
	LDA	#$60
	STA	MLIER
	JSR	STRM01
;
	LDX	SX1
	LDA	HIPROD+1
	CLC
	ADC	TA,X
	STA	TA,X
	BCC	MAKTA5
	LDA	#$FF
	STA	TA,X
;
MAKTA5:
	LDX	SX1
	INX
	BEQ	MAKTA6
	JMP	MAKTA1
MAKTA6:
	RTS
;
;
;
MAKTB:
	LDX	#$00
MAKTB1:
	JSR	MAKIND
;
	LDA	SAVED4		; HOW MUCH HAS SAVED2
	CLC			; PILLAGED SAVED1
	ADC	SAVED1
	TAY
	LDA	HISTRY,Y
	STA	TB,X
;
	JSR	HITVAS
	JSR	HITJST
	JSR	HITANY
	;	JSR	SCARY
;
	LDX	SX1
	INX
	BNE	MAKTB1
	RTS
;
;
;
MAKJST:
	LDX	#$00
MAKJS0:
	STX	SX1
	LDA	TA,X
	CMP	TB,X
	BCC	MAKJS1
	SBC	TB,X
	CLC
	ADC	JUSTIC,X
	BCC	MAKJS6
	LDA	#$FF
	JMP	MAKJS6
;
MAKJS1:
	LDA	TB,X
	SEC
	SBC	TA,X
	STA	SA1
	LDA	JUSTIC,X
	SEC
	SBC	SA1
	BCS	MAKJS6
	LDA	#0
;
MAKJS6:
	LDX	SX1
;## 	STA	SAVDN
;## 	LDA	JUSTIC,X
;## 	STA	SAVDZ
;**	JSR	DDT
;##
;## 	LDA	SAVDN
	STA	JUSTIC,X
	INX
	BNE	MAKJS0
	RTS
;
;
;
MAKLNG:
	LDX	#$00
MAKLN1:
	STX	SX1
	TXA
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	STA	SAVED1
	STA	SY1
	TAY
;
	LDA	TA,X
	STA	MCAND
	LDA	NICEY,Y
	STA	MLIER
	JSR	STRMLT
	LDA	HIPROD+1
	STA	SAVED2
;
	LDX	SX1
	LDY	SY1
	LDA	TB,X
	STA	MCAND
	LDA	NASTY,Y
	STA	MLIER
	JSR	STRMLT
	LDA	HIPROD+1
	STA	SAVED3
;
	LDX	SX1
	LDA	SAVED2
	CMP	SAVED3
	BCC	MAKLN3
	SEC
	SBC	SAVED3
	CLC
	ADC	LNGTRM,X
	BCC	MAKLN2
	LDA	#$FF
MAKLN2:
	JMP	MAKLN5
;
MAKLN3:
	LDA	SAVED3
	SEC
	SBC	SAVED2
	STA	SA1
	LDA	LNGTRM,X
	SEC
	SBC	SA1
	BCS	MAKLN5
	LDA	#0
;
MAKLN5:
	LDX	SX1
;## 	STA	SAVDN
;## 	LDA	LNGTRM,X
;## 	STA	SAVDZ
;** 	JSR	DDT
;##
;## 	LDA	SAVDN
	STA	LNGTRM,X
	INX
	BEQ	MAKLN6
	JMP	MAKLN1
MAKLN6:
	RTS
;
;
;
DDT:
;**	LDA	SAVDZ
;**	CLC
;**	ADC	#$0C
;**	BCC	DDT00
;**	LDA	#$FF
DDT00:
;**	STA	SAVDP
;
;**	LDA	SAVDZ
;**	SEC
;**	SBC	#$0C
;**	BCS	DDT01
;**	LDA	#$00
DDT01:
;**	STA	SAVDM
;
;**	LDA	SAVDN
;**	CMP	SAVDP
;**	BCS	DDTGET
;**	LDA	SAVDM
;**	CMP	SAVDN
;**	BCS	DDTGET
;**	RTS
;
DDTGET:
	RTS
;
SAVDZ	DB	0
SAVDN	DB	0
SAVDP	DB	0
SAVDM	DB	0
;
;
;
ATKVAL:
	LDX	#$00
ATKVA5:
	JSR	INTSAV
	BNE	ATKVAA
	JMP	ATKVA6
;
ATKVAA:
	LDX	SAVED1		; NO ATTACK IF ALREADY
	LDA	CAMPGN,X	; ON CAMPAIGN
	BEQ	ATKVA9
ATKVAD:
	JSR	SKIP16
	JMP	ATKVA6
;
ATKVA9:
	LDX	SAVED1
	LDA	DANGER,X	; CAN NOT ATTACK IF HE
	BNE	ATKVAD		; IS UNDER ATTACK
;
	LDA	LIEGE,X		; CAN NOT ATTACK IF HE
	CMP	#$10		; IS A VASSAL
	BCC	ATKVAD
;
	LDX	SAVED2		; THIS IS DIRECT ATTACK
	LDA	CAMPGN,X	; NOT DEFENSIVE ATTACK
	BEQ	ATKVAB		; DO NOT STAB IN BACK
	JMP	ATKVA6
;
ATKVAB:
	LDA	DANGER,X	; NO DUAL ATTACKS
	BEQ	ATKVAC		; TARGIT MUST NOT BE
	JMP	ATKVA6		; UNDER ATTACK
;
ATKVAC:
	LDX	SAVED2		; CAN NOT ATTACK YOUR
	LDA	LIEGE,X		; OWN VASSAL
	CMP	SAVED1
	BNE	ATKVAH
	JMP	ATKVA6
;
ATKVAH:
	JSR	TRYBAT	; TRY A FAKE BATTLE
	BEQ	ATKVA8
	JMP	ATKVA6
;
ATKVA8:
	LDY	SAVED2		; V= P(ACTCRP(B)) * 1/2  (WAS 1/4)
	LDA	#$80		; WHERE P=(X-28)*4
	STA	FRAC		; AND P <= 255
	LDA	ACTCRP,Y
	SEC
	SBC	#28
	ASL	A
	ASL	A
	BCC	ATKVA0
	LDA	#$FF
;
ATKVA0:
	JSR	FRCT1B
	STA	DVEND
;
	LDY	SAVED2		; V=V + PRESTG(B) * 1/2
	LDA	#$80
	STA	FRAC
	LDA	PRESTG,Y
	JSR	FRCT1B
	CLC
	ADC	DVEND
	STA	DVEND
	LDA	DVEND+1
	ADC	#0
	STA	DVEND+1
;
	LDY	SAVED2		; V=V - TRIBUTE, IF ANY
	LDA	TRBTOR,Y
	CMP	SAVED1
	BNE	ATKVA1
	LDA	TRIBUT,Y
	STA	MLIER
;
ATKVA1:
	LDA	VICLOS		; V=V - TRIAL MAA LOSS
	JSR	ADDMLR
;
	LDX	SX1		; V=V - DIST(A,B) * 1/1
	LDA	#$FF
	STA	FRAC
	LDA	DIST,X
	JSR	FRCT1B
	JSR	ADDMLR
;
	LDA	DVEND+1		; WHICH IS BIGGER ?
	CMP	MLIER+1
	BCC	ATKVA3
	BNE	ATKVA2
	LDA	DVEND
	CMP	MLIER
	BCC	ATKVA3
;
ATKVA2:
	LDA	DVEND
	SEC
	SBC	MLIER
	STA	DVEND
	LDA	DVEND+1
	SBC	MLIER+1
	STA	DVEND+1
	BEQ	ATKVA4
	LDA	#$FF
	STA	DVEND
	JMP	ATKVA4
;
ATKVA3:
	LDA	#0		; DESIRABILITY OF ATTACK
	LDX	SX1		; CAN'T BE NEGATIVE
	JMP	ATKVAE
;
ATKVA4:
	LDX	SX1
	LDA	LNGTRM,X
	STA	DVSOR
	LDX	SAVED2
	STA	ATKSAV
;
	LDA	LIEGE,X
	CMP	#$10
	BCS	ATKVAJ
;
	STA	ATKSAV
	LDA	SAVED1
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	CLC
	ADC	ATKSAV
	TAX
	LDA	LNGTRM,X
	STA	DVSOR
;
ATKVAJ:
	LDA	ATKSAV		; IF CONSIDERING TO
	BNE	ATKVAG		; ATTACK ARTHUR, BE
	JSR	LOVEME
	JMP	ATKVAF
;
ATKVAG:
	LDX	ATKSAV		; DID HE PAY TRIBUTE ?
	JSR	DISCNT
;
ATKVAF:
	JSR	STRDIV
;
	LDA	PRODLO
	STA	MCAND
	LDX	SAVED1
	LDA	AMBITN,X
	CLC
	ADC	CRPSTG,X
	STA	MLIER
	JSR	STRMLT
;
	LDX	SX1
	LDA	HIPROD+1
	CLC
	ROL	A
	BCC	ATKVAE
	LDA	#$FF
ATKVAE:
	STA	ATKDES,X
;**	LDY	LNGTRM,X	; USED FOR DEBUGGING
;**	NOP			; USED FOR DEBUGGING
;
	LDY	SAVED2		; ## ATTACK VASSALS
	LDA	LIEGE,Y	; ## OF NUM 1 MORE
	CMP	NUMONE		; ## READILY
	BNE	ATKVA6
;
	JSR	LVRANK		; ## ESPECIALLY IF
	LDX	SX1		; ## HE IS NOT
	CLC			; ## WELL LIKED 
	ADC	ATKDES,X
	STA	ATKDES,X
	BCC	ATKVA6
	LDA	#$FF
	STA	ATKDES,X
;
ATKVA6:
	LDX	SX1
	INX
	BEQ	ATKVA7
	JMP	ATKVA5
ATKVA7:
	RTS
;
ATKSAV:	DB	0
;
;
;
DISCNT:
	LDA	TRBTOR,X	; GIVE HIM A DSICOUNT
	CMP	SAVED1		; BECAUSE HE PAYS TRIB !
	BNE	DISCN0
	LDA	TRIBUT,X
	CLC
	ADC	DVSOR
	STA	DVSOR
	BCC	DISCN0
	LDA	#$FF
	STA	DVSOR
DISCN0:
	RTS
;
;
;
LOVEME:
	LDY	SAVED1		; SURE TO CHECK IF HEART
	LDA	CHGKNG,Y	; HAS BEEN CHANGED BY
	CLC			; MERLIN'S MAGIC
	ADC	DVSOR
	STA	DVSOR
	BCC	LOVE00
	LDA	#$FF
	STA	DVSOR
LOVE00:
	RTS
;
;
;
ADDMLR:
	CLC
	ADC	MLIER
	STA	MLIER
	LDA	MLIER+1
	ADC	#0
	STA	MLIER+1
	RTS
;
;
;
SKIP16:
	LDA	SX1		; SKIP ENTIRE GROUP OF 16
	AND	#$F0		; PRE- INITED TO ZERO
	ORA	#$0F
	STA	SX1
	RTS
;
;
;
INTSAV:
	LDA	#0
	STA	DVEND+1
	STA	MLIER
	STA	MLIER+1
;
INTSV1:
	JSR	MAKIND
	LDA	SAVED1		; CAN NOT ATTACK SELF
	CMP	SAVED2
	RTS
;
;
;
TRYBAT:
	LDA	SAVED1		; DO NOT ATTACK UNLESS
	STA	ATACKR		; YOU HAVE A GOOD CHANCE
	LDA	SAVED2		; OF WINNING
	STA	DEFNDR
	JSR	BATSIM
	LDA	WINNER
	CMP	SAVED1
	RTS
;
;
;
LVRANK:
	LDY	SAVED2
	LDA	SX1
	AND	#$F0
	CLC
	ADC	LIEGE,Y
	TAX
	LDA	LNGTRM,X
	STA	LOVSAV
;
	LDA	SX1
	AND	#$F0
	ORA	#$0F
	TAX
	LDY	#0
LVRAN0:
	LDA	LNGTRM,X
	CMP	LOVSAV
	BCS	LVRAN1
	INY
LVRAN1:
	DEX
	TXA
	AND	#$0F
	CMP	#$0F
	BNE	LVRAN0
;
	LDA	DESINC,Y
	RTS
;
LOVSAV:	DB	0
;
DESINC:
	DB	$00
	DB	$04
	DB	$08
	DB	$10
	DB	$18
	DB	$20
	DB	$28
	DB	$30
	DB	$40
	DB	$50
	DB	$60
	DB	$70
	DB	$80
	DB	$90
	DB	$A0
	DB	$B0
	DB	$C0
;
;
;
TRBDEC:
	LDX	#$0F
TRBDE5:
	STX	TRBDX
;
	LDA	TRBCNT,X
	BEQ	TRBDE8
	JMP	TRBDE6
;
TRBDE8:
	LDA	#0
	STA	BESTVL
	STA	TRIBUT,X
	LDA	#$10
	STA	BESTID
	STA	TRBTOR,X
;
	LDY	#$0F
TRBDE1:
	STY	TRBDY
;
	LDX	TRBDX
	LDA	CAMPGN,X	; DON'T PAY CAMPAIGNERS
	BNE	TRBDE3
	TYA
	CMP	TRBDX		; DON'T PAY YOURSELF
	BEQ	TRBDE3
;
	JSR	MULY16
	CLC
	ADC	TRBDX
	TAX
	LDA	ATKDES,X
	CMP	WSHWSH,Y
	BCC	TRBDE3
	CMP	BESTVL
	BCC	TRBDE3
	STA	BESTVL
	STY	BESTID
;
TRBDE3:
	LDY	TRBDY
	DEY
	BPL	TRBDE1
;
	LDA	BESTID	; IF NO -ONE, THEN SKIP
	CMP	#$10
	BEQ	TRBDE6
;
	LDA	BESTVL
	STA	MCAND
	LDX	TRBDX
	JSR	COWADD
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	BNE	TRBDE9
	LDA	#1
TRBDE9:
	STA	TRBA
;
	LDX	TRBDX		; DO NOT PAY MORE THAN
	LDA	ACTCRP,X	; 1/8 OF YOUR WEALTH
	LSR	A		; FOR TRIBUTE PAYMENT
	LSR	A
	LSR	A
	CMP	TRBA
	BCC	TRBDE4
	LDA	TRBA
TRBDE4:
	LDY	BESTID
	LDX	TRBDX
	JSR	MAKTRB
;
TRBDE6:
	LDX	TRBDX
	DEX
	BEQ	TRBDE7
	JMP	TRBDE5
TRBDE7:
	RTS
;
TRBA:	DB	0
TRBDX:	DB	0
TRBDY:	DB	0
;
;
;
COWADD:
	LDA	COWARD,X
	SEC
	SBC	CRPSTG,X
	STA	MLIER
	JSR	STRMLT
	LDA	HIPROD+1
	RTS
;
;
;
DEFVAL:
	LDX	#$00
DEFVA0:
	JSR	INTSAV
	BNE	DEFVAA
	JMP	DEFVA8
;
DEFVAA:
	LDX	SAVED2		; "A" CAN NOT DEFENSIVE 
	LDA	LIEGE,X		; ATTACK ANY VASSAL.
	CMP	#$10		; REDUNDANT CHECK !
	BCS	DEFVAH		; CAUSE VASSAL'S CAN'T
	JMP	DEFVA8		; CAMPAIGN ( SEE NEXT )
;
DEFVAH:
	LDY	SAVED2		; B SHOULD BE ON CAMPAGN
	LDA	CAMPGN,Y
	BNE	DEFVAB
	JMP	DEFVA8
;
DEFVAB:
	LDA	DANGER,Y	; NO DUAL ATTACK ON B
	BEQ	DEFVA1
	JMP	DEFVA8
;
DEFVA1:
	LDX	SAVED1		; A SHOULDN'T BE ON CAMP
	LDA	CAMPGN,X
	BEQ	DEFVA3
;
DEFVA2:
	JSR	SKIP16
	JMP	DEFVA8
;
DEFVA3:
	LDX	SAVED1		; NO ONE TARGITING A ?
	LDA	DANGER,X
	BNE	DEFVA2
;
	LDA	LIEGE,X		; CAN NOT ATTACK IF HE
	CMP	#$10		; IS A VASSAL
	BCC	DEFVA2
;
DEFVA4:
	JSR	TRYBAT	; TRY A FAKE BATTLE
	BEQ	DEFVA5
	JMP	DEFVA8
;
DEFVA5:
	LDY	SAVED2		; V= ARMSIZ(B)+PRESTG(B)
	LDA	ARMSIZ,Y
	CLC
	ADC	PRESTG,Y
	BCC	DEFVA6
	LDA	#$FF
	JMP	DEFVAJ
;
DEFVA6:
	LDY	SAVED2		; V=V + BLIP(B)*3
	LDA	RETRET,Y	; BLIP = TIME NEEDED TO
	SEC			;        RETREAT INCLUDING 
	SBC	ADVNCE,Y	;        TIME TO SEND
	STA	DEFA		;        HELP MESSAGE
	ASL	A
	CLC
	ADC	DEFA
	BCC	DEFVAJ
	LDA	#$FF
;
DEFVAJ:
	STA	DEFA		; V=V - DIST(A,B)*4
;
	LDX	SX1
	LDA	DIST,X
	ASL	A
	ASL	A
	STA	DEFSAV
;
	LDA	DEFA
	SEC
	SBC	DEFSAV
	BCS	DEFVA7
	LDA	#0
;
DEFVA7:
	STA	MCAND
	LDX	SAVED1
	JSR	COWADD
	STA	DVEND
	LDA	#0
	STA	DVEND+1
	STA	DVSOR+1
;
	LDX	SX1
	LDA	LNGTRM,X
	STA	DVSOR
	LDX	SAVED2
	STA	DEFDEF
;
	LDA	LIEGE,X
	CMP	#$10
	BCS	DEFVAK
;
	STA	DEFDEF
	LDA	SAVED1
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	CLC
	ADC	DEFDEF
	TAX
	LDA	LNGTRM,X
	STA	DVSOR
;
DEFVAK:
	LDA	DEFDEF		; IF CONSIDERING TO
	BNE	DEFVAG		; ATTACK ARTHUR, BE
	JSR	LOVEME
	JMP	DEFVAE
;
DEFVAG:
	LDX	DEFDEF		; DID HE PAY TRIBUTE ?
	JSR	DISCNT
DEFVAE:
	JSR	STRDIV
;
	LDA	PRODLO
	CLC
	ROL	A
	BCS	DEFVAC
	ROL	A
	BCC	DEFVAD
;
DEFVAC:
	LDA	#$FF
DEFVAD:
	LDX	SX1
	STA	DEFDES,X
;## 	LDY	LNGTRM,X	; USED FOR DEBUGGING;
	LDA	SAVED2		; ## IF KING IS
	CMP	NUMONE		; ## NUMBER 1
	BNE	DEFVA8		; ## HIT HIM MORE OFTEN
;
	JSR	LVRANK
	LDX	SX1
	CLC
	ADC	DEFDES,X
	STA	DEFDES,X
	BCC	DEFVA8
	LDA	#$FF
	STA	DEFDES,X
;
DEFVA8:
	LDX	SX1
	INX
	BEQ	DEFVA9
	JMP	DEFVA0
DEFVA9:
	RTS
;
DEFA:	DB	0
DEFSAV:	DB	0
DEFDEF:	DB	0
;
;
;
GETBST:
	LDX	#$0F
GETBS0:
	STX	SX1
	JSR	MULX16
	CLC
	ADC	#$0F
	TAY
	STY	SY1
	LDA	#$0F
	STA	SA1
;
	LDA	#0
	STA	BESTVL
	STA	DBSTVL
	LDA	#$10
	STA	BESTID
	STA	DBSTID
;
	LDA	LIEGE,X		; IF VASSAL, TAKE NO 
	CMP	#$10		; ACTION, SO NO BEST 
	BCC	GETBS4		; VALUES
;
	LDA	TARGIT,X	; REST PERIOD AFTER
	CMP	#$11		; LAST CAMPAIGN,  WAIT
	BCC	GETBS1		; UNTIL COUNTER = $10
;
	LDA	RETRET,X	; DON'T START RESTING
	BNE	GETBS6		; UNTIL YOU GET HOME
	DEC	TARGIT,X
GETBS6:
	JMP	GETBS4
;
GETBS1:
	LDA	ATKDES,Y
	CMP	BESTVL
	BCC	GETBS2
	CMP	WSHWSH,X
	BCC	GETBS2
	STA	BESTVL
	LDA	SA1
	STA	BESTID
;
GETBS2:
	LDA	DEFDES,Y
	CMP	DBSTVL
	BCC	GETBS3
	CMP	WSHWSH,X
	BCC	GETBS3
	STA	DBSTVL
	LDA	SA1
	STA	DBSTID
;
GETBS3:
	DEY
	DEC	SA1
	BPL	GETBS1
;
GETBS4:
	LDX	SX1
	LDA	BESTVL
	STA	ATKBVL,X
	LDA	BESTID
	STA	ATKBID,X
;
	LDA	DBSTVL
	STA	DEFBVL,X
	LDA	DBSTID
	STA	DEFBID,X
;
	DEX
	BEQ	GETBS5
	JMP	GETBS0
GETBS5:
	RTS
;
;
;
ACTION:
	LDX	#$0F
ACTIN1:
	LDA	DEFBVL,X
	BNE	ACTIN2
	LDA	ATKBVL,X
	BEQ	ACTIN9
	JMP	ACTIN7
;
ACTIN2:
	LDA	ATKBVL,X
	BEQ	ACTIN6
	CMP	DEFBVL,X
	BCS	ACTIN7
;
ACTIN6:
	LDA	DEFBID,X
	CMP	TARGIT		; DID ARTHUR BEAT HIM
	BEQ	ACTIN9		; TI IT?
	JMP	ACTIN8
;
ACTIN7:
	LDA	ATKBID,X
	CMP	TARGIT		; DID ARTHUR BEAT HIM
	BEQ	ACTIN9		; TO IT ?
ACTIN8:
	LDY	CAMPGN,X
	BNE	ACTIN9		; SOMEONE BEAT HIM TO IT
	STA	TARGIT,X
	STA	TARGSV,X
	LDA	#$01
	STA	CAMPGN,X
ACTIN9:
	DEX
	BNE	ACTIN1
	RTS
;
;
;
SKYVAS:
	LDX	#$10		; SKIP ARTHUR
SKYV00:
	JSR	INTSV1
	BEQ	SKYV90
;
	LDX	SAVED2		; CAN'T VASS TO A VASS
	LDA	LIEGE,X
	CMP	#$10
	BCC	SKYV90
;
	LDX	SAVED1		; CAN'T RE-VASS IF VASS
	LDA	LIEGE,X
	CMP	#$10
	BCC	SKYV80
;
	LDX	SAVED1		; CAN'T VASS IF ON CAMP
	LDA	CAMPGN,X
	BNE	SKYV80
;
	LDX	SX1
	LDA	LNGTRM,X
	LDX	SAVED1
	LDY	SAVED2		; IF CONSIDERING ARTHUR,
	BNE	SKYV05		; BE SURE TO ADD IN
	CLC			; MERLIN'S SPELL TO CHANGE
	ADC	CHGKNG,X		; HIS HEART
	BCC	SKYV05
	LDA	#$FF
;
SKYV05:
	LSR	A
	STA	SKYA
;
	LDA	PRESTG,Y
	CMP	PRESTG,X
	BCC	SKYV90
	BEQ	SKYV10
;
	SEC
	SBC	PRESTG,X
	CLC
	ADC	SKYA
	BCS	SKYV50
	STA	SKYA
;
SKYV10:
	LDA	ARMSIZ,Y
	CMP	ARMSIZ,X
	BCC	SKYV90
	BEQ	SKYV90
;
	SEC
	SBC	ARMSIZ,X
	CLC
	ADC	SKYA
	STA	SKYA
	BCC	SKYV90
;
SKYV50:
	LDA	#2
	JSR	MAKVAS
;
	LDX	SAVED1
	LDA	#0
	STA	CRPSTG,X
;
SKYV80:
	JSR	SKIP16
;
SKYV90:
	LDX	SX1
	INX
	BEQ	SKYV91
	JMP	SKYV00
SKYV91:
	RTS
;
SKYA:	DB	0
;
;
;
STRMLT:
	LDA	#0		; ENTRY: MCAND AND MLIER
	STA	MCAND+1	;        EACH 1 BYTE
	CLC
	ROL	MCAND		; EXIT: HIPROD+1, 1 BYTE
	ROL	MCAND+1
;
STRM01:
	LDA	#0		; MULT MCAND * 2
	STA	HIPROD		; THEN MULT BY MLIER
	STA	HIPROD+1	; TAKE HI BYTE RESULT
	STA	HIPROD+2	; & WATCH FOR ROLL OVER
	STA	MLIER+1
;
STRM05:
	LSR	MLIER
	BCC	STRM07
;
	LDA	HIPROD
	CLC
	ADC	MCAND
	STA	HIPROD
	LDA	HIPROD+1
	ADC	MCAND+1
	STA	HIPROD+1
	LDA	HIPROD+2
	ADC	#0
	STA	HIPROD+2
;
STRM07:
	LDA	MLIER
	BEQ	STRM08
	ASL	MCAND
	ROL	MCAND+1
	BCC	STRM05
;
STRM08:
	LDA	HIPROD+2
	BEQ	STRM09
	LDA	#$FF		; WATCH FOR ROO OVER
	STA	HIPROD+1	; ROUND-OFF TO 255
STRM09:
	RTS
;
;
;
STRDIV:
	LDA	DVEND		; ENTRY: DVEND, DVSOR
	STA	PRODHI		;        BOTH ARE 1 BYTE
	LDA	#0		; EXIT: RESULT IN PRODLO
	LSR	PRODHI		;
	ROR	PRODLO		; PUT DVEND IN HI BYTE
	LDA	DVSOR		; DIVIDE BY 2
	STA	DIVISR		; THEN DIVIDE BY DVSOR
	JMP	DIVIDE
;
;
ADDIT:
	CLC
	ADC	SAVED1
	BCC	ADDI00
	LDA	#$FF
ADDI00:
	STA	SAVED1
;
	LDA	SAVED2
	ADC	#0
	BCC	ADDI01
	LDA	#$FF
	STA	SAVED1
ADDI01:
	STA	SAVED2
	RTS
;
;
SUBIT:
	STA	SA1
	LDA	SAVED1
	SEC
	SBC	SA1
	BCS	SUBI00
	LDA	#0
SUBI00:
	STA	SAVED1
;
	LDA	SAVED2
	SBC	#0
	BCS	SUBI01
	LDA	#$00
	STA	SAVED1
SUBI01:
	STA	SAVED2
	RTS
;
;
;
MAKIND:
	STX	SX1
	TXA
	AND	#$F0
	STA	SAVED3
	STA	SAVED5
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	STA	SAVED1
;
	TXA
	AND	#$0F
	STA	SAVED2
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	STA	SAVED4
	STA	SAVED6
	RTS
;
;
HITVAS:
	LDY	#$0F		; DID HE HIT MY VASSAL'S
	LDA	#0
	STA	MCAND
	STA	MCAND+1
;
HITVA1:
	STY	SY2
	LDA	LIEGE,Y
	CMP	SAVED1
	BNE	HITVA2
	JSR	HISADD
;
HITVA2:
	LDY	SY2
	DEY
	BPL	HITVA1
;
	LDX	SX1
	LDA	MCAND+1
	BNE	HITVA3
;
	LDA	MCAND
	CLC
	ADC	TB,X
	BCC	HITVA4
HITVA3:
	LDA	#$FF
HITVA4:
	STA	TB,X
	RTS
;
;
;
HITANY:
	LDY	#$0F		; HAS HE HIT ANYONE ?
	LDA	#0
	STA	MCAND
	STA	MCAND+1
;
HITAN1:
	STY	SY2
	JSR	HISADD
	LDY	SY2
	DEY
	BPL	HITAN1
;
	LDA	#$20		; V= TOTAL PILLAGE HISTORY
	STA	MLIER		; TIMES 1/8
	JSR	STRM01
;
	LDX	SX1
	LDA	HIPROD+1
	CLC
	ADC	TB,X
	BCC	HITAN2
	LDA	#$FF
HITAN2:
	STA	TB,X
	RTS
;
;
;
HISADD:
	LDA	SAVED4
	CLC
	ADC	SY2
	TAY
	LDA	HISTRY,Y
HISAD1:
	CLC
	ADC	MCAND
	STA	MCAND
	LDA	MCAND+1
	ADC	#0
	STA	MCAND+1
	RTS
;
;
HITJST:				; JUSTICE IS BEING
	LDY	#$0F		; INTERPRETED AS:
;
HITJS1:				; $FF MEANS I OWE A LOT TO
	STY	SY2		;     THIS KING
	LDA	SAVED4
	CLC			; $80 MEANS COMPLETELY NUETRAL
	ADC	SY2
	TAY			; $00 MEANS I AM TOTALLY
	LDA	JUSTIC,Y	;     IN PILLAGING HIM
	BMI	HITJS2
;
	ASL	A		; 0 TO 127
	EOR	#$FF		; 0 -> 255,  127 -> 01
	STA	FRAC
	LDA	HISTRY,Y
	JSR	FRCT1B
	JSR	HISAD1
	JMP	HITJS4
;
HITJS2:
	SEC			; 128 TO 255
	SBC	#$80		; 128 -> 0,  255 -> 255
	ASL	A
	STA	FRAC
	LDA	HISTRY,Y
	JSR	FRCT1B
	CLC
	ADC	MLIER		; UNJUSTIFIED HITS
	STA	MLIER
	LDA	MLIER+1
	ADC	#0
	STA	MLIER+1
;
HITJS4:
	LDY	SY2
	DEY
	BPL	HITJS1
;
	LDA	MCAND+1
	CMP	MLIER+1
	BCC	HITJS8		; MLIER+1 >
	BNE	HITJS5		; MCAND+1 >
	LDA	MCAND		; MLIER+1 = MCAND+1
	CMP	MLIER
	BCC	HITJS8
;
HITJS5:
	LDA	MCAND		; MCAND > OR = MLIER
	SEC
	SBC	MLIER
	STA	MCAND
	LDA	MCAND+1
	SBC	MLIER+1
	STA	MCAND+1
;
	LDX	SX1
	LDA	MCAND+1
	BNE	HITJS6
	LDA	TB,X		; JUSTIFIED HITS DON'T
	SEC			; COUNT AGAINST YOU
	SBC	MCAND
	BCS	HITJS7
HITJS6:
	LDA	#$00
HITJS7:
	STA	TB,X
	RTS
;
HITJS8:
	LDA	MLIER		; MLIER > MCAND
	SEC
	SBC	MCAND
	STA	MLIER
	LDA	MLIER+1
	SBC	MCAND+1
	STA	MLIER+1
;
	LDX	SX1
	LDA	MLIER+1
	BNE	HITJS9
	LDA	TB,X		; UNJUSTIFIED HITS COUNT
	CLC			; AGAINST YOU
	ADC	MLIER
	BCC	HITJS0
HITJS9:
	LDA	#$FF
HITJS0:
	STA	TB,X
	RTS
;
;
;
SCARY:				; TENDENCY TO HATE KINGS
	;	LDX	SAVED1		; WHOSE ARMIES ARE 
	;	LDY	SAVED2		; VASTLY BIGGER THAN
	;	LDA	ARMSIZ,Y	; HIMSELF
	;	CMP	ARMSIZ,X
	;	BCC	SCAR01
;
	;	SEC
	;	SBC	ARMSIZ,X
	;	LSR	A		; everyone hated the big
	;	LSR	A		; kings too much, not
	;	LSR	A		; enough low level reso-
	;	LSR	A		; lution.  perhaps a 
	;	CLC			; random element to slow
	;	LDX	SX1		; this down
	;	ADC	TB,X		;
	;	BCC	SCAR00
	;	LDA	#$FF
;
SCAR00:
	;	STA	TB,X
SCAR01:
	;	RTS
; LOAD.ASM   V01         JUNE 14,1983
;
; CODE WAS TRANSFERED INTO MAINLINE
; FROM EXC01M.ASM TO MAKE ROOM IN
; SWAP CODE AREA AND ALLOW LOODIT
; TO BE EXPANDED IF NEEDED TO SUPPORT
; ERROR MESSAGES
;
;
IOCB3	=	$30
EOF	=	$88
CIOV	=	$E456
;
ICHID	=	$0340
ICDNO	=	ICHID+1
ICCOM	=	ICDNO+1
ICSTA	=	ICCOM+1
ICBAL	=	ICSTA+1
ICBAH	=	ICBAL+1
ICPTL	=	ICBAH+1
ICPTH	=	ICPTL+1
ICBLL	=	ICPTH+1
ICBLH	=	ICBLL+1
ICAX1	=	ICBLH+1
ICAX2	=	ICAX1+1
;
OPEN	=	$03
GETCHR	=	$07
CLOSE	=	$0C
OREAD	=	$04
;
VCOUNT	=	$D40B
;
;
BADDL	ORG	*+1
BADDH	ORG	*+1
BENDL	ORG	*+1
BENDH	ORG	*+1
SAVL	ORG	*+1
SAVH	ORG	*+1
;
LOODIT:
	; THIS ROUTINE WILL LOAD A FILE OF DISK INTO RAM
	; IT GETS THE FILE NAME FROM A POINTER IN VARIABLE FILE
	; THIS ROUTINE, AS IT STANDS, HAS VERY POOR ERROR RECOVERY
;
	JSR	PLEASE
;
	LDX	#IOCB3
	LDA	#OPEN
	STA	ICCOM,X
	LDA	FILE
	STA	ICBAL,X
	LDA	FILE+1
	STA	ICBAH,X
	LDA	#OREAD
	STA	ICAX1,X
	LDA	#0
	STA	ICAX2,X
	JSR	CIOV
	BPL	CONT04
	JMP	ERROR
;
CONT04:
	JSR	GETNXT
	JSR	GETNXT

CONT02:
	JSR	GETNXT
	BCS	CONT03

	STA	BADDL
	JSR	GETNXT
	STA	BADDH
	JSR	GETNXT
	STA	BENDL
	JSR	GETNXT
	STA	BENDH

	LDX	#IOCB3
	LDA	#GETCHR
	STA	ICCOM,X

	LDA	BADDL
	STA	ICBAL,X
	LDA	BADDH
	STA	ICBAH,X

	LDA	BENDL
	SEC
	SBC	BADDL
	STA	SAVL
	LDA	BENDH
	SBC	BADDH
	STA	SAVH

	LDA	SAVL
	CLC
	ADC	#1
	STA	ICBLL,X
	LDA	SAVH
	ADC	#0
	STA	ICBLH,X

	JSR	CIOV
	JMP	CONT02

CONT03:
	LDX	#IOCB3
	LDA	#CLOSE
	STA	ICCOM,X
	JSR	CIOV
	BPL	CONT05
	CPY	#$88
	BEQ	CONT05
	JMP	ERROR
;
CONT05:
	RTS
;
;
GETNXT:
	LDX	#IOCB3
	LDA	#GETCHR
	STA	ICCOM,X
	LDA	#0
	STA	ICBAL,X
	STA	ICBAH,X
	STA	ICBLL,X
	STA	ICBLH,X
	JSR	CIOV
	BPL	GETNX1
;
	CPY	#$88
	BNE	GETNX0
	SEC
	RTS
;
GETNX0:
	PLA
	PLA
	JMP	ERROR
;
GETNX1:
	CLC
	RTS
;
;
MASKER:	DB	$80
;
;
;
ERROR:
	JSR	COLORS		; SET UP THE ERROR SCREEN
;
	LDA	#ERRDL/256
	STA	DLISTH
	STA	$D403
	LDA	#ERRDL&255
	STA	DLISTL
	STA	$D402
;
	JSR	SETUP
;
	JSR	READIT
;
	LDX	#IOCB3		; CLOSE FILE
	LDA	#CLOSE
	STA	ICCOM,X
	JSR	CIOV
;
	JMP	LOODIT		; TRY IT AGAIN
;
SAVCLK:	DB	0
;
;
;
PLEASE:
	JSR	COLORS		; SET UP THE ERROR SCREEN
;
	LDA	#WAITDL/256
	STA	DLISTH
	STA	$D403
	LDA	#WAITDL&255
	STA	DLISTL
	STA	$D402
;
SETUP:
	LDA	VCOUNT
	CMP	#16
	BCS	SETUP
;
	LDA	#$E0		; CHBASE
	STA	$D409
	STA	$2F4
;
	LDA	#$04		; PRIOR
	STA	$D01B
	STA	$26F
;
	LDA	#$08
	STA	COLOR1
	STA	$D017		; COLPF1
;
	LDA	#$2E		; DMACTL
	STA	$D400
	STA	$22F
;
	RTS
;
;
;
READIT:
	LDX	#10
	STX	READSV
READT0:
	LDX	#255
	JSR	WAYT
	DEC	READSV
	BNE	READT0

;## 	LDX	#255
;## 	JSR	WAYT
;## 	LDX	#255
;## 	JSR	WAYT
;## 	LDX	#255
;## 	JSR	WAYT
;## 	LDX	#255
;## 	JSR	WAYT
;## 	LDX	#255
;## 	JSR	WAYT
;## 	LDX	#255
;## 	JSR	WAYT
;## 	LDX	#255
;## 	JSR	WAYT
;## 	LDX	#255
;## 	JSR	WAYT
;## 	LDX	#255
;## 	JSR	WAYT
;## 	LDX	#255
;## 	JSR	WAYT
;
	LDA	#$00		; TURN OFF SCREEN
	STA	$D400
	STA	$22F
;
	LDX	#255
	JSR	WAYT
	LDX	#255
	JSR	WAYT
;
	RTS
READSV:	DB	0
;
;
;
ERRDL:
	DB	$70,$70,$70,$70,$70
	DB	$70,$70,$70,$70,$70
	DB	$70,$70,$30
	DB	$47	; LMS
	DW	ERRTXT
	DB	$41	; JMP & WAIT FOR VERT BLANK
	DW	ERRDL
;
;
ERRTXT:
	DB	0,0,0,0
	DB	'disk',0,'error'
	DB	0,0,0,0,0,0,0,0,0
;
;
;
WAITDL:
	DB	$70,$70,$70,$70,$70
	DB	$70,$70,$70,$70,$70
	DB	$70,$70,$30
	DB	$47	; LMS
	DW	WAITXT
	DB	$41	; JMP & WAIT FOR VERT BLANK
	DW	WAITDL
;
;
WAITXT:
	DB	0,0,0,0
	DB	'please',0,'wait'
	DB	0,0,0,0,0,0,0,0
;
;

;BATSIM VERSION 0  MARCH 29, 1983
;battle simulator for EXCALIBUR
;inputs: ATAKR, DEFNDR
;outputs: VICLOS, LOSLOS, WINNER, TURKEY
;
;formulae: given that BIGARM is the
;size of the bigger army,
;and that SMLARM is the size of the
;smaller army, and that
;BIGLOS and SMLLOS are their respective losses, then
;
;BIGLOS=(.5*(SMLARM/BIGARM)**2)*SMLARM
;SMLLOS=(.5*(SMLARM/BIGARM)**2)*BIGARM
;
;Note that the attacking army will lose
;one man-at-arms for every eight defending peasants.
;
;We randomize the above formulae by
;replacing the leading coefficient
;(.5) with the term:
;(.25+RND/2)
;where RND is a random number between
;zero and one.
;adjustment to work with 8-bit-words
;is already in the code.
;
;
;input parameters
; ATACKR (1)
; DEFNDR (1)
;
;output parameters
; VICLOS (1)
; LOSLOS (1)
; WINNER (1)
; TURKEY (1)
;
;
;internal variables
ATKARM	ORG	*+1	;attacker army size
DEFARM	ORG	*+1	;defender army size
SMLARM	ORG	*+1	;smaller army size
BIGARM	ORG	*+1	;bigger army size
BIGKNG	ORG	*+1	;bigger king
SMLKNG	ORG	*+1	;smaller king
BIGLOS	ORG	*+1	;bigger army's loss
SMLLOS	ORG	*+1	;smaller army's loss
PEASNT	ORG	*+1	;number of peasants
RATSQD	ORG	*+1	;(SMLARM/BIGARM)**2
BIGFNL	ORG	*+1	;final size of bigger army
SMLFNL	ORG	*+1	;final size of smaller army
SAVKNT	ORG	*+1	;TEMP VALUE
;
;
BATSIM:
	STX	BATX
	STY	BATY
;
	JSR	FIGFRC
	LDX	ATACKR
	LDA	HAIRY,X
	STA	FRAC
	LDA	ARMSIZ,X
	JSR	FRCT1B
	STA	ATKARM
;
	LDX	ATACKR
	LDA	HAIRY,X
	STA	FRAC
	LDA	KGKNTS,X
	JSR	FRCT1B
	STA	SAVKNT		; KNIGHT NOT = 3 MAA
;**	ASL	A
;**	CLC
;**	ADC	SAVKNT
	CLC
	ADC	ATKARM
	STA	ATKARM
	BCC	Z99
	LDA	#$FF
	STA	ATKARM
;
Z99:
	JSR	FIGXTM
	JSR	FIGPST
;
Z05:
	LDA	ATKARM
	SEC
	SBC	PEASNT
	BCS	Z09
	LDA	#0
Z09	STA	ATKARM	;peasants take their toll first
;
	LDX	DEFNDR
	LDA	HOMKNT,X
;**	ASL	A
;**	BCS	Z10
;**	ADC	HOMKNT,X
;**	BCS	Z10
	ADC	HOMARM,X
	BCC	Z11
Z10:
	LDA	#$FF
Z11:
	STA	DEFARM		;defender's army size
;
;**	CPX	#$00		; ARTHUR GET'S A BOOST
;**	BNE	Z12		; CAUSE STARTS WITH FEW
;**	LDA	#6		; KNIGHTS AND EACH ONE IS
;**	CLC			; WORTH 3 MEN-AT-ARMS
;**	ADC	DEFARM
;**	STA	DEFARM
;**	BCC	Z12
;**	LDA	#$FF
;**	STA	DEFARM
;
Z12:
	LDX	DEFNDR
	LDA	LIEGE,X
	CMP	#$10
	BCS	Z00	;leigelord contribution
	STA	TYMP2
	JSR	MULX16	; get distance
	CLC
	ADC	TYMP2
	TAX
	LDY	DIST,X
	LDA	FRCDST,Y	; get fraction shared
	STA	FRAC
	LDY	TYMP2
	LDA	HOMARM,Y
	JSR	FRCT1B
	CLC		; add to defending army
	ADC	DEFARM
	BCC	Z01
	LDA	#$FF
Z01	STA	DEFARM
;
Z00
	LDX	DEFNDR		; GET LEADERSHIP VALUE
	LDA	RANDOM		; TO SCALE ARMY SIZE
	AND	#$7F
	ADC	KGAVE,X
	STA	FRAC
	LDA	DEFARM
	JSR	FRCT1B
	STA	DEFARM
;
	LDX	ATACKR		; GET LEADERSHIP VALUE
	LDA	RANDOM		; TO SCALE ARMY SIZE
	AND	#$7F
	ADC	KGAVE,X
	STA	FRAC
	LDA	ATKARM
	JSR	FRCT1B
	STA	ATKARM
;
	LDA	DEFARM
	LDY	ATACKR
	STY	SMLKNG	;assume for now that attacker is smaller
	LDY	DEFNDR
	LDX	ATKARM
	CMP	ATKARM
	BCS	Z02
;
	TXA
	LDX	DEFARM
	LDY	DEFNDR
	STY	SMLKNG	;actually, defender is smaller
	LDY	ATACKR
;
Z02	STA	BIGARM
	STX	SMLARM
	STY	BIGKNG
;
	STX	PRODHI
	STA	DIVISR
	LDA	#0
	STA	PRODLO
	JSR	DIVIDE	;SMLARM/BIGARM
	LDA	PRODLO
	STA	MULTPR
	STA	DIVISR
	JSR	MULTPY	;(SMLARM/BIGARM)**2
	LDA	PRODHI
	STA	RATSQD
	STA	MULTPR
	LDA	RANDOM
	LSR	A
	CLC
	ADC	#$40
	STA	DIVISR
	JSR	MULTPY	;(.25+RND/2)*(SMLARM/BIGARM)**2
	LDA	PRODHI
	STA	MULTPR
	LDA	SMLARM
	STA	DIVISR
	JSR	MULTPY	;((.25+RND/2)*(SMLARM/BIGARM)**2)*SMLARM
	LDA	PRODHI
	STA	BIGLOS
;
	LDA	RANDOM
	LSR	A
	CLC
	ADC	#$40
	STA	MULTPR
	LDA	RATSQD
	STA	DIVISR
	JSR	MULTPY	;(.25+RND/2)*(SMLARM/BIGARM)**2
	LDA	PRODHI
	STA	MULTPR
	LDA	BIGARM
	STA	DIVISR
	JSR	MULTPY	;BIGARM*(.25+RND/2)*(SMLARM/BIGARM)**2
	LDA	PRODHI
	STA	SMLLOS
;
;determine who has the largest final army
;that king wins the battle
;
	LDA	BIGARM
	SEC
	SBC	BIGLOS
	STA	BIGFNL
	LDA	SMLARM
	SEC
	SBC	SMLLOS
	STA	SMLFNL
;
;(no, neither computation can roll under)
;
	LDX	BIGKNG
	LDY	SMLKNG
	CMP	BIGFNL
	BCC	Z03
;
;smaller side won
;
	STX	TURKEY
	STY	WINNER
	LDX	SMLLOS
	LDY	BIGLOS
	JMP	Z04
;
;bigger side won
;
Z03	STX	WINNER
	STY	TURKEY
	LDX	BIGLOS
	LDY	SMLLOS
;
Z04	STX	VICLOS
	STY	LOSLOS
;
	LDX	BATX
	LDY	BATY
	RTS
;
BATX:	DB	0
BATY:	DB	0
;
;
;
DIVIDE:
	LDY	#16
	LDA	#0
	STA	MULTPR
;
DIVZ00:
	ASL	PRODLO
	ROL	PRODHI
	ROL	MULTPR
	BCC	DIVZ01
	LDA	MULTPR
	SBC	DIVISR
	JMP	DIVZ02
;
DIVZ01:
	LDA	MULTPR
	SEC
	SBC	DIVISR
	BCC	DIVZ03
;
DIVZ02:
	STA	MULTPR
	INC	PRODLO
;
DIVZ03:
	DEY
	BNE	DIVZ00
	RTS
;
;
;
FIGPST:
	LDY	DEFNDR
	LDA	ACTCRP,Y
	STA	PRODLO
	LDA	#0
	STA	PRODHI
	LDA	EXPTMH
	STA	TYMP2
	LDA	EXPTML
;**	LSR	TYMP2
;**	ROR	A
	LSR	TYMP2
	BEQ	X64
	SEC
	LDA	#$FF
X64	ROR	A
	STA	DIVISR
	JSR	DIVIDE
	LDY	PRODLO
	INY	;guarantees at least one casualty
	LDA	#0
	STA	PEASNT
	LDA	ATKARM
	STA	TYMP3
Y26:
	LDA	TYMP3
	CMP	SAVKNT
	BCC	Y27
	BEQ	Y27
	DEC	TYMP3
	INC	PEASNT
	DEY
	BNE	Y26
Y27:
	RTS
;
TYMP2:	DB	0
TYMP3:	DB	0
;
;
;
FIGXTM:
	LDY	ATACKR		; FIGURES EXPERIENCE
FIGIT:
	LDA	ARMEXP,Y	; PER MAA FOR ATTACKER
	STA	PRODLO
	LDA	ARMEXP+16,Y
	STA	PRODHI
	LDA	FLDARM,Y	;LDA	ARMSIZ,Y
	CLC
	ADC	HOMARM,Y
	STA	DIVISR
	JSR	DIVIDE
	LDA	PRODHI
	STA	EXPTMH
	LDA	PRODLO
	STA	EXPTML
;
	LDA	EXPTMH		; EXP/MAN CAN NOT BE
	BEQ	FIGXT0		; GREATER THAN 255
	LDA	#0
	STA	EXPTMH
	LDA	#$FF
	STA	EXPTML
;
FIGXT0:
	RTS
;
EXPTML:	DB	0
EXPTMH:	DB	0
;
;
;
KGLDR:				; NOT USED AT PRESENT
	;	DB	$7F,$20,$60,$10
	;	DB	$7F,$50,$20,$70
	;	DB	$40,$30,$60,$10
	;	DB	$70,$30,$50,$20
;
KGLOYT:				; NOT USED AT PRESENT
	;	DB	$10,$30,$40,$70
	;	DB	$60,$10,$20,$50
	;	DB	$60,$40,$40,$10
	;	DB	$50,$60,$20,$70
;
;
KGAVE:				; THIS IS AN AVERAGE OF
	DB	$78,$38,$50,$10		; ($80-KGLOYT)
	DB	$4F,$60,$40,$50		; + KGLDR
	DB	$30,$38,$50,$40		; SO ABSTRACT
	DB	$60,$28,$58,$48		; CAN BE REAL
;
;
;
FIGFRC:
	LDA	ATACKR
	ASL	A
	ASL	A
	ASL	A
	ASL	A
	CLC
	ADC	DEFNDR
	TAX
	LDY	DIST,X
	LDA	FLDFRC,Y
	LDX	ATACKR
	STA	HAIRY,X
	RTS
;
;
;
	LIST	L,I
	INCLUDE	D4:EQUATE.DAT
;
	ORG	$B0
STRPTR	ORG	*+2
SAVA	ORG	*+1
SAVX	ORG	*+1
SAVY	ORG	*+1
;
;
	ORG	LOGADD
	JMP	GOTOIT
	JMP	PASDL
	JMP	LOODIT
;
;
	LIST	L,I
	INCLUDE	D4:LOAD.ASM
;
	LIST	L,I
	INCLUDE	D4:LOGIC.ASM
;
	LIST	L,I
	INCLUDE	D4:ECON.ASM
	LIST	L,I
	INCLUDE	D4:LOGSUB.ASM
;
	LIST	L,I
	INCLUDE	D4:BATSIM.ASM
;
	LIST	L,I
	INCLUDE	D4:DISTANCE.ASM
;
	LIST	L,I
	INCLUDE	D4:FDIVIDE.ASM
;
	LIST	L,I
	INCLUDE	D4:DIPLOMAT.ASM
;
	LIST	L,I
	INCLUDE	D4:STRFARE.ASM
;
	LIST	L,I
	INCLUDE	D4:KNTAI.ASM
;
	LIST	L,I
	INCLUDE	D4:PAUSE.ASM
;
	END

